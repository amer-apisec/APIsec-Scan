{
  "openapi": "3.0.1",
  "info": {
    "title": "RS.Customer.API",
    "version": "v1"
  },
  "paths": {
    "/api/ApplicationSettings/culture": {
      "get": {
        "tags": [
          "ApplicationSettings"
        ],
        "summary": "Gets application culture",
        "operationId": "GetCulture",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/login/init": {
      "get": {
        "tags": [
          "BankId"
        ],
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIdAuthInitModel"
                }
              }
            }
          }
        }
      }
    },
    "/login/auth": {
      "post": {
        "tags": [
          "BankId"
        ],
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/BankIdCreateTokenModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/BankIdCreateTokenModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/BankIdCreateTokenModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIdAuthViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/login/register": {
      "post": {
        "tags": [
          "BankId"
        ],
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/BankIdCreateCustomerModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/BankIdCreateCustomerModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/BankIdCreateCustomerModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTokenViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "BankId"
        ],
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bingo/clientsetting": {
      "put": {
        "tags": [
          "Bingo"
        ],
        "summary": "Saves the current users bingo client settings",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The bingo client settings",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/ClientSettingModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/ClientSettingModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/ClientSettingModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Bingo"
        ],
        "summary": "Gets the current users bingo client settings",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSettingModel"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSettingModel"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSettingModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bingo/graphic/{bingoGameId}/{graphicTypeId}": {
      "get": {
        "tags": [
          "Bingo"
        ],
        "summary": "Returns a base64-encoded image data string\r\nBrowser caches result for 1 hour\r\nServer caches result for 15 seconds since last request",
        "parameters": [
          {
            "name": "bingoGameId",
            "in": "path",
            "description": "The id of the bingo game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "graphicTypeId",
            "in": "path",
            "description": "What kind of image is it -  LogoBig = 1, LogoSmall = 2, BackgroundBig = 3, BackgroundSmall = 4",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bingo/rooms": {
      "get": {
        "tags": [
          "Bingo"
        ],
        "summary": "Gets a list of all active bingo rooms",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BingoRoomListModel"
                  }
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BingoRoomListModel"
                  }
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BingoRoomListModel"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/Bingo/round/{bingoRoundId}": {
      "get": {
        "tags": [
          "Bingo"
        ],
        "summary": "Gets a specific round by id",
        "parameters": [
          {
            "name": "bingoRoundId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/BingoRoundViewModel"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/BingoRoundViewModel"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/BingoRoundViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bingo/round/replay/{cardId}": {
      "get": {
        "tags": [
          "Bingo"
        ],
        "summary": "Replays a bingoRound based on bingoCardId",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ReplayBingoRoundView"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ReplayBingoRoundView"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ReplayBingoRoundView"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bingo/round/next": {
      "get": {
        "tags": [
          "Bingo"
        ],
        "summary": "Gets the upcoming bingoRound for all bingo rooms",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NextRoundViewModel"
                  }
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NextRoundViewModel"
                  }
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NextRoundViewModel"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/Bingo/cards/{bingoRoundId}": {
      "get": {
        "tags": [
          "Bingo"
        ],
        "summary": "Gets a list of all pre-purchased cards and\r\ncards available for purchase for the specified round.",
        "parameters": [
          {
            "name": "bingoRoundId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardModel"
                  }
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardModel"
                  }
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardModel"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bingo/{cardId}": {
      "get": {
        "tags": [
          "Bingo"
        ],
        "summary": "Gets the specific card by id",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/BoughtBingoCardModel"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/BoughtBingoCardModel"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/BoughtBingoCardModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bingo": {
      "post": {
        "tags": [
          "Bingo"
        ],
        "summary": "Purchases the specific cards",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseBingoCardModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseBingoCardModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseBingoCardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoughtBingoCardModel"
                  }
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoughtBingoCardModel"
                  }
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoughtBingoCardModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bingo/prebuy": {
      "post": {
        "tags": [
          "Bingo"
        ],
        "summary": "Buys the specified number of cards in advance for the round specified",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PreBuyBingoCardModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PreBuyBingoCardModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PreBuyBingoCardModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bingo/jackpots": {
      "get": {
        "tags": [
          "Bingo"
        ],
        "summary": "Gets a list of all currently active jackpots",
        "parameters": [
          {
            "name": "numberOfJackpotsToShow",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BingoJackpotListModel"
                  }
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BingoJackpotListModel"
                  }
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BingoJackpotListModel"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/Quiz/Competitions/{entityId}": {
      "get": {
        "tags": [
          "Competitions"
        ],
        "summary": "Gets a competition by id",
        "operationId": "GetQuizCompetitionByIdAsync",
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "The competition id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizCompetitionViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Competitions": {
      "get": {
        "tags": [
          "Competitions"
        ],
        "summary": "Get all currently active competitions, also possible to get leaderboard information",
        "operationId": "GetActiveQuizCompetitionAsync",
        "parameters": [
          {
            "name": "includeLeaderboards",
            "in": "query",
            "description": "Will fetch leaderboards if set to true.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuizCompetitionViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/CompetitionTypes/{entityId}": {
      "get": {
        "tags": [
          "CompetitionTypes"
        ],
        "summary": "Gets the competition type name by competition type id.",
        "operationId": "GetQuizCompetitionTypeByIdAsync",
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "The competition type id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizCompetitionTypeViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Contacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "The contact us form should be sent here",
        "operationId": "PostQuizContact",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/ContactUsModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/ContactUsModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/ContactUsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets the customer.",
        "operationId": "GetCustomer",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Creates a new customer.",
        "operationId": "PostCustomer",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Incorrect_Clearing_Number<br />\r\nIncorrect_Account_Number<br />\r\nCustomer_Not_Found_In_Spar<br />\r\nCustomer_Is_Not_Swedish_Citizen<br />\r\nCustomer_Not_Living_In_Required_Country<br />\r\n"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Updates the customer.",
        "operationId": "PutCustomer",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerViewModel"
                }
              }
            }
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Invalid_Email<br />\r\nCant_Change_Nickname_Too_Frequently<br />\r\nNot_Unique_Nickname<br />\r\nChat_Nickname_Contains_Blacklisted_Word<br />\r\n"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Removes a customer.",
        "operationId": "DeleteCustomer",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/UpdateBankingAccount": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Sets the banking account number",
        "operationId": "PutBankingAccount",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankingAccountUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Incorrect_Clearing_Number<br />\r\n"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/Customer/GetBankingAccount": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets the banking account number",
        "operationId": "GetBankingAccount",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankingAccountViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/CanBuyTickets": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Determines whether current customer can buy tickets.",
        "operationId": "GetCanBuyTickets",
        "parameters": [
          {
            "name": "gameBaseId",
            "in": "query",
            "description": "The game base identifier or BingoGameId.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cost",
            "in": "query",
            "description": "cost of the game",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "isBingo",
            "in": "query",
            "description": "Is the Id for a bingo ID.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "checkBalance",
            "in": "query",
            "description": "if set to `true` [check balance].",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CanBuyViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/UpdateSocialSecurityNumber/{newSocialSecurityNumber}": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Updates the social security number",
        "operationId": "PutSocialSecurityNumber",
        "parameters": [
          {
            "name": "newSocialSecurityNumber",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />SSN_Invalid_Format<br />\r\nUnderage<br />\r\nSSN_Invalid_Control_Digit<br />\r\n"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/Customer/PEP": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Updates the PEP status",
        "operationId": "PutPEP",
        "parameters": [
          {
            "name": "PEP",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Customer_Not_Found<br />\r\n"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Sets the PEP status",
        "operationId": "PostPEP",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPepCreateModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get if PEP is required for the customer",
        "operationId": "GetPEPIsRequired",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/ChangePassword": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Changes the password.",
        "operationId": "PutPassword",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CustomerChangePasswordModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CustomerChangePasswordModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CustomerChangePasswordModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/customerinfo": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets names, nickname and avatar for the customer",
        "operationId": "GetCustomerInfo",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDetailsPublicDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerBonus": {
      "get": {
        "tags": [
          "CustomerBonus"
        ],
        "summary": "Gets all bonuses for customer.",
        "operationId": "GetBonusesForCustomerAsync",
        "parameters": [
          {
            "name": "onlyActive",
            "in": "query",
            "description": "if set to `true` only currently active bonuses are shown.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerBonusViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerBonus/getVouchers": {
      "get": {
        "tags": [
          "CustomerBonus"
        ],
        "summary": "Gets all vouchers for customer that match the filters.",
        "operationId": "GetVouchersAsync",
        "parameters": [
          {
            "name": "gameType",
            "in": "query",
            "description": "Optional: Filter for gameType",
            "schema": {
              "$ref": "#/components/schemas/BaseGameType"
            }
          },
          {
            "name": "gameId",
            "in": "query",
            "description": "Optional: Filter for gameId",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeConsumed",
            "in": "query",
            "description": "If consumed vouchers should be included",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeExpired",
            "in": "query",
            "description": "If expired vouchers should be included",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "If expired vouchers should be included",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "If expired vouchers should be included",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerVoucherViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerBonus/utilizeBonusCode": {
      "post": {
        "tags": [
          "CustomerBonus"
        ],
        "summary": "Utilizes bonus code for customer",
        "operationId": "PostUtilizeBonusCodeAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CustomerActivateBonusCodeModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CustomerActivateBonusCodeModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CustomerActivateBonusCodeModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "<strong>Possible error messages.</strong><br />No_Bonus_Found<br />\r\nBonus_Not_Activated<br />\r\nBonus_Expired<br />\r\nBonus_Already_Activated_For_Customer<br />\r\nBonus_Customer_Limit_Reached<br />\r\nBonus_Source_Not_Matching<br />\r\nBonus_SignupOffer_Not_Matching<br />\r\nToo_Low_Deposit_Amount<br />\r\nCustomer_Already_Received_A_Bonus<br />\r\n"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/CustomerBonus/notSeenEvents": {
      "get": {
        "tags": [
          "CustomerBonus"
        ],
        "summary": "Gets all, by the customer, unseen bonuses and marks them as seen",
        "operationId": "GetNotSeenBonusEventsAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerBonusEventDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerLimit": {
      "get": {
        "tags": [
          "CustomerLimit"
        ],
        "summary": "Gets customers current limits",
        "operationId": "GetLimits",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerLimit"
        ],
        "summary": "Updates limit.",
        "operationId": "PutLimit",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/LimitUpdateModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/LimitUpdateModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/LimitUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitViewModel"
                }
              }
            }
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Deposit_Limit_Not_Active<br />\r\nValue_Is_Less_Than_Deposit_Limit_Minimum_{0}<br />\r\nDeposit_Day_Max_{0}<br />\r\nDeposit_Week_Max_{0}<br />\r\nDeposit_Month_Max_{0}<br />\r\nValue_Is_Less_Than_Loss_Limit_Minimum_{0}<br />\r\nLoss_Day_Max_{0}<br />\r\nLoss_Week_Max_{0}<br />\r\nLoss_Month_Max_{0}<br />\r\nValue_Is_Less_Than_GameTime_Limit_Minimum_{0}<br />\r\nGame_Time_Day_Max_{0}<br />\r\nGame_Time_Week_Max_{0}<br />\r\nGame_Time_Month_Max_{0}<br />\r\n"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/CustomerTransaction/history": {
      "get": {
        "tags": [
          "CustomerTransaction"
        ],
        "summary": "Gets the transaction history for the current customer.",
        "operationId": "GetHistoryAsync",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2147483647
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerTransactionHistoryMiniDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerTransaction/withdrawMoney": {
      "post": {
        "tags": [
          "CustomerTransaction"
        ],
        "summary": "Withdraws money.",
        "operationId": "PostWithdrawMoneyAsync",
        "parameters": [
          {
            "name": "sourceId",
            "in": "query",
            "description": "The source identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "The amount.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Too_Low_Withdraw_Money_Amount<br />\r\nInvalid_Withdraw_Money_Amount<br />\r\nWithdrawal_Month_Limit_Hit<br />\r\nIncorrect_Clearing_Number<br />\r\nIncorrect_Account_Number<br />\r\n"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/CustomerTransaction/withdrawMoneyToBankAccount": {
      "post": {
        "tags": [
          "CustomerTransaction"
        ],
        "summary": "Withdraws the money to bank account.",
        "operationId": "PostWithdrawMoneyToBankAccountAsync",
        "parameters": [
          {
            "name": "sourceId",
            "in": "query",
            "description": "The source identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "The amount.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Too_Low_Withdraw_Money_Amount<br />\r\nInvalid_Withdraw_Money_Amount<br />\r\nWithdrawal_Month_Limit_Hit<br />\r\nIncorrect_Clearing_Number<br />\r\nIncorrect_Account_Number<br />\r\n"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/CustomerTransaction/moneyBalance": {
      "get": {
        "tags": [
          "CustomerTransaction"
        ],
        "summary": "Gets the money balance.",
        "operationId": "GetMoneyBalanceAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerTransaction/bonusBalance": {
      "get": {
        "tags": [
          "CustomerTransaction"
        ],
        "summary": "Gets the bonus balance.",
        "operationId": "GetBonusBalanceAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerTransaction/goodsBalance": {
      "get": {
        "tags": [
          "CustomerTransaction"
        ],
        "summary": "Gets the goods balance.",
        "operationId": "GetGoodsBalanceAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerTransaction/combinedBalance": {
      "get": {
        "tags": [
          "CustomerTransaction"
        ],
        "summary": "Gets the combined balance.",
        "operationId": "GetCombinedBalanceAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalanceViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerTransaction/customerpurchases/{pageNumber}/{pageSize}": {
      "get": {
        "tags": [
          "CustomerTransaction"
        ],
        "summary": "Returns list of transactions based on pagination and condition",
        "operationId": "GetCustomerPurchasesPaged",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "lastPurchaseDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GamePurchaseTransactionDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerTransaction": {
      "get": {
        "tags": [
          "CustomerTransaction"
        ],
        "summary": "Get Customer's all transactions",
        "operationId": "GetCustomerTransactions",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerTransactionViewDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/CustomerWarnings": {
      "get": {
        "tags": [
          "CustomerWarnings"
        ],
        "summary": "Checks if a customer should get a gaming warning",
        "operationId": "GetQuizWarningForCustomer",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizCustomerWarningViewModel"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Game": {
      "put": {
        "tags": [
          "Game"
        ],
        "summary": "Purchases a ticket for specific ticket-based game, expand buyArguments for more details.",
        "operationId": "PutBuyGameTicketAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model containing instructions on what to buy, expand buyArguments for more details.",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/BuyTicketModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/BuyTicketModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/BuyTicketModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GamePurchaseResultDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Game not found.<br />\r\nPurchase_Failed<br />\r\nHas_Game_Stop<br />\r\nHas_Exceeded_Loss_Limit<br />\r\nHas_Exceeded_Time_Limit<br />\r\nDeposit_Limit_Not_Set<br />\r\nNot_Enough_Funds_To_Pay<br />\r\nNot_Enough_Money_To_Pay<br />\r\nNot_Enough_Goods_To_Pay<br />\r\nNot_Enough_Bonus_To_Pay<br />\r\n"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/Game/demo/{gameId}": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Gets a demo ticket for the specific ticket-based game.",
        "operationId": "GetGameDemoTicket",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Game not found.<br />\r\n"
          }
        }
      }
    },
    "/api/Game/getTicket": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Gets the ticket.",
        "operationId": "GetTicketByGameCollectionIdAsync",
        "parameters": [
          {
            "name": "combinationId",
            "in": "query",
            "description": "The combination identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResultDTO"
                }
              }
            }
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Tickets not found.<br />\r\nGame not found.<br />\r\n"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/Game/getUnfinishedTickets": {
      "post": {
        "tags": [
          "Game"
        ],
        "summary": "Gets any unfinished tickets by filter",
        "operationId": "PostGetUnfinishedTicketsAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGetUnfinishedTicketsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GameResultDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Game/getUnfinishedTicketsMultipleGameBases": {
      "post": {
        "tags": [
          "Game"
        ],
        "summary": "Gets unfinished tickets filtered by gameBaseIds.",
        "operationId": "PostUnfinishedTicketsMultipleGameBasesAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUnfinishedTicketsMultipleGameBasesModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GameResultDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Game/finalizeTicket": {
      "put": {
        "tags": [
          "Game"
        ],
        "summary": "Finalizes a ticket",
        "operationId": "PutFinalizeTicketAsync",
        "parameters": [
          {
            "name": "gameType",
            "in": "query",
            "description": "The game type of the ticket",
            "schema": {
              "$ref": "#/components/schemas/GameType"
            }
          },
          {
            "name": "ticketId",
            "in": "query",
            "description": "The tickets identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Ticket_Could_Not_Be_Finalized<br />\r\n"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/Game/finalizeGameCollection/{correlationId}": {
      "put": {
        "tags": [
          "Game"
        ],
        "summary": "Finalizes all tickets in a game collection with the same correlationId",
        "operationId": "PutFinalizeGameCollectionAsync",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "description": "The gameCollectionTickets identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResultDTOResultObject"
                }
              }
            }
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />No_Purchases_Found<br />\r\nNo_GameCollection_Found<br />\r\n"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/GameStop": {
      "get": {
        "tags": [
          "GameStop"
        ],
        "summary": "Checks if the current user has an active gamestop.",
        "operationId": "GetGameStopAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameStopViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GameStop"
        ],
        "summary": "Sets Game stop on Customer and defines game stop length",
        "operationId": "PostGameStopAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/GameStopCreateModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/GameStopCreateModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/GameStopCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameStopViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "<strong>Possible error messages.</strong><br />Has_External_Game_Stop<br />\r\n"
          }
        }
      }
    },
    "/api/Gamifications/balance": {
      "get": {
        "tags": [
          "Gamifications"
        ],
        "summary": "Gets a customers balance",
        "operationId": "GetCustomerGamificationBalance",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGamificationBalance"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGamificationBalance"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGamificationBalance"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gamifications/products/{gamificationId}": {
      "get": {
        "tags": [
          "Gamifications"
        ],
        "summary": "Gets a customers balance",
        "operationId": "ShopItems",
        "parameters": [
          {
            "name": "gamificationId",
            "in": "path",
            "description": "The gamificationId of the shopitems we are looking for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGamificationShopItem"
                  }
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGamificationShopItem"
                  }
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGamificationShopItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gamifications/variables": {
      "get": {
        "tags": [
          "Gamifications"
        ],
        "summary": "Gets a customer's gamification variables.\r\n 4 different ways of searching:\r\n * local and global (all) variables (set gamification id to null, set getAllVariables = true)\r\n * local and global (all) variables for a gamification (set gamificationId, set getAllVariables = true)\r\n * only local variables for a gamification (set gamificationId, set getAllVariables = false)\r\n * only global variables (set gamificationId to null, set getAllVariables = false)",
        "operationId": "GetCustomerGamificationVariables",
        "parameters": [
          {
            "name": "gamificationId",
            "in": "query",
            "description": "The gamification identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "getAllVariables",
            "in": "query",
            "description": "if set to `true` [get all variables].",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGamificationVariablesListModel"
                  }
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGamificationVariablesListModel"
                  }
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGamificationVariablesListModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Gamifications/customerproducts": {
      "post": {
        "tags": [
          "Gamifications"
        ],
        "operationId": "BuyCustomerProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Helpers": {
      "get": {
        "tags": [
          "Helpers"
        ],
        "summary": "Gets a customers all helpers by customer id.",
        "operationId": "GetQuizHelperByCustomerId",
        "parameters": [
          {
            "name": "setHelperAsSeen",
            "in": "query",
            "description": "The helpers will be set to seen if setHelpersAsSeen is true<br />\r\n            Should be set to true when displaying new helpers animations.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuizCustomerHelperViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Helpers"
        ],
        "summary": "Gives a new customer the default helpers",
        "operationId": "PostDefaultQuizHelpersAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuizCustomerHelperViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Incident": {
      "post": {
        "tags": [
          "Incident"
        ],
        "summary": "Adds an incident",
        "operationId": "PostIncidentAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/IncidentDTO"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/IncidentDTO"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/IncidentDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Jackpot/{id}": {
      "get": {
        "tags": [
          "Jackpot"
        ],
        "operationId": "GetJackpotById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JackpotViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Prizes/{prizeId}": {
      "get": {
        "tags": [
          "Prizes"
        ],
        "summary": "Gets a prize by id",
        "operationId": "GetQuizPrizeByIdAsync",
        "parameters": [
          {
            "name": "prizeId",
            "in": "path",
            "description": "The prize identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizPrizeViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Prizes": {
      "get": {
        "tags": [
          "Prizes"
        ],
        "summary": "Get all Prizes.",
        "operationId": "GetAllQuizPrizesAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizPrizeViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Questions/demo": {
      "get": {
        "tags": [
          "Questions"
        ],
        "summary": "Get a demo quiz round. The client should be able to complete a quiz without further interactions with the API.",
        "operationId": "GetQuizDemoAsync",
        "parameters": [
          {
            "name": "questionsCount",
            "in": "query",
            "description": "Amount of questions to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 7
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizDemoViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Raffles/{raffleId}": {
      "get": {
        "tags": [
          "Raffles"
        ],
        "summary": "Gets a Raffle by id",
        "operationId": "GetRaffleById",
        "parameters": [
          {
            "name": "raffleId",
            "in": "path",
            "description": "The Raffle id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RaffleViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Raffles/{raffleId}/Number/{number}": {
      "get": {
        "tags": [
          "Raffles"
        ],
        "summary": "Gets the number of times a number has been bought in the current raffle round",
        "operationId": "GetNumberOfTimesNumberHasBeenPlayedInActiveRound",
        "parameters": [
          {
            "name": "raffleId",
            "in": "path",
            "description": "The raffle identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "number",
            "in": "path",
            "description": "The number to get information about",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Raffles/{raffleId}/MyNumbers": {
      "get": {
        "tags": [
          "Raffles"
        ],
        "summary": "Gets a customers numbers in the active raffle round",
        "operationId": "GetMyNumbersInActiveRound",
        "parameters": [
          {
            "name": "raffleId",
            "in": "path",
            "description": "The Raffle identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Raffles/{raffleId}/MyResults/{roundId}": {
      "get": {
        "tags": [
          "Raffles"
        ],
        "summary": "Gets results in a particular round for a customer",
        "operationId": "GetResultsInRoundForCustomer",
        "parameters": [
          {
            "name": "raffleId",
            "in": "path",
            "description": "The raffle identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roundId",
            "in": "path",
            "description": "The round identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RaffleRoundResultsViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Raffles/{raffleId}/Rounds": {
      "get": {
        "tags": [
          "Raffles"
        ],
        "operationId": "GetRoundSummaryForRaffle",
        "parameters": [
          {
            "name": "raffleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RaffleRoundSummaryViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Raffles/{raffleId}/Rounds/{roundId}": {
      "get": {
        "tags": [
          "Raffles"
        ],
        "summary": "Gets all the results of one round",
        "operationId": "GetRoundResults",
        "parameters": [
          {
            "name": "raffleId",
            "in": "path",
            "description": "The raffle identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roundId",
            "in": "path",
            "description": "The round identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RaffleRoundResultsViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/RecurringPurchases": {
      "post": {
        "tags": [
          "RecurringPurchases"
        ],
        "summary": "Creates a recurring purchase",
        "operationId": "AddRecurringPurchase",
        "parameters": [
          {
            "name": "buyDirectly",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model for creating a recurring purchase",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPurchaseCreateModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPurchaseCreateModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPurchaseCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "RecurringPurchases"
        ],
        "summary": "Gets a customer's all recurring purchases",
        "operationId": "RecurringPurchases",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecurringPurchaseViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/RecurringPurchases/{id}": {
      "delete": {
        "tags": [
          "RecurringPurchases"
        ],
        "summary": "Deletes a Recurring Purchase by Id",
        "operationId": "DeleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Recurring purchase's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/RecurringPurchases/withPayment": {
      "post": {
        "tags": [
          "RecurringPurchases"
        ],
        "summary": "Creates a recurring purchase with an attatched recurring payment",
        "operationId": "WithPayment",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model for creating a recurring purchase",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPurchaseCreateModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPurchaseCreateModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPurchaseCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringPurchaseWithPaymentViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Server Error"
          },
          "502": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/RecurringPurchases/completePayment/{recurringPurchaseId}": {
      "post": {
        "tags": [
          "RecurringPurchases"
        ],
        "summary": "Ensures that the customer completed the payment setup",
        "operationId": "CompletePayment",
        "parameters": [
          {
            "name": "recurringPurchaseId",
            "in": "path",
            "description": "Id of the recurring purchase",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "buyDirectly",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Server Error"
          },
          "502": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Quiz/ResultHistory": {
      "get": {
        "tags": [
          "ResultHistory"
        ],
        "summary": "Gets the results of quizzes for a customer",
        "operationId": "GetQuizResultHistoryByCustomerIdAsync",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The page to get (0 for newest)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of records to get",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuizResultsViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Checks the api status",
        "operationId": "GetCustomerAPIStatusAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/payment/Swedbank/CreatePaymentOrder": {
      "post": {
        "tags": [
          "Swedbank"
        ],
        "operationId": "CreatePaymentOrder",
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "showSwishOption",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentURLResponseModel"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentURLResponseModel"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentURLResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment/Swedbank/CompletePaymentOrder": {
      "post": {
        "tags": [
          "Swedbank"
        ],
        "operationId": "CompletePaymentOrder",
        "parameters": [
          {
            "name": "orderReference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/VoidResultObject"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/VoidResultObject"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/VoidResultObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment/Swedbank/CallbackPaymentOrder": {
      "post": {
        "tags": [
          "Swedbank"
        ],
        "operationId": "CallbackPaymentOrder",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOrderCallbackModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOrderCallbackModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOrderCallbackModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment/Swedbank/AbortPaymentOrder": {
      "post": {
        "tags": [
          "Swedbank"
        ],
        "operationId": "AbortPaymentOrder",
        "parameters": [
          {
            "name": "orderReference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/VoidResultObject"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/VoidResultObject"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/VoidResultObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment/SwishPayout": {
      "post": {
        "tags": [
          "SwishPayout"
        ],
        "summary": "Makes a Payout Request To Swish Api",
        "operationId": "MakePayoutRequest",
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "description": "The amount to pay",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "Message that is displayed for the receiver",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SwishPayout"
        ],
        "summary": "Checks the status of a Payout Request",
        "operationId": "CheckPayoutStatus",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "Url Encoded string given by Swish Api to check status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPayoutRequestStatusResponse"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPayoutRequestStatusResponse"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPayoutRequestStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Tickets/{ticketId}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Gets a QuizTicketViewModel by ticket id",
        "operationId": "GetQuizTicketByIdAsync",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "The ticket identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizTicketViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Tickets/{correlationId}/questions/{orderNumber}/countdown": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Gets the category for the countdown to be displayed before getting the next question",
        "operationId": "GetQuizCountDownAsync",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "description": "The correlationId for the ticket.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "orderNumber",
            "in": "path",
            "description": "The ordernumber to get the countdown for.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizCustomerQuestionCountdownViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Tickets/{correlationId}/questions/{orderNumber}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Gets the question that should be answered, should be called after calling countdown",
        "operationId": "GetQuizQuestionAsync",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "description": "The correlationId for the ticket.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "orderNumber",
            "in": "path",
            "description": "The ordernumber to get the question for.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizCustomerQuestionViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Tickets/{correlationId}/questions/{orderNumber}/answer": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Answer the current question.",
        "operationId": "PostQuizQuestionAnswerAsync",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "description": "The correlationId of the ticket.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "orderNumber",
            "in": "path",
            "description": "The question to answer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The answer data.",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/QuizCustomerAnswerCreateModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/QuizCustomerAnswerCreateModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/QuizCustomerAnswerCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizCustomerQuestionScoreViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Tickets/{correlationId}/{competitionId}": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Create a quiz ticket populated with 7 questions, should be called to start a quiz, should be called after buying a game.",
        "operationId": "PostQuizTicketAsync",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "description": "Correlation id of the ticket",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "competitionId",
            "in": "path",
            "description": "The competition this ticket should participate in",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Tickets/{correlationId}/status": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Gets ticket status by correlation id.",
        "operationId": "GetQuizTicketStatusByCorrelationIdAsync",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "description": "The ticket correlation id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizTicketStatusViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Updates the status of a ticket, can be used to finalize or skip a quiz",
        "operationId": "PutQuizTicketStatusForCorrelationIdAsync",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "description": "The ticket correlation id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Model containing the new status of the ticket.",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/QuizTicketStatusUpdateModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/QuizTicketStatusUpdateModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/QuizTicketStatusUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Tickets/{correlationId}/questions/{orderNumber}/helper/{helperType}": {
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Use a helper on a specific question",
        "operationId": "PutQuizHelperAsync",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "description": "The ticket correlation id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "orderNumber",
            "in": "path",
            "description": "The order number of the question to use the helper on.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "helperType",
            "in": "path",
            "description": "The helper type to be used.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/HelperType"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizCustomerHelperUsedViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Tickets/{correlationId}/results": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Gets the results of a quiz, to be used after the last question is answered",
        "operationId": "GetQuizTicketResultsAsync",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "description": "The ticket correlation id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizTicketResultViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Quiz/Tickets/{correlationId}/summary": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Gets the summary of a quiz, will display ranks of the rounds that the ticket is competing in.",
        "operationId": "GetQuizTicketSummaryAsync",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "description": "The ticket correlation id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizTicketSummaryViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Raffle/Tickets/{ticketId}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Gets a Ticket by id",
        "operationId": "GetRaffleTicketById",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "The Ticket id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RaffleTicketViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/jackpot/Tickets/{ticketId}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "operationId": "GetJackpotTicketById",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/WinLose/Tickets/{ticketId}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "operationId": "GetWinLoseTicketById",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WinLoseTicketViewModel"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/WinLose/Tickets/demoticket/{winLoseId}": {
      "put": {
        "tags": [
          "Tickets"
        ],
        "operationId": "GetDemoTicket",
        "parameters": [
          {
            "name": "winLoseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WinLoseDemoTicketViewModel"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/Tracking/Purchase": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Sends tracking data to Google Analytics 4",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseTrackingModel"
              }
            },
            "text/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseTrackingModel"
              }
            },
            "application/*+json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseTrackingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoidResultObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{userId}/graphic": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets the usergraphic of a user.",
        "operationId": "GetUserGraphic",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGraphicModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/XSame/{ticketId}": {
      "get": {
        "tags": [
          "XSame"
        ],
        "summary": "Gets tickets according to ticket identifier.",
        "operationId": "GetTicketById",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "description": "The ticket identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XSameGameTicketViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/XSame/demo/{xSameTicketId}": {
      "get": {
        "tags": [
          "XSame"
        ],
        "summary": "Gets a demo ticket",
        "operationId": "GetDemoTicketById",
        "parameters": [
          {
            "name": "xSameTicketId",
            "in": "path",
            "description": "The x same ticket identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XSameGameTicketViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/XSame/unscratched": {
      "get": {
        "tags": [
          "XSame"
        ],
        "summary": "Gets a list of the current users all unscratched tickets",
        "operationId": "GetUnscratchedTickets",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/XSameGameTicketViewModel"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/XSame/{combinedTicketId}": {
      "put": {
        "tags": [
          "XSame"
        ],
        "summary": "Redirects to platform finalize combined ticket.",
        "operationId": "FinalizeCombinedTicket",
        "parameters": [
          {
            "name": "combinedTicketId",
            "in": "path",
            "description": "The ticket identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "308": {
            "description": "Redirect"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    }
  },
  "components": {
    "schemas": {
      "BankIdAuthInitModel": {
        "type": "object",
        "properties": {
          "orderReference": {
            "type": "string",
            "nullable": true
          },
          "autoStartToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BankIdAuthViewModel": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/UserTokenViewModel"
          },
          "suggestedNickname": {
            "type": "string",
            "nullable": true
          },
          "orderRef": {
            "type": "string",
            "nullable": true
          },
          "bankIdCollectStatus": {
            "$ref": "#/components/schemas/CollectStatus"
          },
          "bankIdCollectHintCode": {
            "$ref": "#/components/schemas/CollectHintCode"
          }
        },
        "additionalProperties": false
      },
      "BankIdCreateCustomerModel": {
        "required": [
          "avatarId",
          "email",
          "nickname",
          "orderReference",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "orderReference": {
            "type": "string",
            "format": "uuid"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "nickname": {
            "minLength": 1,
            "type": "string"
          },
          "avatarId": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "signupOffer": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BankIdCreateTokenModel": {
        "required": [
          "orderReference"
        ],
        "type": "object",
        "properties": {
          "orderReference": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BankingAccountUpdateModel": {
        "required": [
          "accountNumber",
          "clearingNumber"
        ],
        "type": "object",
        "properties": {
          "clearingNumber": {
            "minLength": 1,
            "type": "string"
          },
          "accountNumber": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BankingAccountViewModel": {
        "type": "object",
        "properties": {
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "clearingNumber": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseGameType": {
        "enum": [
          "Collection",
          "Bingo"
        ],
        "type": "string"
      },
      "BingoCard": {
        "required": [
          "layout"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "bingoRoundId": {
            "type": "integer",
            "format": "int64"
          },
          "bingoRound": {
            "$ref": "#/components/schemas/BingoRound"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "layout": {
            "maxLength": 3600,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BingoGame": {
        "required": [
          "bingoLayoutId",
          "drawTimespanInSeconds",
          "maximumNumberOfCardsPerPlayer",
          "minimumNumberOfCards",
          "minimumNumberOfPlayers",
          "name",
          "potBoosterActive",
          "potBoosterPauseOnlyIfBoosted",
          "price",
          "priceTransferToWinPercent",
          "prizeDisplayTimeInSeconds",
          "removed",
          "status",
          "timeBetweeenPreviousGameEndAndGameStartInSeconds"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/BingoGameStatus"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "bingoLayoutId": {
            "type": "integer",
            "format": "int32"
          },
          "bingoLayout": {
            "$ref": "#/components/schemas/BingoLayout"
          },
          "rules": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "saleStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "saleStopDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeBetweeenPreviousGameEndAndGameStartInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "drawTimespanInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "prizeDisplayTimeInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "minimumNumberOfPlayers": {
            "type": "integer",
            "format": "int32"
          },
          "minimumNumberOfCards": {
            "type": "integer",
            "format": "int32"
          },
          "maximumNumberOfCardsPerPlayer": {
            "type": "integer",
            "format": "int32"
          },
          "priceTransferToWinPercent": {
            "type": "number",
            "format": "double"
          },
          "jackpots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoJackpot"
            },
            "nullable": true
          },
          "checksum": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "removed": {
            "type": "boolean"
          },
          "prizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoPrize"
            },
            "nullable": true
          },
          "graphics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoGraphic"
            },
            "nullable": true
          },
          "outCallVoice": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "potBoosterActive": {
            "type": "boolean"
          },
          "potBoosterDisplayTimeInSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "potBoosterPauseOnlyIfBoosted": {
            "type": "boolean"
          },
          "potBoosters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoPotBooster"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BingoGameStatus": {
        "enum": [
          "Inactive",
          "Active",
          "Closed"
        ],
        "type": "string"
      },
      "BingoGameViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bingoRoundId": {
            "type": "integer",
            "format": "int64"
          },
          "bingoLayoutName": {
            "type": "string",
            "nullable": true
          },
          "bingoLayoutImageData": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "cardPrice": {
            "type": "number",
            "format": "double"
          },
          "jackpotAmount": {
            "type": "number",
            "format": "double"
          },
          "jackpotValueDisplayName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/BingoGameStatus"
          },
          "drawStart": {
            "type": "string",
            "format": "date-time"
          },
          "logoBig": {
            "type": "string",
            "nullable": true
          },
          "logoSmall": {
            "type": "string",
            "nullable": true
          },
          "backgroundBig": {
            "type": "string",
            "nullable": true
          },
          "backgroundSmall": {
            "type": "string",
            "nullable": true
          },
          "potBoosterActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BingoGraphic": {
        "required": [
          "bingoGame",
          "bingoGameId",
          "imageData",
          "imageType",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "imageType": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "bingoGameId": {
            "type": "integer",
            "format": "int32"
          },
          "bingoGame": {
            "$ref": "#/components/schemas/BingoGame"
          },
          "imageData": {
            "minLength": 1,
            "type": "string"
          },
          "graphicType": {
            "$ref": "#/components/schemas/BingoGraphicTypes"
          }
        },
        "additionalProperties": false
      },
      "BingoGraphicTypes": {
        "enum": [
          "LogoBig",
          "LogoSmall",
          "BackgroundBig",
          "BackgroundSmall"
        ],
        "type": "string"
      },
      "BingoJackpot": {
        "required": [
          "amountToWinnerInPercent",
          "bingoGame",
          "bingoGameId",
          "bingoPrizeType",
          "bingoPrizeTypeId",
          "initialAmount",
          "priceTransferToJackpot",
          "priceTributeToJackpot",
          "removed",
          "triggerNumberOfDraws"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "bingoGame": {
            "$ref": "#/components/schemas/BingoGame"
          },
          "bingoGameId": {
            "type": "integer",
            "format": "int32"
          },
          "priceTributeToJackpot": {
            "type": "number",
            "format": "double"
          },
          "priceTransferToJackpot": {
            "type": "number",
            "format": "double"
          },
          "bingoPrizeType": {
            "$ref": "#/components/schemas/BingoPrizeType"
          },
          "bingoPrizeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "initialAmount": {
            "type": "number",
            "format": "double"
          },
          "amountToWinnerInPercent": {
            "type": "number",
            "format": "double"
          },
          "triggerNumberOfDraws": {
            "type": "integer",
            "format": "int32"
          },
          "removed": {
            "type": "boolean"
          },
          "payoutType": {
            "$ref": "#/components/schemas/PrizeValueType"
          },
          "jackpotValueDisplayName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoJackpotTransaction"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BingoJackpotListModel": {
        "type": "object",
        "properties": {
          "bingoGameName": {
            "type": "string",
            "nullable": true
          },
          "bingoGameId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "jackpotValueDisplayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BingoJackpotTransaction": {
        "required": [
          "amount",
          "bingoJackpot",
          "bingoJackpotId",
          "isReserved",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "bingoJackpot": {
            "$ref": "#/components/schemas/BingoJackpot"
          },
          "bingoJackpotId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "bingoCard": {
            "$ref": "#/components/schemas/BingoCard"
          },
          "bingoCardId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "bingoRound": {
            "$ref": "#/components/schemas/BingoRound"
          },
          "bingoRoundId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/JackpotTransactionType"
          },
          "isReserved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BingoJackpotViewModel": {
        "type": "object",
        "properties": {
          "jackpotId": {
            "type": "integer",
            "format": "int32"
          },
          "prizeTypeName": {
            "type": "string",
            "nullable": true
          },
          "prizeTypeCode": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "jackpotValueDisplayName": {
            "type": "string",
            "nullable": true
          },
          "percentToWinner": {
            "type": "number",
            "format": "double"
          },
          "triggerNumberOfDraws": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BingoLayout": {
        "required": [
          "isParent",
          "layout",
          "name",
          "numberOfBalls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "numberOfBalls": {
            "type": "integer",
            "format": "int32"
          },
          "layout": {
            "minLength": 1,
            "type": "string"
          },
          "isParent": {
            "type": "boolean"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "imageData": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/BingoLayout"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoLayout"
            },
            "nullable": true
          },
          "prizeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoPrizeType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BingoPlaylist": {
        "required": [
          "name",
          "removed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoPlaylistItem"
            },
            "nullable": true
          },
          "removed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BingoPlaylistItem": {
        "required": [
          "game",
          "gameId",
          "orderNumber",
          "playlist",
          "playlistId",
          "removed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "playlist": {
            "$ref": "#/components/schemas/BingoPlaylist"
          },
          "playlistId": {
            "type": "integer",
            "format": "int32"
          },
          "game": {
            "$ref": "#/components/schemas/BingoGame"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "removed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BingoPotBooster": {
        "required": [
          "bingoGameId",
          "chanceToOccur",
          "multiplier"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "bingoGameId": {
            "type": "integer",
            "format": "int32"
          },
          "bingoGame": {
            "$ref": "#/components/schemas/BingoGame"
          },
          "multiplier": {
            "type": "number",
            "format": "double"
          },
          "chanceToOccur": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BingoPrize": {
        "required": [
          "bingoGame",
          "bingoGameId",
          "bingoPrizeType",
          "bingoPrizeTypeId",
          "orderNumber",
          "priceInPercent"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bingoGame": {
            "$ref": "#/components/schemas/BingoGame"
          },
          "bingoGameId": {
            "type": "integer",
            "format": "int32"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "bingoPrizeType": {
            "$ref": "#/components/schemas/BingoPrizeType"
          },
          "bingoPrizeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "priceInPercent": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BingoPrizeDirection": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string"
          },
          "direction": {
            "$ref": "#/components/schemas/BingoPrizeDirectionEnum"
          },
          "prizeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoPrizeType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BingoPrizeDirectionEnum": {
        "enum": [
          "Horizontal",
          "Vertical",
          "Diagonal",
          "Full"
        ],
        "type": "string"
      },
      "BingoPrizeType": {
        "required": [
          "code",
          "name",
          "numberOfSequences",
          "removed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "code": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "numberOfSequences": {
            "type": "integer",
            "format": "int32"
          },
          "removed": {
            "type": "boolean"
          },
          "directions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoPrizeDirection"
            },
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoLayout"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BingoRoom": {
        "required": [
          "allowPrivateChat",
          "chatId",
          "name",
          "pingTime",
          "schedule",
          "scheduleId",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/BingoRoomStatus"
          },
          "schedule": {
            "$ref": "#/components/schemas/BingoSchedule"
          },
          "scheduleId": {
            "type": "integer",
            "format": "int32"
          },
          "chatId": {
            "type": "string",
            "format": "uuid"
          },
          "allowPrivateChat": {
            "type": "boolean"
          },
          "pingTime": {
            "type": "string",
            "format": "date-time"
          },
          "numberOfPlayers": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfActivePlayers": {
            "type": "integer",
            "format": "int32"
          },
          "chatActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BingoRoomListModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "chatId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "chatActive": {
            "type": "boolean"
          },
          "allowPrivateChat": {
            "type": "boolean"
          },
          "chatHost": {
            "$ref": "#/components/schemas/ChatHostViewModel"
          },
          "numberOfPlayers": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfActivePlayers": {
            "type": "integer",
            "format": "int32"
          },
          "currentRound": {
            "$ref": "#/components/schemas/BingoRoundListModel"
          },
          "nextRound": {
            "$ref": "#/components/schemas/BingoRoundListModel"
          }
        },
        "additionalProperties": false
      },
      "BingoRoomStatus": {
        "enum": [
          "Inactive",
          "Active"
        ],
        "type": "string"
      },
      "BingoRound": {
        "required": [
          "bingoRoom",
          "bingoRoomId",
          "buyStartTime",
          "drawEndTime",
          "drawStartTime",
          "game",
          "gameId",
          "scrambler",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "buyStartTime": {
            "type": "string",
            "format": "date-time"
          },
          "drawStartTime": {
            "type": "string",
            "format": "date-time"
          },
          "drawEndTime": {
            "type": "string",
            "format": "date-time"
          },
          "drawOrder": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/BingoRoundStatus"
          },
          "game": {
            "$ref": "#/components/schemas/BingoGame"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "bingoRoom": {
            "$ref": "#/components/schemas/BingoRoom"
          },
          "bingoRoomId": {
            "type": "integer",
            "format": "int32"
          },
          "chatHostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoRoundResult"
            },
            "nullable": true
          },
          "scrambler": {
            "type": "string",
            "format": "uuid"
          },
          "playlistItem": {
            "$ref": "#/components/schemas/BingoPlaylistItem"
          },
          "playlistItemId": {
            "type": "integer",
            "format": "int32"
          },
          "scheduleSlot": {
            "$ref": "#/components/schemas/BingoScheduleSlot"
          },
          "scheduleSlotId": {
            "type": "integer",
            "format": "int32"
          },
          "bingoPotTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoRoundPotTransactions"
            },
            "nullable": true
          },
          "potBoosterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "potBooster": {
            "$ref": "#/components/schemas/BingoPotBooster"
          }
        },
        "additionalProperties": false
      },
      "BingoRoundListModel": {
        "type": "object",
        "properties": {
          "bingoGame": {
            "$ref": "#/components/schemas/BingoGameViewModel"
          },
          "drawStartTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/BingoRoundStatus"
          }
        },
        "additionalProperties": false
      },
      "BingoRoundPotTransactions": {
        "required": [
          "bingoRound",
          "bingoRoundId",
          "contribution",
          "createdDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "bingoRound": {
            "$ref": "#/components/schemas/BingoRound"
          },
          "bingoRoundId": {
            "type": "integer",
            "format": "int64"
          },
          "contribution": {
            "type": "number",
            "format": "double"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BingoRoundResult": {
        "required": [
          "bingoCard",
          "bingoCardId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "bingoCard": {
            "$ref": "#/components/schemas/BingoCard"
          },
          "bingoCardId": {
            "type": "string",
            "format": "uuid"
          },
          "prize": {
            "type": "number",
            "format": "double"
          },
          "bingoPrizeType": {
            "$ref": "#/components/schemas/BingoPrizeType"
          },
          "bingoPrizeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "jackpotPrize": {
            "type": "number",
            "format": "double"
          },
          "bingoRound": {
            "$ref": "#/components/schemas/BingoRound"
          },
          "bingoRoundId": {
            "type": "integer",
            "format": "int64"
          },
          "afterNumberOfBalls": {
            "type": "integer",
            "format": "int32"
          },
          "notifyOnWin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BingoRoundStatus": {
        "enum": [
          "Waiting",
          "Locked",
          "Started",
          "Finished",
          "Cancelled",
          "Repayed"
        ],
        "type": "string"
      },
      "BingoRoundViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "buyStartTime": {
            "type": "string",
            "format": "date-time"
          },
          "drawStartTime": {
            "type": "string",
            "format": "date-time"
          },
          "drawEndTime": {
            "type": "string",
            "format": "date-time"
          },
          "drawOrder": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/BingoRoundStatus"
          },
          "game": {
            "$ref": "#/components/schemas/BingoGame"
          },
          "bingoRoom": {
            "$ref": "#/components/schemas/BingoRoom"
          },
          "potsize": {
            "type": "number",
            "format": "double"
          },
          "chatHost": {
            "$ref": "#/components/schemas/User"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoRoundResult"
            },
            "nullable": true
          },
          "playlistItem": {
            "$ref": "#/components/schemas/BingoPlaylistItem"
          },
          "scheduleSlot": {
            "$ref": "#/components/schemas/BingoScheduleSlot"
          }
        },
        "additionalProperties": false
      },
      "BingoSchedule": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "slots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoScheduleSlot"
            },
            "nullable": true
          },
          "removed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BingoScheduleSlot": {
        "required": [
          "endDayOfWeek",
          "endTime",
          "playlist",
          "playlistId",
          "schedule",
          "scheduleId",
          "startDayOfWeek",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/BingoSchedule"
          },
          "scheduleId": {
            "type": "integer",
            "format": "int32"
          },
          "startDayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "endDayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "startTime": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "endTime": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "playlist": {
            "$ref": "#/components/schemas/BingoPlaylist"
          },
          "playlistId": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "removed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BonusCustomerStatus": {
        "enum": [
          "Activated",
          "Disbursed",
          "Expired"
        ],
        "type": "string"
      },
      "BonusPayoutType": {
        "enum": [
          "FixedPayment",
          "PercentagePayment",
          "Voucher"
        ],
        "type": "string"
      },
      "BonusPayoutViewModel": {
        "type": "object",
        "properties": {
          "payoutType": {
            "$ref": "#/components/schemas/BonusPayoutType"
          },
          "fixedAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "percentageAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "voucherAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseGameType": {
            "$ref": "#/components/schemas/BaseGameType"
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "walletType": {
            "$ref": "#/components/schemas/BonusWalletType"
          }
        },
        "additionalProperties": false
      },
      "BonusQualificationType": {
        "enum": [
          "Direct",
          "TurnoverProducts",
          "Deposit",
          "Login"
        ],
        "type": "string"
      },
      "BonusQualificationViewModel": {
        "type": "object",
        "properties": {
          "progress": {
            "type": "number",
            "format": "double"
          },
          "goal": {
            "type": "number",
            "format": "double"
          },
          "gameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseGameType": {
            "$ref": "#/components/schemas/BaseGameType"
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "qualificationType": {
            "$ref": "#/components/schemas/BonusQualificationType"
          },
          "includeBonusMoney": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BonusWalletType": {
        "enum": [
          "Monetary",
          "Bonus",
          "Goods"
        ],
        "type": "string"
      },
      "BoughtBingoCardModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "bingoRoundId": {
            "type": "integer",
            "format": "int32"
          },
          "layout": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuyArguments": {
        "type": "object",
        "properties": {
          "gameType": {
            "$ref": "#/components/schemas/GameType"
          },
          "arguments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BuyTicketModel": {
        "required": [
          "gameId"
        ],
        "type": "object",
        "properties": {
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "channel": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "additionalData": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "buyArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuyArguments"
            },
            "description": "Raffle Example:\r\n<br />\r\n\"buyArguments\": [ <br />\r\n {\r\n <br />\r\n    \"gameType\": \"Raffle\", <br />\r\n    \"arguments\": \"{'RoundId': 1, 'number': 1}\" <br />\r\n },\r\n <br />\r\n {\r\n <br />\r\n    \"gameType\": \"Raffle\", <br />\r\n    \"arguments\": \"{'RoundId': 2, 'number': null}\" <br />\r\n }\r\n <br />\r\n]",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The model containing instructions on what to buy, expand buyArguments for more details."
      },
      "CanBuyViewModel": {
        "type": "object",
        "properties": {
          "canBuy": {
            "type": "boolean"
          },
          "moneyValue": {
            "type": "number",
            "format": "double"
          },
          "bonusValue": {
            "type": "number",
            "format": "double"
          },
          "goodsValue": {
            "type": "number",
            "format": "double"
          },
          "voucherCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CardModel": {
        "type": "object",
        "properties": {
          "layout": {
            "type": "string",
            "nullable": true
          },
          "checksum": {
            "type": "string",
            "nullable": true
          },
          "bought": {
            "type": "boolean"
          },
          "cardId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChatHostViewModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckPayoutRequestStatusResponse": {
        "type": "object",
        "properties": {
          "paymentReference": {
            "type": "string",
            "nullable": true
          },
          "payoutInstructionUUID": {
            "type": "string",
            "nullable": true
          },
          "payerPaymentReference": {
            "type": "string",
            "nullable": true
          },
          "callbackUrl": {
            "type": "string",
            "nullable": true
          },
          "payerAlias": {
            "type": "string",
            "nullable": true
          },
          "payeeAlias": {
            "type": "string",
            "nullable": true
          },
          "payeeSSN": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "datePaid": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "additionalInformation": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientSettingModel": {
        "required": [
          "announcer",
          "autoMark",
          "autoSort",
          "color",
          "effects",
          "music",
          "muted",
          "symbol",
          "userAvatar"
        ],
        "type": "object",
        "properties": {
          "autoSort": {
            "type": "boolean"
          },
          "autoMark": {
            "type": "boolean"
          },
          "symbol": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "color": {
            "type": "integer",
            "format": "int32"
          },
          "announcer": {
            "type": "boolean"
          },
          "effects": {
            "type": "boolean"
          },
          "music": {
            "type": "boolean"
          },
          "userAvatar": {
            "type": "integer",
            "format": "int32"
          },
          "muted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CollectHintCode": {
        "enum": [
          "Unknown",
          "OutstandingTransaction",
          "NoClient",
          "Started",
          "UserSign",
          "ExpiredTransaction",
          "CertificateErr",
          "UserCancel",
          "Cancelled",
          "StartFailed"
        ],
        "type": "string"
      },
      "CollectStatus": {
        "enum": [
          "Unknown",
          "Pending",
          "Failed",
          "Complete"
        ],
        "type": "string"
      },
      "CommunicationChannel": {
        "enum": [
          "Phone",
          "Email",
          "Sms",
          "Mail"
        ],
        "type": "string"
      },
      "Company": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "removed": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompetitionStatus": {
        "enum": [
          "All",
          "Finished",
          "Active",
          "Upcoming",
          "NotCreated"
        ],
        "type": "string"
      },
      "ContactUsModel": {
        "required": [
          "message",
          "senderAddress",
          "senderName"
        ],
        "type": "object",
        "properties": {
          "senderAddress": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "message": {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          },
          "senderName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "personalIdentificationNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "required": [
          "socialSecurityNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "socialSecurityNumber": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "streetAddress": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "clearingNumber": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "gameStopLastTimeChecked": {
            "type": "string",
            "format": "date-time"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerTransaction"
            },
            "nullable": true
          },
          "withdraws": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerWithdraw"
            },
            "nullable": true
          },
          "blockReason": {
            "$ref": "#/components/schemas/CustomerBlockReason"
          },
          "externalId": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 25,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "blocked": {
            "type": "boolean"
          },
          "blockedUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subscribeToNewsletter": {
            "type": "boolean"
          },
          "lastLookupDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "comment": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "source": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "signupOffer": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "ageVerified": {
            "type": "boolean"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "channelOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerChannelOption"
            },
            "nullable": true
          },
          "pep": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CustomerActivateBonusCodeModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomerBalanceViewModel": {
        "type": "object",
        "properties": {
          "moneyValue": {
            "type": "number",
            "format": "double"
          },
          "bonusValue": {
            "type": "number",
            "format": "double"
          },
          "goodsValue": {
            "type": "number",
            "format": "double"
          },
          "totalValue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CustomerBlockReason": {
        "enum": [
          "UnwantedContentOrBehavior",
          "InappropriatePlayerName",
          "ThreatsOfViolenceOrSafetyConcerns",
          "UnfairPlayingInGame",
          "SelfService",
          "LookupCheckFailed",
          "Deceased",
          "Abuse",
          "Other",
          "WantsToBeForgotten"
        ],
        "type": "string"
      },
      "CustomerBonusEventDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "eventCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eventType": {
            "$ref": "#/components/schemas/CustomerBonusStatus"
          },
          "qualificationType": {
            "$ref": "#/components/schemas/BonusQualificationType"
          },
          "goal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "payoutType": {
            "$ref": "#/components/schemas/BonusPayoutType"
          },
          "payoutAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerBonusStatus": {
        "enum": [
          "Triggered",
          "Payout"
        ],
        "type": "string"
      },
      "CustomerBonusViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/BonusCustomerStatus"
          },
          "bonusTriggerDate": {
            "type": "string",
            "format": "date-time"
          },
          "bonusPayoutDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "qualification": {
            "$ref": "#/components/schemas/BonusQualificationViewModel"
          },
          "payout": {
            "$ref": "#/components/schemas/BonusPayoutViewModel"
          }
        },
        "additionalProperties": false
      },
      "CustomerChangePasswordModel": {
        "required": [
          "currentPassword",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "currentPassword": {
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomerChannelOption": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "channel": {
            "$ref": "#/components/schemas/CommunicationChannel"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CustomerChannelOptionCreateDTO": {
        "required": [
          "channel",
          "disabled"
        ],
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/CommunicationChannel"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CustomerChannelOptionViewDTO": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/CommunicationChannel"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CustomerCreateModel": {
        "required": [
          "email",
          "firstname",
          "lastname",
          "nickname",
          "password",
          "socialSecurityNumber",
          "username"
        ],
        "type": "object",
        "properties": {
          "firstname": {
            "minLength": 1,
            "type": "string"
          },
          "lastname": {
            "minLength": 1,
            "type": "string"
          },
          "socialSecurityNumber": {
            "minLength": 1,
            "type": "string"
          },
          "streetAddress": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "nickname": {
            "minLength": 1,
            "type": "string"
          },
          "avatarId": {
            "type": "integer",
            "format": "int32"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "signupOffer": {
            "type": "string",
            "nullable": true
          },
          "channelOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerChannelOptionCreateDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerDetailsPublicDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "avatarId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CustomerGamificationBalance": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CustomerGamificationShopItem": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "currencyId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GamificationVariableModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerGamificationVariablesListModel": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CustomerGetUnfinishedTicketsModel": {
        "required": [
          "gameId"
        ],
        "type": "object",
        "properties": {
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "channel": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "additionalData": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerPepCreateModel": {
        "required": [
          "indirectPep",
          "moneySource",
          "personallyPep"
        ],
        "type": "object",
        "properties": {
          "moneySource": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "personallyPep": {
            "type": "boolean"
          },
          "indirectPep": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CustomerQuestionResultType": {
        "enum": [
          "CorrectAnswer",
          "WrongAnswer",
          "Expired",
          "IncorrectId"
        ],
        "type": "string"
      },
      "CustomerTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "sourceId": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "gameBase": {
            "$ref": "#/components/schemas/GameBase"
          },
          "gameBaseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gameType": {
            "$ref": "#/components/schemas/GameType"
          },
          "moneyValue": {
            "type": "number",
            "format": "double"
          },
          "bonusValue": {
            "type": "number",
            "format": "double"
          },
          "goodsValue": {
            "type": "number",
            "format": "double"
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionTypeEnum"
          },
          "correlationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "message": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "pluginGameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "roundId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerTransactionHistoryMiniDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "moneyValue": {
            "type": "number",
            "format": "double"
          },
          "bonusValue": {
            "type": "number",
            "format": "double"
          },
          "goodsValue": {
            "type": "number",
            "format": "double"
          },
          "totalValue": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionTypeEnum"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "vendor": {
            "type": "string",
            "nullable": true
          },
          "orderReference": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerTransactionViewDTO": {
        "type": "object",
        "properties": {
          "sourceId": {
            "type": "string",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "gameType": {
            "$ref": "#/components/schemas/GameType"
          },
          "pluginGameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "moneyValue": {
            "type": "number",
            "format": "double"
          },
          "bonusValue": {
            "type": "number",
            "format": "double"
          },
          "goodsValue": {
            "type": "number",
            "format": "double"
          },
          "correlationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionTypeEnum"
          },
          "roundId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerUnfinishedTicketsMultipleGameBasesModel": {
        "required": [
          "gameBaseIds"
        ],
        "type": "object",
        "properties": {
          "gameBaseIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "channel": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "additionalData": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerUpdateModel": {
        "required": [
          "email",
          "firstname",
          "gender",
          "lastname",
          "nickname",
          "phoneNumber",
          "subscribeToNewsletter"
        ],
        "type": "object",
        "properties": {
          "firstname": {
            "minLength": 1,
            "type": "string"
          },
          "lastname": {
            "minLength": 1,
            "type": "string"
          },
          "streetAddress": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          },
          "subscribeToNewsletter": {
            "type": "boolean"
          },
          "nickname": {
            "minLength": 1,
            "type": "string"
          },
          "avatarId": {
            "type": "integer",
            "format": "int32"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "channelOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerChannelOptionCreateDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "avatarId": {
            "type": "integer",
            "format": "int32"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "streetAddress": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "subscribeToNewsletter": {
            "type": "boolean"
          },
          "channelOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerChannelOptionViewDTO"
            },
            "nullable": true
          },
          "pep": {
            "type": "boolean"
          },
          "lastLoginDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerVoucherViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "gameType": {
            "$ref": "#/components/schemas/BaseGameType"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "bonusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bonusName": {
            "type": "string",
            "nullable": true
          },
          "validUntil": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "consumedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CustomerWithdraw": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "transaction": {
            "$ref": "#/components/schemas/CustomerTransaction"
          },
          "transactionId": {
            "type": "integer",
            "format": "int64"
          },
          "processedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ocr": {
            "maxLength": 25,
            "type": "string",
            "nullable": true
          },
          "messageToReciver": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "type": "string"
      },
      "GameBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/GameCollectionStatus"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "removed": {
            "type": "boolean"
          },
          "checksum": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "numberOfGames": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowMultipleWin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GameCollectionStatus": {
        "enum": [
          "Registered",
          "Active",
          "Paused",
          "Closed",
          "ReadyToActivate"
        ],
        "type": "string"
      },
      "GamePurchaseResultDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "verb": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "isWinner": {
            "type": "boolean",
            "nullable": true
          },
          "pluginGameId": {
            "type": "integer",
            "format": "int32"
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "gameType": {
            "$ref": "#/components/schemas/GameType"
          },
          "roundId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "autoCompleteOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GamePurchaseTransactionDTO": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "format": "uuid"
          },
          "gameBaseName": {
            "type": "string",
            "nullable": true
          },
          "bingoName": {
            "type": "string",
            "nullable": true
          },
          "moneyValue": {
            "type": "number",
            "format": "double"
          },
          "bonusValue": {
            "type": "number",
            "format": "double"
          },
          "goodsValue": {
            "type": "number",
            "format": "double"
          },
          "wonMoneyValue": {
            "type": "number",
            "format": "double"
          },
          "wonGoodsValue": {
            "type": "number",
            "format": "double"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "gameBaseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bingoGameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isBingoGame": {
            "type": "boolean"
          },
          "isGameCollection": {
            "type": "boolean"
          },
          "gameChannel": {
            "type": "string",
            "nullable": true
          },
          "additionalData": {
            "type": "string",
            "nullable": true
          },
          "sourceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GameResultDTO": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "format": "uuid"
          },
          "gameBaseName": {
            "type": "string",
            "nullable": true
          },
          "gameBaseId": {
            "type": "integer",
            "format": "int32"
          },
          "gamePrice": {
            "type": "number",
            "format": "double"
          },
          "gameChannel": {
            "type": "string",
            "nullable": true
          },
          "additionalData": {
            "type": "string",
            "nullable": true
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameResultTicketDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GameResultDTOResultObject": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasErrors": {
            "type": "boolean",
            "readOnly": true
          },
          "hasMessages": {
            "type": "boolean",
            "readOnly": true
          },
          "isSuccessful": {
            "type": "boolean",
            "readOnly": true
          },
          "object": {
            "$ref": "#/components/schemas/GameResultDTO"
          }
        },
        "additionalProperties": false
      },
      "GameResultTicketDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "isWinner": {
            "type": "boolean",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "autoCompleteOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "format": "uuid"
          },
          "finalized": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "httpVerb": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GameStopCreateModel": {
        "required": [
          "stopLength"
        ],
        "type": "object",
        "properties": {
          "stopLength": {
            "$ref": "#/components/schemas/StopLength"
          }
        },
        "additionalProperties": false
      },
      "GameStopViewModel": {
        "type": "object",
        "properties": {
          "hasGameStop": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GameType": {
        "enum": [
          "XSame",
          "Bingo",
          "WinLose",
          "Probability",
          "Quiz",
          "Raffle",
          "Jackpot"
        ],
        "type": "string"
      },
      "GamificationVariableModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "startValue": {
            "type": "number",
            "format": "double"
          },
          "maxValue": {
            "type": "number",
            "format": "double"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gender": {
        "enum": [
          "Unspecified",
          "Male",
          "Female",
          "Other"
        ],
        "type": "string"
      },
      "HelperType": {
        "enum": [
          "Random",
          "FiftyFifty",
          "NewQuestion",
          "MoreTime"
        ],
        "type": "string"
      },
      "IncidentDTO": {
        "required": [
          "severity",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/IncidentSeverity"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceId": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "customerDisplayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncidentSeverity": {
        "enum": [
          "Information",
          "Critical"
        ],
        "type": "string"
      },
      "IncidentStatus": {
        "enum": [
          "Unhandled",
          "Handled",
          "Ignored"
        ],
        "type": "string"
      },
      "JackpotStatus": {
        "enum": [
          "Registered",
          "Active",
          "Paused",
          "Closed"
        ],
        "type": "string"
      },
      "JackpotTransactionType": {
        "enum": [
          "Purchase",
          "Repay",
          "Win",
          "Initialize",
          "Retract",
          "Correct",
          "ShareOfWin"
        ],
        "type": "string"
      },
      "JackpotViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "$ref": "#/components/schemas/JackpotStatus"
          },
          "saleStopDate": {
            "type": "string",
            "format": "date-time"
          },
          "currentAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "LimitType": {
        "enum": [
          "Deposit",
          "Loss",
          "GameTime"
        ],
        "type": "string"
      },
      "LimitUpdateModel": {
        "required": [
          "limitType",
          "stopLength",
          "value"
        ],
        "type": "object",
        "properties": {
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "stopLength": {
            "$ref": "#/components/schemas/StopLengthLimits"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "LimitViewModel": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "nextValue": {
            "type": "number",
            "format": "double"
          },
          "nextValueRefreshDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "stopLength": {
            "$ref": "#/components/schemas/StopLengthLimits"
          },
          "setByCustomer": {
            "type": "boolean"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NextRoundViewModel": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "integer",
            "format": "int32"
          },
          "roomName": {
            "type": "string",
            "nullable": true
          },
          "chatId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roundId": {
            "type": "integer",
            "format": "int64"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "cardPrice": {
            "type": "number",
            "format": "double"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "pot": {
            "type": "number",
            "format": "double"
          },
          "jackpot": {
            "type": "number",
            "format": "double"
          },
          "jackpotValueDisplayName": {
            "type": "string",
            "nullable": true
          },
          "numberOfPlayers": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfActivePlayers": {
            "type": "integer",
            "format": "int32"
          },
          "nameOfChatHost": {
            "type": "string",
            "nullable": true
          },
          "imageOfChatHost": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NoAnswerReason": {
        "enum": [
          "Timeout"
        ],
        "type": "string"
      },
      "PaymentOrderCallbackModel": {
        "required": [
          "orderReference",
          "paymentOrder"
        ],
        "type": "object",
        "properties": {
          "orderReference": {
            "minLength": 1,
            "type": "string"
          },
          "paymentOrder": {
            "$ref": "#/components/schemas/PaymentOrderCallbackPaymentModel"
          }
        },
        "additionalProperties": false
      },
      "PaymentOrderCallbackPaymentModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PaymentStatus": {
        "enum": [
          "Initiated",
          "Paid",
          "Cancelled",
          "Failed",
          "Aborted",
          "Error",
          "Pending"
        ],
        "type": "string"
      },
      "PaymentURLResponseModel": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "verb": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "rel": {
            "type": "string",
            "nullable": true
          },
          "orderReference": {
            "type": "string",
            "format": "uuid"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentVendor": {
        "enum": [
          "SwedbankPay",
          "Klarna",
          "Nets",
          "Payson",
          "Paypal",
          "Swish",
          "ShopifyPayments",
          "Zettle",
          "SveaWebPay",
          "Bambora",
          "Hygglig",
          "Stripe"
        ],
        "type": "string"
      },
      "PreBuyBingoCardModel": {
        "type": "object",
        "properties": {
          "bingoRoundId": {
            "type": "integer",
            "format": "int64"
          },
          "numberOfCards": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PrizePlanType": {
        "enum": [
          "GuaranteedWin",
          "Fixed"
        ],
        "type": "string"
      },
      "PrizeValueType": {
        "enum": [
          "NotifyOnWin",
          "Money",
          "Goods"
        ],
        "type": "string"
      },
      "PrizeViewModel": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "prizeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "prizeTypeName": {
            "type": "string",
            "nullable": true
          },
          "prizeTypeCode": {
            "type": "string",
            "nullable": true
          },
          "numberOfRows": {
            "type": "integer",
            "format": "int32"
          },
          "percent": {
            "type": "number",
            "format": "double"
          },
          "aggregateAmount": {
            "type": "number",
            "format": "double"
          },
          "winners": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "afterNumberOfBalls": {
            "type": "integer",
            "format": "int32"
          },
          "lastBall": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PrizeWonView": {
        "type": "object",
        "properties": {
          "prizeTypeName": {
            "type": "string",
            "nullable": true
          },
          "prizeTypeCode": {
            "type": "string",
            "nullable": true
          },
          "winners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinnerAndAmountView"
            },
            "nullable": true
          },
          "isJackpot": {
            "type": "boolean"
          },
          "sharedAmountPerCard": {
            "type": "number",
            "format": "double"
          },
          "prizeAmountPerCard": {
            "type": "number",
            "format": "double"
          },
          "totalPrizeAmount": {
            "type": "number",
            "format": "double"
          },
          "afterNumberOfBalls": {
            "type": "integer",
            "format": "int32"
          },
          "lastBallDrawn": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PurchaseBingoCardModel": {
        "type": "object",
        "properties": {
          "bingoRoundId": {
            "type": "integer",
            "format": "int32"
          },
          "cardsToBuy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchaseTrackingModel": {
        "required": [
          "actualEventName",
          "clientId"
        ],
        "type": "object",
        "properties": {
          "actualEventName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "clientId": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "segment": {
            "type": "string",
            "nullable": true
          },
          "pageLocation": {
            "type": "string",
            "nullable": true
          },
          "pageTitle": {
            "type": "string",
            "nullable": true
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "tax": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "shipping": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseTrackingModelItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchaseTrackingModelItem": {
        "required": [
          "category",
          "gameId",
          "gameName",
          "price",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "gameId": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "gameName": {
            "minLength": 1,
            "type": "string"
          },
          "price": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/TrackingGA4Category"
          },
          "category2": {
            "type": "string",
            "nullable": true
          },
          "category3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuestionType": {
        "enum": [
          "Text",
          "Image"
        ],
        "type": "string"
      },
      "QuizCompetitionTypeViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizCompetitionViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "gameCollectionId": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "rounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizRoundViewModel"
            },
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/CompetitionStatus"
          },
          "isDisabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "QuizCustomerAnswerCreateModel": {
        "type": "object",
        "properties": {
          "answerGuid": {
            "type": "string",
            "format": "uuid"
          },
          "noAnswerReason": {
            "$ref": "#/components/schemas/NoAnswerReason"
          }
        },
        "additionalProperties": false
      },
      "QuizCustomerHelperUsedViewModel": {
        "type": "object",
        "properties": {
          "newTimeLimit": {
            "type": "integer",
            "format": "int32"
          },
          "alternatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizQuestionAnswerViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizCustomerHelperViewModel": {
        "type": "object",
        "properties": {
          "helperType": {
            "$ref": "#/components/schemas/HelperType"
          },
          "helperTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "amountUnseen": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QuizCustomerQuestionCountdownViewModel": {
        "type": "object",
        "properties": {
          "ticketId": {
            "type": "string",
            "format": "uuid"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "questionsInTicket": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/QuizQuestionCategoryViewModel"
          }
        },
        "additionalProperties": false
      },
      "QuizCustomerQuestionScoreViewModel": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "result": {
            "$ref": "#/components/schemas/CustomerQuestionResultType"
          },
          "correctAnswer": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "QuizCustomerQuestionViewModel": {
        "type": "object",
        "properties": {
          "ticketId": {
            "type": "string",
            "format": "uuid"
          },
          "customerQuestionId": {
            "type": "integer",
            "format": "int32"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "questionsInTicket": {
            "type": "integer",
            "format": "int32"
          },
          "question": {
            "$ref": "#/components/schemas/QuizQuestionViewModel"
          },
          "timeLimitSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "helpers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizCustomerHelperViewModel"
            },
            "nullable": true
          },
          "helperUsedOnTicket": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "QuizCustomerScoreViewModel": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "avatarId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QuizCustomerWarningViewModel": {
        "type": "object",
        "properties": {
          "gamesPlayed": {
            "type": "integer",
            "format": "int32"
          },
          "expirationInterval": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QuizDemoQuestionAnswerViewModel": {
        "type": "object",
        "properties": {
          "isCorrect": {
            "type": "boolean"
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizDemoQuestionViewModel": {
        "type": "object",
        "properties": {
          "questionType": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "category": {
            "$ref": "#/components/schemas/QuizQuestionCategoryViewModel"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "imageData": {
            "type": "string",
            "nullable": true
          },
          "alternatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizDemoQuestionAnswerViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizDemoViewModel": {
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizDemoQuestionViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizPrizeViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "prizeValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizQuestionAnswerViewModel": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizQuestionCategoryViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizQuestionViewModel": {
        "type": "object",
        "properties": {
          "questionType": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "imageData": {
            "type": "string",
            "nullable": true
          },
          "alternatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizQuestionAnswerViewModel"
            },
            "nullable": true
          },
          "usableHelperTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelperType"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "QuizResultsViewModel": {
        "type": "object",
        "properties": {
          "ticketId": {
            "type": "string",
            "format": "uuid"
          },
          "correlationId": {
            "type": "string",
            "format": "uuid"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "score": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "helperType": {
            "$ref": "#/components/schemas/HelperType"
          },
          "prizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizPrizeViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizRoundPrizeViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "prize": {
            "$ref": "#/components/schemas/QuizPrizeViewModel"
          },
          "quantityPrizes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QuizRoundRankViewModel": {
        "type": "object",
        "properties": {
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizRoundViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true
          },
          "prizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizRoundPrizeViewModel"
            },
            "nullable": true
          },
          "leaderboard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizCustomerScoreViewModel"
            },
            "nullable": true
          },
          "myScore": {
            "$ref": "#/components/schemas/QuizCustomerScoreViewModel"
          }
        },
        "additionalProperties": false
      },
      "QuizTicketResultQuestionScoreViewModel": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "isCorrect": {
            "type": "boolean"
          },
          "noAnswerReason": {
            "$ref": "#/components/schemas/NoAnswerReason"
          },
          "helperType": {
            "$ref": "#/components/schemas/HelperType"
          },
          "roundExpired": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "QuizTicketResultViewModel": {
        "type": "object",
        "properties": {
          "totalScore": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "questionScores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizTicketResultQuestionScoreViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizTicketStatusUpdateModel": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TicketStatus"
          }
        },
        "additionalProperties": false
      },
      "QuizTicketStatusViewModel": {
        "type": "object",
        "properties": {
          "questionsAnswered": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/TicketStatus"
          },
          "timeUntilExpiration": {
            "$ref": "#/components/schemas/TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "QuizTicketSummaryViewModel": {
        "type": "object",
        "properties": {
          "highscore": {
            "type": "integer",
            "format": "int32"
          },
          "ranks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizRoundRankViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuizTicketViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "correlationId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "competition": {
            "$ref": "#/components/schemas/QuizCompetitionViewModel"
          },
          "currentQuestion": {
            "$ref": "#/components/schemas/QuizCustomerQuestionViewModel"
          },
          "currentOrderNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RaffleRoundResultsViewModel": {
        "type": "object",
        "properties": {
          "roundWinnings": {
            "type": "number",
            "format": "double"
          },
          "drawDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "winners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RaffleRoundWinnerViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RaffleRoundSummaryViewModel": {
        "type": "object",
        "properties": {
          "roundId": {
            "type": "integer",
            "format": "int32"
          },
          "drawDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "roundWinnings": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "RaffleRoundWinnerViewModel": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "nullable": true
          },
          "win": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "RaffleTicketViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "ticketNumber": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "roundId": {
            "type": "integer",
            "format": "int32"
          },
          "winAmount": {
            "type": "number",
            "format": "double"
          },
          "isFinalized": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RaffleViewModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "nextDrawingTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextDrawingCutOffTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customerPicksNumbers": {
            "type": "boolean"
          },
          "numberIntervalStart": {
            "type": "integer",
            "format": "int32"
          },
          "numberIntervalEnd": {
            "type": "integer",
            "format": "int32"
          },
          "numberPrefix": {
            "type": "string",
            "nullable": true
          },
          "numberSuffix": {
            "type": "string",
            "nullable": true
          },
          "prizePlanType": {
            "$ref": "#/components/schemas/PrizePlanType"
          },
          "activeRoundId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecurringPurchaseCreateModel": {
        "required": [
          "baseGameType",
          "gameId",
          "numberOfTickets",
          "recurringPurchaseInterval"
        ],
        "type": "object",
        "properties": {
          "recurringPurchaseInterval": {
            "$ref": "#/components/schemas/RecurringPurchaseIntervalEnum"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "baseGameType": {
            "$ref": "#/components/schemas/BaseGameType"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "channel": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "additionalData": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "buyArguments": {
            "maxItems": 2000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuyArguments"
            },
            "nullable": true
          },
          "numberOfTickets": {
            "type": "integer",
            "format": "int32"
          },
          "bonusCode": {
            "type": "string",
            "nullable": true
          },
          "useBonusCodeOnFirstPurchase": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RecurringPurchaseIntervalEnum": {
        "enum": [
          "Daily",
          "Weekly",
          "Monthly"
        ],
        "type": "string"
      },
      "RecurringPurchaseViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "gameName": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "recurringPurchaseInterval": {
            "$ref": "#/components/schemas/RecurringPurchaseIntervalEnum"
          },
          "removed": {
            "type": "boolean"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastPurchaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "additionalData": {
            "type": "string",
            "nullable": true
          },
          "baseGameType": {
            "$ref": "#/components/schemas/BaseGameType"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "numberOfTickets": {
            "type": "integer",
            "format": "int32"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "vendor": {
            "$ref": "#/components/schemas/PaymentVendor"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "latestPurchaseCorrelationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecurringPurchaseWithPaymentViewModel": {
        "type": "object",
        "properties": {
          "recurringPurchaseid": {
            "type": "integer",
            "format": "int32"
          },
          "paymentUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReplayBingoRoundView": {
        "type": "object",
        "properties": {
          "drawOrder": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "cardLayout": {
            "type": "string",
            "nullable": true
          },
          "gameTypeName": {
            "type": "string",
            "nullable": true
          },
          "layoutImageData": {
            "type": "string",
            "nullable": true
          },
          "bingoGameId": {
            "type": "integer",
            "format": "int32"
          },
          "bingoRoundId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "secondsBetweenNumbersDrawn": {
            "type": "integer",
            "format": "int32"
          },
          "secondsToDisplayWinners": {
            "type": "integer",
            "format": "int32"
          },
          "cardPrice": {
            "type": "number",
            "format": "double"
          },
          "maxNumberOfCards": {
            "type": "integer",
            "format": "int32"
          },
          "rules": {
            "type": "string",
            "nullable": true
          },
          "pot": {
            "type": "number",
            "format": "double"
          },
          "potBoosterActive": {
            "type": "boolean"
          },
          "potBoosterMultiplier": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "prizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrizeViewModel"
            },
            "nullable": true
          },
          "jackpots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BingoJackpotViewModel"
            },
            "nullable": true
          },
          "logoBig": {
            "type": "string",
            "nullable": true
          },
          "logoSmall": {
            "type": "string",
            "nullable": true
          },
          "backgroundBig": {
            "type": "string",
            "nullable": true
          },
          "backgroundSmall": {
            "type": "string",
            "nullable": true
          },
          "outcallVoice": {
            "type": "string",
            "nullable": true
          },
          "numberOfPlayers": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfCards": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfBalls": {
            "type": "integer",
            "format": "int32"
          },
          "winners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrizeWonView"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "removed": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StopLength": {
        "enum": [
          "Day",
          "Week",
          "Month",
          "Year",
          "Infinite",
          "ThreeMonths",
          "SixMonths"
        ],
        "type": "string"
      },
      "StopLengthLimits": {
        "enum": [
          "Day",
          "Week",
          "Month"
        ],
        "type": "string"
      },
      "TicketStatus": {
        "enum": [
          "Active",
          "Finalized",
          "Expired",
          "Skipped"
        ],
        "type": "string"
      },
      "TicketViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "jackpotId": {
            "type": "integer",
            "format": "int32"
          },
          "isWinner": {
            "type": "boolean"
          },
          "winAmount": {
            "type": "number",
            "format": "double"
          },
          "boughtDate": {
            "type": "string",
            "format": "date-time"
          },
          "finalized": {
            "type": "boolean"
          },
          "correlationId": {
            "type": "string",
            "format": "uuid"
          },
          "gameCollectionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TrackingGA4Category": {
        "enum": [
          "Games",
          "Wallet",
          "Shop"
        ],
        "type": "string"
      },
      "TransactionTypeEnum": {
        "enum": [
          "Deposit",
          "DepositFailed",
          "Withdrawal",
          "GamePurchase",
          "GameWin",
          "Transfer",
          "HandoutReward",
          "HandoutRewardRetraction",
          "Correction",
          "GameRepay",
          "BonusDeposit",
          "ExternalDeposit",
          "ExternalWithdrawal",
          "InternalDeposit",
          "InternalWithdrawal",
          "GameWinJackpot",
          "GameWinJackpotShare",
          "PrizeDeposit",
          "ManualBalanceCorrection"
        ],
        "type": "string"
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstname": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "removed": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            },
            "nullable": true
          },
          "userAudits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAudit"
            },
            "nullable": true
          },
          "userNickname": {
            "$ref": "#/components/schemas/UserNickname"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "additionalProperties": false
      },
      "UserAudit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "logonDate": {
            "type": "string",
            "format": "date-time"
          },
          "ip": {
            "maxLength": 45,
            "type": "string",
            "nullable": true
          },
          "device": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserGraphicModel": {
        "type": "object",
        "properties": {
          "imageType": {
            "type": "string",
            "nullable": true
          },
          "imageData": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserNickname": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "nickname": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "isChatHost": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "userGuid": {
            "type": "string",
            "format": "uuid"
          },
          "avatarId": {
            "type": "integer",
            "format": "int32"
          },
          "isBlocked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int32"
          },
          "updatedById": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserTokenViewModel": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "token_type": {
            "type": "string",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VoidResultObject": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasErrors": {
            "type": "boolean",
            "readOnly": true
          },
          "hasMessages": {
            "type": "boolean",
            "readOnly": true
          },
          "isSuccessful": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WinLoseDemoTicketViewModel": {
        "type": "object",
        "properties": {
          "winLoseId": {
            "type": "integer",
            "format": "int32"
          },
          "demoWin": {
            "type": "boolean"
          },
          "prizeValue": {
            "type": "number",
            "format": "double"
          },
          "prizeValueType": {
            "$ref": "#/components/schemas/PrizeValueType"
          },
          "multiplier": {
            "type": "number",
            "format": "double"
          },
          "minPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "WinLoseTicketViewModel": {
        "type": "object",
        "properties": {
          "winLoseId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "correlationId": {
            "type": "string",
            "format": "uuid"
          },
          "autoCompleteTime": {
            "type": "string",
            "format": "date-time"
          },
          "purchasePrice": {
            "type": "number",
            "format": "double"
          },
          "multiplier": {
            "type": "number",
            "format": "double"
          },
          "prizeValue": {
            "type": "number",
            "format": "double"
          },
          "winAmount": {
            "type": "number",
            "format": "double"
          },
          "isFinalized": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WinnerAndAmountView": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "avatarId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "jackpotValueDisplayName": {
            "type": "string",
            "nullable": true
          },
          "isWinner": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "XSameGameTicketViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "format": "uuid"
          },
          "correlationId": {
            "type": "string",
            "description": "Get or sets the correlation ID of the game collection.",
            "format": "uuid"
          },
          "ticketNumber": {
            "type": "integer",
            "description": "Gets or sets the ticket number.",
            "format": "int32"
          },
          "xSameBatchId": {
            "type": "integer",
            "description": "Gets or sets the x same batch identifier.",
            "format": "int32"
          },
          "multiplier": {
            "type": "integer",
            "description": "Gets or sets the multiplier.",
            "format": "int32"
          },
          "layout": {
            "type": "string",
            "description": "Gets or sets the layout.",
            "nullable": true
          },
          "finalized": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this RS.Game.XSame.Models.XSameGameTicketViewModel is finalized."
          },
          "finalizeURL": {
            "type": "string",
            "description": "Gets or sets the finalize URL.",
            "nullable": true
          },
          "finalizeHttpVerb": {
            "type": "string",
            "description": "Gets or sets the finalize HTTP verb.",
            "nullable": true
          },
          "gameName": {
            "type": "string",
            "description": "Gets or sets the name of the game.",
            "nullable": true
          },
          "prizeValue": {
            "type": "number",
            "description": "Gets or sets the win amount.",
            "format": "double"
          },
          "prizeTypeName": {
            "type": "string",
            "description": "Gets or sets the prize type name.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [
        "Bearer"
      ]
    }
  ]
}
