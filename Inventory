{"swagger": "2.0", "basePath": "/si-inventory-mgmt", "paths": {"/": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_rest_test", "tags": ["default"]}}, "/add-update-subscription": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Dict with subscription wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "The user is not allowed to add/update/remove subscription.\ncustomer_id, inventory_id, customer, email_address, to, cc, bcc are mandatory fields.\nOne of to, cc, bcc fields must be y or Y."}, "200": {"description": "Success"}}, "operationId": "post_add_update_subscription", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/add_update_subscription_model"}}], "tags": ["default"]}}, "/coverage-changes-per-status": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Json file with upload dates wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "post_coverage_changes_per_status", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_coverage_changes_per_status"}}], "tags": ["default"]}}, "/delete-picture": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "delete": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Unable to update custom properties."}, "200": {"description": "Success"}}, "operationId": "delete_delete_picture", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/save_custom_picture_model"}}], "tags": ["default"]}}, "/delete-tags": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "delete": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "delete_delete_tags", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/save_delete_tags_model"}}], "tags": ["default"]}}, "/get-all-upload-dates": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Json file with upload dates wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "post_get_all_upload_dates", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_global_filter_model"}}], "tags": ["default"]}}, "/get-assets-distinct-values": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "No distinct values for asset.\nFailed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "get_get_assets_distinct_values", "parameters": [{"description": "*The array of assets distinct values will be gotten for.*", "type": "str", "default": "12100IOU-1000304, 12100IOU-1000305", "name": "asset_name", "in": "query"}], "tags": ["default"]}}, "/get-category-by-geo": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Dict with number of items per category per geo wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: geo_name, country_name, city are valid grouping options.\nOnly the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "post_get_category_by_geo", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_support_coverage_by_geo_model"}}], "tags": ["default"]}}, "/get-column-distinct-values": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: inventory_management, inventory_changes_over_time, inventory_delta_over_time, coverage_delta_over_time are valid table.\nOnly the options: true, false are valid warranty_only."}, "200": {"description": "Success"}}, "operationId": "post_get_column_distinct_values", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_number_of_rows_model"}}], "tags": ["default"]}}, "/get-coverage-status-by-group": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Dict with number of items wasn't generated.\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: product_id, product_family, product_category, vendor are valid grouping options.\nOnly the options: records, split, dict, list, index are valid json_format.\nOnly the options: true, false are valid warranty_only."}, "200": {"description": "Success"}}, "operationId": "post_get_coverage_status_by_group", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_support_coverage_model"}}], "tags": ["default"]}}, "/get-custom-picture": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "No image for the asset.\nValueError"}, "200": {"description": "Success"}}, "operationId": "get_get_custom_picture", "parameters": [{"description": "*The asset name picture will be gotten for.*", "type": "str", "default": "12100IOU-1000304", "name": "asset_name", "in": "query"}], "tags": ["default"]}}, "/get-custom-properties-by-user-client": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Dictionary with saved custom properties wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "get_get_custom_properties_by_user_client", "parameters": [{"name": "json_format", "in": "query", "type": "str", "default": "records", "enum": ["dict", "list", "split", "records", "index"], "description": "*The format of the output JSON.*"}], "tags": ["default"]}}, "/get-geo-country-coordinates": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Dictionary with geo_names,countries and coordinates wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "get_get_geo_country_coordinates", "tags": ["default"]}}, "/get-inventory-changes": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "get_get_inventory_changes", "parameters": [{"name": "json_format", "in": "query", "type": "str", "default": "records", "enum": ["dict", "list", "split", "records", "index"], "description": "*The format of the output JSON.*"}, {"description": "*The requested number of latest months with inventory changes data.*", "type": "int", "default": 12, "name": "number_of_latest_months", "in": "query"}], "tags": ["default"]}}, "/get-inventory-delta": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Json file with upload dates wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format.\nOnly the options: inventory_delta, coverage_delta, alerts_delta are valid delta_type."}, "200": {"description": "Success"}}, "operationId": "post_get_inventory_delta", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_delta_model"}}], "tags": ["default"]}}, "/get-inventory-details": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "No details for the asset were generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "get_get_inventory_details", "parameters": [{"description": "*The asset name, details are requested for.*", "type": "str", "default": "12100IOU-1000304", "name": "asset_name", "in": "query"}], "tags": ["default"]}}, "/get-inventory-for-client": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Json with the required fields wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format.\nOnly the options: true, false are valid warranty_only."}, "200": {"description": "Success"}}, "operationId": "get_get_inventory_for_client", "parameters": [{"name": "json_format", "in": "query", "type": "string", "default": "records", "enum": ["dict", "list", "split", "records", "index"]}], "tags": ["default"]}, "post": {"responses": {"500": {"description": "Json with the required fields wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format.\nOnly the options: true, false are valid warranty_only."}, "200": {"description": "Success"}}, "operationId": "post_get_inventory_for_client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/full_model_extended"}}], "tags": ["default"]}}, "/get-inventory-for-excel": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Json with the required fields wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format.\nOnly the options: true, false are valid warranty_only."}, "200": {"description": "Success"}}, "operationId": "post_get_inventory_for_excel", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/full_model_extended_no_pagination"}}], "tags": ["default"]}}, "/get-inventory-summary": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Json file with summary table per group based on filters wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: product_category, product_family, product_id, vendor, coverage_status are valid grouping options.\nOnly the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "post_get_inventory_summary", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_inventory_summary_model"}}], "tags": ["default"]}}, "/get-last-upload-date-for-client": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Last upload date wasn't received\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "get_get_last_upload_date_for_client", "parameters": [{"name": "json_format", "in": "query", "type": "string", "default": "records", "enum": ["dict", "list", "split", "records", "index"]}], "tags": ["default"]}}, "/get-list-of-all-filtered-assets": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: inventory_management, inventory_changes_over_time, inventory_delta_over_time, coverage_delta_over_time are valid table.\nOnly the options: true, false are valid warranty_only."}, "200": {"description": "Success"}}, "operationId": "post_get_list_of_all_filtered_assets", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_number_of_rows_model"}}], "tags": ["default"]}}, "/get-map-details": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "No json files with required fields generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: product_id, product_family, product_category, vendor, service_level, expiration, coverage_status are valid grouping options.\nOnly the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "post_get_map_details", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_map_model"}}], "tags": ["default"]}}, "/get-number-of-rows-for-client-filter": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Json with row count wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: inventory_management, inventory_changes_over_time, inventory_delta_over_time, coverage_delta_over_time are valid table.\nOnly the options: true, false are valid warranty_only."}, "200": {"description": "Success"}}, "operationId": "post_get_number_of_rows_for_client_filter", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_number_of_rows_model"}}], "tags": ["default"]}}, "/get-preference": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Dict with saved global filters wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "get_get_preference", "parameters": [{"description": "*The preference type, one of selected_columns, map_zoom, scroll_position.*", "type": "str", "default": "selected_columns", "name": "preference_type", "in": "query"}], "tags": ["default"]}}, "/get-saved-global-filters-for-user-client": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Dict with saved global filters wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "get_get_saved_global_filters_for_user_client", "parameters": [{"name": "json_format", "in": "query", "type": "string", "default": "records", "enum": ["dict", "list", "split", "records", "index"]}], "tags": ["default"]}}, "/get-services-for-client": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Json with the required fields wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format.\nOnly the options: true, false are valid warranty_only."}, "200": {"description": "Success"}}, "operationId": "post_get_services_for_client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/full_model_extended_no_pagination"}}], "tags": ["default"]}}, "/get-single-asset-response": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "get_get_single_asset_response", "parameters": [{"name": "json_format", "in": "query", "type": "str", "default": "records", "enum": ["dict", "list", "split", "records", "index"], "description": "*The format of the output JSON.*"}, {"description": "*The asset id values will be gotten for.*", "type": "str", "default": "12100IOU-1000304", "name": "asset_id", "in": "query"}], "tags": ["default"]}}, "/get-support-coverage-risk-by-geo": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Dict with number of items with risk per geo wasn't generated.\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: geo_name, country_name, city are valid grouping options.\nOnly the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "post_get_support_coverage_risk_by_geo", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_support_coverage_by_geo_model"}}], "tags": ["default"]}}, "/get-support-coverage-sla-by-geo": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Dict with number of items with sla per geo wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the option: service_level is valid grouping option.\nOnly the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "post_get_support_coverage_sla_by_geo", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_support_coverage_sla_by_geo_model"}}], "tags": ["default"]}}, "/get-support-coverage-status-by-group": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Dict with number of items wasn't generated.\nFailed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: product_id, product_family, product_category, vendor,geo_name, country_name, city, expiration are valid grouping options.\nOnly the options: records, split, dict, list, index are valid json_format.\nOnly the options: true, false are valid warranty_only."}, "200": {"description": "Success"}}, "operationId": "post_get_support_coverage_status_by_group", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_support_coverage_model"}}], "tags": ["default"]}}, "/inventory-changes-over-time": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "post_inventory_changes_over_time", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_inventory_changes_over_time_model"}}], "tags": ["default"]}}, "/inventory-delta-over-time": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format.\nOnly the options: inventory_delta, coverage_delta, alerts_delta are valid delta_type."}, "200": {"description": "Success"}}, "operationId": "post_inventory_delta_over_time", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/base_delta_over_time_model"}}], "tags": ["default"]}}, "/list-ins-reports": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Only the options: records, split, dict, list, index are valid json_format."}, "200": {"description": "Success"}}, "operationId": "get_list_ins_reports", "parameters": [{"name": "json_format", "in": "query", "type": "string", "default": "records", "enum": ["dict", "list", "split", "records", "index"]}], "tags": ["default"]}}, "/proactive-notification-excel-file-download": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "No excel file found for the securityid and clientid.\nValueError"}, "200": {"description": "Success"}}, "operationId": "get_proactive_notification_excel_file_download", "parameters": [{"description": "*The security ID, excel file will be downloaded for.*", "type": "str", "default": "2a670efc8352b6ebf65fcd7da7018098c8387b6b34179be0421aa514ca45b375", "name": "securityid", "in": "query"}], "tags": ["default"]}}, "/remove-subscription": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "delete": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "The user is not allowed to add/update/remove subscription."}, "200": {"description": "Success"}}, "operationId": "delete_remove_subscription", "parameters": [{"description": "*The email address subscription to be removed for.*", "type": "str", "default": "somebody@email.com, someone@email.com", "name": "email_address", "in": "query"}, {"description": "*The inventory_id subscription to be removed for.*", "type": "str", "default": "1520372", "name": "inventory_id", "in": "query"}, {"description": "*The customer_id subscription to be removed for.*", "type": "str", "default": "PSS_55030", "name": "customer_id", "in": "query"}], "tags": ["default"]}}, "/save-custom-asset-properties": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "asset_id(s) whose properties will be modified must be defined.\nUnable to update custom properties."}, "200": {"description": "Success"}}, "operationId": "post_save_custom_asset_properties", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/custom_asset_properties_model"}}], "tags": ["default"]}}, "/save-custom-geo-location": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Unable to update custom properties."}, "200": {"description": "Success"}}, "operationId": "post_save_custom_geo_location", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/save_custom_geo_location_model"}}], "tags": ["default"]}}, "/save-custom-picture": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Unable to update custom properties."}, "200": {"description": "Success"}}, "operationId": "post_save_custom_picture", "parameters": [{"name": "file", "in": "formData", "type": "file", "required": true}, {"description": "*The asset names picture will be saved for.*", "type": "list", "default": "12100IOU-1000304, 12100IOU-1000305", "name": "asset_name", "in": "query"}, {"description": "*The requesting role id, role_id=1 for Viewer is not allowed to set custom picture.*", "type": "int", "default": 3, "name": "role_id", "in": "query"}], "consumes": ["multipart/form-data"], "tags": ["default"]}}, "/save-custom-properties": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Unable to update custom properties."}, "200": {"description": "Success"}}, "operationId": "get_save_custom_properties", "parameters": [{"description": "*The requested property number for the client, whose properties to be inserted/updated.*", "type": "int", "default": 4, "name": "property_number", "in": "query"}, {"description": "*The name to be displayed in the UI for the client and the property number.*", "type": "str", "default": "True-Up Device Type", "name": "display_name", "in": "query"}, {"description": "*The description of the property.*", "type": "str", "default": "True-Up Device Type", "name": "description", "in": "query"}, {"description": "*The requesting role id, role_id=1 for Viewer is not allowed to set custom properties.*", "type": "int", "default": 3, "name": "role_id", "in": "query"}], "tags": ["default"]}, "post": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "400": {"description": "Unable to update custom properties."}, "200": {"description": "Success"}}, "operationId": "post_save_custom_properties", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/save_custom_properties_model"}}], "tags": ["default"]}}, "/save-filters": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Dict with saved filters wasn't generated. Most likely problem with saved_filters parameter\nFailed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "post_save_filters", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/save_filter_model"}}], "tags": ["default"]}}, "/save-labels-for-custom-fields": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "post_save_labels_for_custom_fields", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/save_labels_for_custom_fields_model"}}], "tags": ["default"]}}, "/save-preference": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Dict with saved filters wasn't generated. Most likely problem with saved_filters parameter\nFailed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "post_save_preference", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/save_preference_model"}}], "tags": ["default"]}}, "/save-tags": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "post": {"responses": {"500": {"description": "Dict with asset:tag wasn't generated\nFailed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "post_save_tags", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/save_delete_tags_model"}}], "tags": ["default"]}}, "/update-city-coordinates": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "get_update_city_coordinates", "tags": ["default"]}}, "/update-country-coordinates": {"parameters": [{"name": "userid", "in": "header", "type": "string"}, {"name": "clientprofileid", "in": "header", "type": "string", "default": "1"}], "get": {"responses": {"500": {"description": "Failed to process the request."}, "404": {"description": "ValueError"}, "200": {"description": "Success"}}, "operationId": "get_update_country_coordinates", "tags": ["default"]}}}, "info": {"title": "API", "version": "1.0"}, "produces": ["application/json"], "consumes": ["application/json"], "securityDefinitions": {"Bearer Auth": {"type": "apiKey", "in": "header", "name": "Authorization"}}, "security": [{"Bearer Auth": []}], "tags": [{"name": "default", "description": "Default namespace"}], "definitions": {"full_model_extended": {"required": ["json_format", "warranty_only"], "properties": {"json_format": {"type": "string", "example": "records"}, "searched_columns": {"type": "object", "example": []}, "searched_word": {"type": "string", "example": "100"}, "orderBy": {"type": "object", "example": ["assetName", "productFamily"]}, "orderHow": {"type": "object", "example": ["asc", "desc"]}, "offset": {"type": "string", "example": "0"}, "rowCount": {"type": "string", "example": "20"}, "warranty_only": {"type": "string", "example": "false"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}, "union_filters": {"type": "array", "items": {"$ref": "#/definitions/union_filters"}}}, "type": "object"}, "global_filters": {"properties": {"fieldname": {"type": "string", "example": "productFamily"}, "operator": {"type": "string", "example": "isOneOf"}, "values": {"type": "array", "items": {"type": "string", "example": "Router"}}}, "type": "object"}, "local_filters": {"properties": {"fieldname": {"type": "string", "example": "geo"}, "operator": {"type": "string", "example": "isNotOneOf"}, "values": {"type": "array", "items": {"type": "string", "example": "EMEA"}}}, "type": "object"}, "union_filters": {"properties": {"fieldname": {"type": "string", "example": "expiration"}, "operator": {"type": "string", "example": "isOneOf"}, "values": {"type": "array", "items": {"type": "string", "example": ""}}}, "type": "object"}, "full_model_extended_no_pagination": {"required": ["json_format", "warranty_only"], "properties": {"json_format": {"type": "string", "example": "records"}, "searched_columns": {"type": "object", "example": []}, "searched_word": {"type": "string", "example": "100"}, "orderBy": {"type": "object", "example": ["assetName", "productFamily"]}, "orderHow": {"type": "object", "example": ["asc", "desc"]}, "warranty_only": {"type": "string", "example": "false"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}, "union_filters": {"type": "array", "items": {"$ref": "#/definitions/union_filters"}}}, "type": "object"}, "save_filter_model": {"properties": {"user_role": {"type": "string", "example": "Maintainer"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}}, "type": "object"}, "save_labels_for_custom_fields_model": {"properties": {"asset_name": {"type": "string", "example": "12100IOU-1000304"}, "property_number": {"type": "integer", "example": 1}, "display_name": {"type": "string", "example": "test name"}, "description": {"type": "string", "example": "test description"}}, "type": "object"}, "base_support_coverage_model": {"required": ["group", "json_format", "warranty_only"], "properties": {"json_format": {"type": "string", "example": "records"}, "group": {"type": "string", "example": "vendor"}, "warranty_only": {"type": "string", "example": "false"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}, "union_filters": {"type": "array", "items": {"$ref": "#/definitions/union_filters"}}}, "type": "object"}, "base_support_coverage_by_geo_model": {"required": ["group", "json_format"], "properties": {"json_format": {"type": "string", "example": "records"}, "group": {"type": "string", "example": "country_name"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}, "union_filters": {"type": "array", "items": {"$ref": "#/definitions/union_filters"}}}, "type": "object"}, "base_support_coverage_sla_by_geo_model": {"required": ["group", "json_format"], "properties": {"json_format": {"type": "string", "example": "records"}, "group": {"type": "string", "example": "service_level"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}, "union_filters": {"type": "array", "items": {"$ref": "#/definitions/union_filters"}}}, "type": "object"}, "save_custom_properties_model": {"properties": {"role_id": {"type": "integer", "example": 5}, "custom_property_1": {"$ref": "#/definitions/custom_property"}, "custom_property_2": {"$ref": "#/definitions/custom_property"}, "custom_property_3": {"$ref": "#/definitions/custom_property"}, "custom_property_4": {"$ref": "#/definitions/custom_property"}, "custom_property_5": {"$ref": "#/definitions/custom_property"}, "custom_property_6": {"$ref": "#/definitions/custom_property"}, "custom_property_7": {"$ref": "#/definitions/custom_property"}, "custom_property_8": {"$ref": "#/definitions/custom_property"}, "custom_property_9": {"$ref": "#/definitions/custom_property"}, "custom_property_10": {"$ref": "#/definitions/custom_property"}, "custom_property_11": {"$ref": "#/definitions/custom_property"}, "custom_property_12": {"$ref": "#/definitions/custom_property"}, "custom_property_13": {"$ref": "#/definitions/custom_property"}, "custom_property_14": {"$ref": "#/definitions/custom_property"}, "custom_property_15": {"$ref": "#/definitions/custom_property"}, "custom_property_16": {"$ref": "#/definitions/custom_property"}, "custom_property_17": {"$ref": "#/definitions/custom_property"}, "custom_property_18": {"$ref": "#/definitions/custom_property"}, "custom_property_19": {"$ref": "#/definitions/custom_property"}, "custom_property_20": {"$ref": "#/definitions/custom_property"}}, "type": "object"}, "custom_property": {"properties": {"display_name": {"type": "string", "example": ""}, "description": {"type": "string", "example": ""}}, "type": "object"}, "custom_asset_properties_model": {"required": ["asset_id", "role_id"], "properties": {"role_id": {"type": "integer", "example": 3}, "asset_id": {"type": "array", "items": {"type": "string", "example": "12100IOU-1000304"}}, "asset_name": {"type": "string", "example": "1-2100-IOU SN 1000304"}, "product_id": {"type": "string", "example": "gk1234"}, "product_family": {"type": "string", "example": "Router"}, "priority": {"type": "string", "example": "2"}, "product_category": {"type": "string", "example": "Server"}}, "type": "object"}, "save_delete_tags_model": {"properties": {"asset_name": {"type": "array", "items": {"type": "string", "example": "12100IOU-1000304"}}, "tag": {"type": "array", "items": {"type": "string", "example": "newtag"}}}, "type": "object"}, "save_custom_picture_model": {"required": ["asset_name", "role_id"], "properties": {"role_id": {"type": "integer", "example": 3}, "asset_name": {"type": "array", "example": ["12100IOU-1000304", "12100IOU-1000305"], "items": {"type": "string"}}}, "type": "object"}, "save_custom_geo_location_model": {"properties": {"role_id": {"type": "integer", "example": 3}, "asset_name": {"type": "array", "items": {"type": "string", "example": "12100IOU-1000304"}}, "custom_geo": {"type": "string", "example": "Americas"}, "custom_country": {"type": "string", "example": "UNITED STATES"}, "city": {"type": "string", "example": "New York"}, "street_address": {"type": "string", "example": "Main Avenue"}, "location": {"type": "string", "example": "Central Park"}}, "type": "object"}, "base_inventory_changes_over_time_model": {"required": ["json_format", "month", "year"], "properties": {"json_format": {"type": "string", "example": "records"}, "searched_columns": {"type": "object", "example": []}, "searched_word": {"type": "string", "example": "100"}, "orderBy": {"type": "object", "example": ["assetName", "productFamily"]}, "orderHow": {"type": "object", "example": ["asc", "desc"]}, "offset": {"type": "string", "example": "0"}, "rowCount": {"type": "string", "example": "20"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}, "year": {"type": "integer", "example": 2022}, "month": {"type": "integer", "example": 1}}, "type": "object"}, "base_number_of_rows_model": {"required": ["json_format", "previous_upload_time", "table", "upload_time", "warranty_only"], "properties": {"json_format": {"type": "string", "example": "records"}, "searched_columns": {"type": "object", "example": []}, "searched_word": {"type": "string", "example": "100"}, "warranty_only": {"type": "string", "example": "false"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}, "union_filters": {"type": "array", "items": {"$ref": "#/definitions/union_filters"}}, "table": {"type": "string", "example": "inventory_changes_over_time"}, "year": {"type": "integer", "example": 2022}, "month": {"type": "integer", "example": 1}, "previous_upload_time": {"type": "string", "example": "2022-10-31-13.05.00"}, "upload_time": {"type": "string", "example": "2022-11-07-15.39.15"}}, "type": "object"}, "base_inventory_summary_model": {"required": ["group", "json_format", "warranty_only"], "properties": {"group": {"type": "string", "example": "vendor"}, "json_format": {"type": "string", "example": "records"}, "searched_columns": {"type": "object", "example": []}, "searched_word": {"type": "string", "example": "100"}, "orderBy": {"type": "object", "example": ["assetName", "productFamily"]}, "orderHow": {"type": "object", "example": ["asc", "desc"]}, "warranty_only": {"type": "string", "example": "false"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}, "union_filters": {"type": "array", "items": {"$ref": "#/definitions/union_filters"}}}, "type": "object"}, "base_map_model": {"required": ["group", "json_format"], "properties": {"json_format": {"type": "string", "example": "records"}, "group": {"type": "string", "example": "vendor"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}, "union_filters": {"type": "array", "items": {"$ref": "#/definitions/union_filters"}}}, "type": "object"}, "save_preference_model": {"required": ["data_json", "preference_type"], "properties": {"preference_type": {"type": "string", "description": "*The preference type, one of selected_columns, map_zoom, scroll_position.*", "example": "selected_columns"}, "data_json": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/definitions/inventoryTabTableOrdering"}}}}, "type": "object"}, "inventoryTabTableOrdering": {"properties": {"columnId": {"type": "string", "example": "assetName"}, "isHidden": {"type": "string", "example": "false"}}, "type": "object"}, "base_global_filter_model": {"required": ["json_format"], "properties": {"json_format": {"type": "string", "example": "records"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}}, "type": "object"}, "base_delta_over_time_model": {"required": ["delta_type", "json_format", "previous_upload_time", "upload_time"], "properties": {"json_format": {"type": "string", "example": "records"}, "searched_columns": {"type": "object", "example": []}, "searched_word": {"type": "string", "example": "100"}, "orderBy": {"type": "object", "example": ["assetName", "productFamily"]}, "orderHow": {"type": "object", "example": ["asc", "desc"]}, "offset": {"type": "string", "example": "0"}, "rowCount": {"type": "string", "example": "20"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}, "delta_type": {"type": "string", "example": "coverage_delta"}, "previous_upload_time": {"type": "string", "example": "2022-10-31-13.05.00"}, "upload_time": {"type": "string", "example": "2022-11-07-15.39.15"}}, "type": "object"}, "base_delta_model": {"required": ["delta_type", "json_format", "previous_upload_time", "upload_time"], "properties": {"delta_type": {"type": "string", "example": "coverage_delta"}, "previous_upload_time": {"type": "string", "example": "2022-10-31-13.05.00"}, "upload_time": {"type": "string", "example": "2023-11-07-15.39.15"}, "json_format": {"type": "string", "example": "records"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}}, "type": "object"}, "base_coverage_changes_per_status": {"required": ["json_format", "previous_upload_time", "upload_time"], "properties": {"previous_upload_time": {"type": "string", "example": "2022-10-31-13.05.00"}, "upload_time": {"type": "string", "example": "2022-11-07-15.39.15"}, "json_format": {"type": "string", "example": "records"}, "global_filters": {"type": "array", "items": {"$ref": "#/definitions/global_filters"}}, "local_filters": {"type": "array", "items": {"$ref": "#/definitions/local_filters"}}}, "type": "object"}, "add_update_subscription_model": {"required": ["bcc", "cc", "customer", "customer_id", "email_address", "inventory_id", "to"], "properties": {"customer_id": {"type": "string", "example": "PSS_55030"}, "inventory_id": {"type": "string", "example": "1520372"}, "customer": {"type": "string", "example": "CITY OF SURREY THE"}, "inventory_name": {"type": "string", "example": "CITY OF SURREY"}, "send_notification": {"type": "string", "description": "*One of y, n, Y, N, set to N if unavailable in DB yet.*", "example": "Y"}, "send_fn_notification": {"type": "string", "description": "*One of y, n, Y, N, set to N if unavailable in DB yet.*", "example": "y"}, "send_hweos_notifications_to_eu": {"type": "string", "description": "*One of y, n, Y, N, set to N if unavailable in DB yet.*", "example": "N"}, "send_coverage_notifications_to_eu": {"type": "string", "description": "*One of y, n, Y, N, set to N if unavailable in DB yet.*", "example": "n"}, "email_address": {"type": "string", "example": "somebody@email.com, someone@email.com"}, "to": {"type": "string", "example": "Y"}, "cc": {"type": "string", "example": "N"}, "bcc": {"type": "string", "example": "n"}, "address_to": {"type": "string", "example": "Hi all,"}, "display_name": {"type": "string", "example": "THE CITY OF SURREY"}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}}}
