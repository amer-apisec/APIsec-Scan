{
  "openapi": "3.0.1",
  "info": {
    "title": "PointOfSales Devices API",
    "description": "Orchestrating POS devices",
    "version": "v1"
  },
  "paths": {
    "/api/v{version}/devices/activation": {
      "post": {
        "tags": [
          "Activation"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.CreateActivationCodeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.CreateActivationCodeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.CreateActivationCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.ActivationCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/devices/activation/{activationCode}/redeem": {
      "get": {
        "tags": [
          "Activation"
        ],
        "parameters": [
          {
            "name": "activationCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/devices/activation/refresh": {
      "post": {
        "tags": [
          "Activation"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.RefreshTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.RefreshTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/devices/activation/revoke/{refreshtoken}": {
      "put": {
        "tags": [
          "Activation"
        ],
        "parameters": [
          {
            "name": "refreshtoken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/cashfloat": {
      "get": {
        "tags": [
          "CashFloat"
        ],
        "operationId": "GetCashRegisterCashFloat",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.CashFloat.CashFloatResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CashFloat"
        ],
        "operationId": "SetCashRegisterCashFloat",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.CashFloat.CashFloatRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.CashFloat.CashFloatRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.CashFloat.CashFloatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.CashFloat.CashFloatResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/configuration": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.CashRegisterConfiguration"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/configuration/pinpad": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.PinpadConfiguration"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/configuration/flags": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.FeatureFlagRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.FeatureFlagRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.FeatureFlagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.FeatureFlagResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Customers.CustomerListEntry"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Customers.CustomerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Customers.CustomerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Customers.CustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Customers.Contracts.CustomerResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/customer/{number}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "GetCustomer",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Customers.Contracts.CustomerResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "UpdateCustomer",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Customers.CustomerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Customers.CustomerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Customers.CustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Customers.Contracts.CustomerResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/externalorder/updatestate/{id}": {
      "put": {
        "tags": [
          "ExternalOrder"
        ],
        "operationId": "Update order state",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.UpdateOrderStateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.RequestResult"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v{version}/externalorder/reject/{id}": {
      "put": {
        "tags": [
          "ExternalOrder"
        ],
        "operationId": "Reject order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.RejectOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.RequestResult"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v{version}/externalorder/accept/{id}": {
      "put": {
        "tags": [
          "ExternalOrder"
        ],
        "operationId": "Accept order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.AcceptOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.RequestResult"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v{version}/externalorder": {
      "get": {
        "tags": [
          "ExternalOrder"
        ],
        "operationId": "Get all orders",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.ExternalOrder.ExternalOrderResponse"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v{version}/externalorder/{id}": {
      "get": {
        "tags": [
          "ExternalOrder"
        ],
        "operationId": "Get order by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.ExternalOrder.ExternalOrderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v{version}/internalorder/{id}": {
      "get": {
        "tags": [
          "InternalOrder"
        ],
        "operationId": "GetInternalOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.InternalOrder.DirectOrderResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InternalOrder"
        ],
        "operationId": "UpdateInternalOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.InternalOrder.DirectOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.InternalOrder.DirectOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.InternalOrder.DirectOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/internalorder": {
      "get": {
        "tags": [
          "InternalOrder"
        ],
        "operationId": "GetInternalOrders",
        "parameters": [
          {
            "name": "createdByCashRegisterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.InternalOrder.DirectOrderResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InternalOrder"
        ],
        "operationId": "CreateInternalOrder",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.InternalOrder.DirectOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.InternalOrder.DirectOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.InternalOrder.DirectOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.OrderCreated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/loyalty/accounts/{referenceId}": {
      "get": {
        "tags": [
          "Loyalty"
        ],
        "operationId": "GetLoyaltyAccountByReference",
        "parameters": [
          {
            "name": "referenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Loyalty.LoyaltyAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/loyalty/accounts": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "operationId": "CreateLoyaltyAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Loyalty.CreateLoyaltyAccountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Loyalty.CreateLoyaltyAccountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Loyalty.CreateLoyaltyAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Loyalty.LoyaltyAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/menus": {
      "get": {
        "tags": [
          "Menus"
        ],
        "operationId": "GetMenus",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Menu.Menu"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "GetOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "operationId": "UpdateOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "GetOrders",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "CreateOrder",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderCreated"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/payments": {
      "post": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InitiatePaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InitiatePaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InitiatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "423": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.PaymentOperationResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/payments/refund": {
      "post": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InitiateRefundRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InitiateRefundRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InitiateRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/payments/{operationId}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.PaymentOperationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.PaymentOperationPatchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.PaymentOperationPatchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.PaymentOperationPatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/payments/{operationId}/status": {
      "get": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.PaymentStatusUpdated"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/payments/{operationId}/cancel": {
      "put": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.PaymentRequestStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/payments/{operationId}/acknowledge": {
      "put": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/payments/invoice": {
      "post": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InvoicePaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InvoicePaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InvoicePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InvoicePaymentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/printers/{documentId}": {
      "get": {
        "tags": [
          "Printers"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Printers.PrintCommand"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Printers"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/printers/status": {
      "post": {
        "tags": [
          "Printers"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Printers.PrinterStateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Printers.PrinterStateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Printers.PrinterStateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/receipts/{cardIdAlias}/canprintdigital": {
      "get": {
        "tags": [
          "Receipts"
        ],
        "parameters": [
          {
            "name": "cardIdAlias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Receipts.DigitalPrintAvailabilityResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/reports/z": {
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "GetZReportEndOfDay",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.ZReport"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/reports/z/{year}/{month}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "GetAllZReports",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.ZReport"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/reports/x": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "GetXReport",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.XReport"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/reports/articles": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "GetArticlesReport",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.ArticlesSummaryReport"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/sales": {
      "get": {
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 200
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.Sale"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.AddSaleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.AddSaleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.AddSaleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/sales/{saleId}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.Sale"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/sales/refund": {
      "post": {
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.Refunds.RefundRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.Refunds.RefundRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.Refunds.RefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.Refunds.RefundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/sales/{saleId}/receiptinfo": {
      "get": {
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Receipts.ReceiptMetadata"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/sales/{saleId}/receiptcopy": {
      "post": {
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Receipts.PrintReceiptCopyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Receipts.PrintReceiptCopyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Receipts.PrintReceiptCopyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Receipts.PrintReceiptCopyResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tablearea": {
      "get": {
        "tags": [
          "TableArea"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TableArea"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/sessions/{tableAreaNumber}": {
      "get": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "tableAreaNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.TableHandling.Contracts.OrderContracts.TableSession"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/tables/{tableId}/allorders": {
      "get": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{orderId}": {
      "get": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.PatchTableOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.PatchTableOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.PatchTableOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "deleteReason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{tableId}/create": {
      "post": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.CreateTableOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.CreateTableOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.CreateTableOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{orderId}/move/{costCenterId}/{tableId}": {
      "put": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "costCenterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{orderId}/{servingId}/additem": {
      "post": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "servingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.CreateTableOrderItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.CreateTableOrderItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.CreateTableOrderItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.OrderItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{orderId}/{servingId}/{orderLineId}": {
      "patch": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "servingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "orderLineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.PatchTableOrderItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.PatchTableOrderItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.PatchTableOrderItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{fromorderId}/{lineId}/moveitem/{toorderId}/{servingId}": {
      "put": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "fromOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "lineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "toOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "servingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{orderId}/{servingId}/{lineId}": {
      "delete": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "servingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "lineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{orderId}/{servingId}": {
      "get": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "servingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.Serving"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "servingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.PatchServingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.PatchServingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.PatchServingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{orderId}/addserving": {
      "post": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.CreateServingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.CreateServingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.CreateServingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.Serving"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{orderId}/{lineId}/moveitemtoserving/{targetServingId}": {
      "put": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "lineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "targetServingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{orderId}/canpay": {
      "get": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tableorder/{orderId}/sales": {
      "put": {
        "tags": [
          "TableOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.AddSaleReferenceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.AddSaleReferenceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.AddSaleReferenceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/taxjournal/export": {
      "post": {
        "tags": [
          "TaxJournal"
        ],
        "operationId": "ExportTaxJournalForCashRegister",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TaxJournal.GetTaxJournalRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TaxJournal.GetTaxJournalRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TaxJournal.GetTaxJournalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/taxjournal": {
      "post": {
        "tags": [
          "TaxJournal"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TaxJournal.TaxJournalEntry"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TaxJournal.TaxJournalEntry"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TaxJournal.TaxJournalEntry"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Users.LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Users.LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Users.LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Users.LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Common.AspNetCore.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Users.LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Users.LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Users.LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Open.Common.AspNetCore.ApiError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "innerException": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Customers.Contracts.Address": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Customers.Contracts.CustomerResponse": {
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Open.InternalApi.Customers.Contracts.Address"
          },
          "invoicingDetails": {
            "$ref": "#/components/schemas/Open.InternalApi.Customers.Contracts.InvoicingDetails"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "costCenter": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "integer",
            "format": "int32"
          },
          "showPriceVatIncluded": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/Open.InternalApi.Customers.Contracts.CustomerType"
          },
          "source": {
            "$ref": "#/components/schemas/Open.InternalApi.Customers.Contracts.CustomerSource"
          },
          "website": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Customers.Contracts.CustomerSource": {
        "enum": [
          "Internal",
          "Fortnox",
          "Tripletex"
        ],
        "type": "string"
      },
      "Open.InternalApi.Customers.Contracts.CustomerType": {
        "enum": [
          "Company",
          "Private"
        ],
        "type": "string"
      },
      "Open.InternalApi.Customers.Contracts.InvoicingDetails": {
        "type": "object",
        "properties": {
          "allowInvoicing": {
            "type": "boolean"
          },
          "useCollectiveInvoice": {
            "type": "boolean"
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceAdministrationFee": {
            "type": "number",
            "format": "double"
          },
          "maxInvoicingAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dueDays": {
            "type": "integer",
            "format": "int32"
          },
          "keyWord": {
            "type": "string",
            "nullable": true
          },
          "requiresReference": {
            "type": "boolean"
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Customers.Contracts.Reference"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Customers.Contracts.Reference": {
        "type": "object",
        "properties": {
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.AcceptOrderRequest": {
        "type": "object",
        "properties": {
          "expectedDeliveryTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.Addon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "articleId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.Article": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "addons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Addon"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.CustomerInfo": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.Delivery": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.DeliveryType"
          },
          "expectedDeliveryTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.DeliveryAddress"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.DeliveryAddress": {
        "type": "object",
        "properties": {
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "additionalInformation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.DeliveryType": {
        "enum": [
          "TakeAway",
          "DineIn",
          "RiderPickup",
          "DrivingOut"
        ],
        "type": "string"
      },
      "Open.InternalApi.ExternalOrders.Contracts.OrderState": {
        "enum": [
          "Pending",
          "Accepted",
          "InProgress",
          "Ready",
          "BeingDelivered",
          "Completed",
          "Cancelled"
        ],
        "type": "string"
      },
      "Open.InternalApi.ExternalOrders.Contracts.Payment": {
        "type": "object",
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.RejectOrderRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.RequestResult": {
        "type": "object",
        "properties": {
          "details": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.ResultDetails"
          },
          "isSuccess": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.ResultDetails": {
        "enum": [
          "Ok",
          "Unauthorized",
          "IllegalStateTransition",
          "OrderCancelled",
          "ServerError",
          "InvalidSalesChannel",
          "NotFound"
        ],
        "type": "string"
      },
      "Open.InternalApi.ExternalOrders.Contracts.UpdateOrderStateRequest": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.OrderState"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.InternalOrders.Contracts.DeliveryType": {
        "enum": [
          "InHouse",
          "Direct",
          "Pickup",
          "Delivery"
        ],
        "type": "string"
      },
      "Open.InternalApi.InternalOrders.Contracts.InternalOrderState": {
        "enum": [
          "Active",
          "Future",
          "Locked",
          "Parked",
          "MasterCorrected"
        ],
        "type": "string"
      },
      "Open.InternalApi.Orders.Contracts.ArticleType": {
        "enum": [
          "Salable",
          "NonSalable",
          "Service"
        ],
        "type": "string"
      },
      "Open.InternalApi.Orders.Contracts.Authorization": {
        "enum": [
          "Online",
          "Offline",
          "None",
          "Phone",
          "Unknown"
        ],
        "type": "string"
      },
      "Open.InternalApi.Orders.Contracts.CardDetails": {
        "type": "object",
        "properties": {
          "cardIdAlias": {
            "type": "string",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "terminalNumber": {
            "type": "string",
            "nullable": true
          },
          "terminalType": {
            "type": "string",
            "nullable": true
          },
          "aid": {
            "type": "string",
            "nullable": true
          },
          "cardName": {
            "type": "string",
            "nullable": true
          },
          "cardType": {
            "type": "string",
            "nullable": true
          },
          "cardAcquirerName": {
            "type": "string",
            "nullable": true
          },
          "acquirerReference": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "string",
            "nullable": true
          },
          "verificationMode": {
            "type": "string",
            "nullable": true
          },
          "cardEntryMethod": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.CardEntryMethod"
          },
          "authorizationType": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.Authorization"
          },
          "cardOrderId": {
            "type": "string",
            "nullable": true
          },
          "emvData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.CardEntryMethod": {
        "enum": [
          "Chip",
          "Magnetic",
          "Manual",
          "ContactLess",
          "Unknown"
        ],
        "type": "string"
      },
      "Open.InternalApi.Orders.Contracts.CashDetails": {
        "type": "object",
        "properties": {
          "returnAmount": {
            "type": "number",
            "format": "double"
          },
          "receiveAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.DeliveryType": {
        "enum": [
          "InHouse",
          "Direct",
          "Pickup",
          "Delivery"
        ],
        "type": "string"
      },
      "Open.InternalApi.Orders.Contracts.InvoicePaymentDetails": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "invoiceFee": {
            "type": "number",
            "format": "double"
          },
          "invoiceReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.MobilePaymentDetails": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.MobilePaymentType"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.MobilePaymentType": {
        "enum": [
          "SimpleSwish",
          "Swish",
          "Vipps"
        ],
        "type": "string"
      },
      "Open.InternalApi.Orders.Contracts.OpenPaymentDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "overpayAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.OrderCreated": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.OrderItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "articleId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "articleName": {
            "type": "string",
            "nullable": true
          },
          "articleNumber": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "sellFactor": {
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "discountExtra": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "sum": {
            "type": "number",
            "format": "double"
          },
          "net": {
            "type": "number",
            "format": "double"
          },
          "vat": {
            "type": "number",
            "format": "double"
          },
          "isDiscountable": {
            "type": "boolean"
          },
          "isTakeAway": {
            "type": "boolean"
          },
          "hasOpenPrice": {
            "type": "boolean"
          },
          "salesUnitName": {
            "type": "string",
            "nullable": true
          },
          "salesUnitAbbreviation": {
            "type": "string",
            "nullable": true
          },
          "servingPriority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productGroupId": {
            "type": "string",
            "nullable": true
          },
          "productGroupName": {
            "type": "string",
            "nullable": true
          },
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "articleQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "vatDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.VatDetail"
            },
            "nullable": true
          },
          "articleType": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.ArticleType"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.Variant"
            },
            "nullable": true
          },
          "addOns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.OrderRequest": {
        "type": "object",
        "properties": {
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "localOrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryType": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.DeliveryType"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "orderState": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderState"
          },
          "deliveryState": {
            "type": "integer",
            "format": "int32"
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "closedByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "closedByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "currencyIsoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "orderName": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "deleteReason": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderItem"
            },
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.Payment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.OrderResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "localOrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryType": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.DeliveryType"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "orderState": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderState"
          },
          "deliveryState": {
            "type": "integer",
            "format": "int32"
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "closedByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "closedByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "currencyIsoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "orderName": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "deleteReason": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OrderItem"
            },
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.Payment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.OrderState": {
        "enum": [
          "Active",
          "Future",
          "Locked",
          "Parked",
          "MasterCorrected"
        ],
        "type": "string"
      },
      "Open.InternalApi.Orders.Contracts.Payment": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currencyIsoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "extra": {
            "type": "number",
            "format": "double"
          },
          "cardDetails": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.CardDetails"
          },
          "cashDetails": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.CashDetails"
          },
          "openPaymentDetails": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.OpenPaymentDetails"
          },
          "mobilePaymentDetails": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.MobilePaymentDetails"
          },
          "invoicePaymentDetails": {
            "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.InvoicePaymentDetails"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.Variant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Orders.Contracts.VariantOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.VariantOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Orders.Contracts.VatDetail": {
        "type": "object",
        "properties": {
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "vatAmount": {
            "type": "number",
            "format": "double"
          },
          "netAmount": {
            "type": "number",
            "format": "double"
          },
          "sumAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.TableHandling.Contracts.OrderContracts.TableSession": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "tableId": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfGuests": {
            "type": "integer",
            "format": "int32"
          },
          "canBeChanged": {
            "type": "boolean"
          },
          "orderName": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastServingFiredAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "guestBillPrintedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.TableHandling.Contracts.TableAreaContracts.Table": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "layoutInfo": {
            "$ref": "#/components/schemas/Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TableLayoutInfo"
          },
          "numberOfSeats": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TableArea": {
        "type": "object",
        "properties": {
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "tableAreaNumber": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "layoutInfo": {
            "$ref": "#/components/schemas/Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TableAreaLayoutInfo"
          },
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.TableHandling.Contracts.TableAreaContracts.Table"
            },
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TableAreaLayoutInfo": {
        "type": "object",
        "properties": {
          "tableNumberFontSize": {
            "type": "integer",
            "format": "int32"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TextAreaShape"
            },
            "nullable": true
          },
          "walls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.TableHandling.Contracts.TableAreaContracts.WallAreaShape"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TableLayoutInfo": {
        "type": "object",
        "properties": {
          "posX": {
            "type": "number",
            "format": "double"
          },
          "posY": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "angle": {
            "type": "number",
            "format": "double"
          },
          "shape": {
            "$ref": "#/components/schemas/Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TableShapeType"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TableShapeType": {
        "enum": [
          "Rectangle",
          "Ellipse"
        ],
        "type": "string"
      },
      "Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TextAreaShape": {
        "type": "object",
        "properties": {
          "posX": {
            "type": "number",
            "format": "double"
          },
          "posY": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "angle": {
            "type": "number",
            "format": "double"
          },
          "fontSize": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.TableHandling.Contracts.TableAreaContracts.WallAreaShape": {
        "type": "object",
        "properties": {
          "posX": {
            "type": "number",
            "format": "double"
          },
          "posY": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "angle": {
            "type": "number",
            "format": "double"
          },
          "shape": {
            "$ref": "#/components/schemas/Open.InternalApi.TableHandling.Contracts.TableAreaContracts.WallFormShape"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.TableHandling.Contracts.TableAreaContracts.WallFormShape": {
        "enum": [
          "Rectangle",
          "Ellipse"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.CashFloat.CashFloatRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.CashFloat.CashFloatResponse": {
        "type": "object",
        "properties": {
          "isCashFloatSet": {
            "type": "boolean"
          },
          "amount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.CashRegisterConfiguration": {
        "type": "object",
        "properties": {
          "lastReportedReceiptNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "controlUnit": {
            "type": "string",
            "nullable": true
          },
          "currencyISOAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "endOfDay": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "costCenterName": {
            "type": "string",
            "nullable": true
          },
          "serverTime": {
            "type": "string",
            "format": "date-time"
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "softpayMerchantId": {
            "type": "string",
            "nullable": true
          },
          "contactInformation": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.ContactInformation"
          },
          "supportedPaymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.PaymentMethod"
            },
            "nullable": true,
            "deprecated": true
          },
          "complianceRegion": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.ComplianceRegion"
          },
          "receiptData": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.ReceiptConfiguration"
          },
          "externalOrder": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.ExternalOrderConfiguration"
          },
          "loyaltyProgram": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.LoyaltyProgram"
          },
          "paymentConfiguration": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.PaymentConfiguration"
          },
          "uiConfiguration": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.UiConfiguration"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.ClientPlatform": {
        "enum": [
          "Android",
          "IOS"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.ComplianceRegion": {
        "enum": [
          "Sweden",
          "Norway",
          "Finland",
          "Denmark"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.ContactInformation": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.ExternalOrderConfiguration": {
        "type": "object",
        "properties": {
          "orderStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.ExternalOrderStateColumn"
            },
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.ExternalOrderStoreStatus"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.ExternalOrderStateColumn": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "foregroundColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.ExternalOrderStoreStatus": {
        "enum": [
          "Open",
          "Closed"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.FeatureFlagRequest": {
        "type": "object",
        "properties": {
          "clientPlatform": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.ClientPlatform"
          },
          "clientVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.FeatureFlagResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isSupported": {
            "type": "boolean"
          },
          "configuration": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.IdentificationMethods": {
        "enum": [
          "SocialSecurityNumber",
          "Email",
          "MobilePhoneNumber",
          "AccountId"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.LoyaltyProgram": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "signUpMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.IdentificationMethods"
            },
            "nullable": true
          },
          "identificationMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.IdentificationMethods"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.LoyaltyProgramType"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.LoyaltyProgramType": {
        "enum": [
          "Simple",
          "Full"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.PaymentConfiguration": {
        "type": "object",
        "properties": {
          "paymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.PaymentMethod"
            },
            "nullable": true
          },
          "tippingType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.TippingType"
          },
          "tippingOptions": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.PaymentMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "openCashDrawer": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.PaymentType"
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.PaymentType": {
        "enum": [
          "Card",
          "Open",
          "Cash",
          "SimpleSwish",
          "FortnoxInvoice",
          "Swish",
          "Vipps"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.PinpadConfiguration": {
        "type": "object",
        "properties": {
          "currencyISOAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "endOfDay": {
            "type": "string",
            "nullable": true
          },
          "serverTime": {
            "type": "string",
            "format": "date-time"
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "costCenterName": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.ReceiptConfiguration": {
        "type": "object",
        "properties": {
          "contactInformation": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.ContactInformation"
          },
          "header": {
            "type": "string",
            "nullable": true
          },
          "footer": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "qrCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Configuration.UiConfiguration": {
        "type": "object",
        "properties": {
          "externalOrderEnabled": {
            "type": "boolean"
          },
          "storageEnabled": {
            "type": "boolean"
          },
          "tableHandlingEnabled": {
            "type": "boolean"
          },
          "loyaltiesEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Customers.CustomerListEntry": {
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.Address"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Customers.CustomerRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.Address"
          },
          "invoicingDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Customers.InvoicingDetails"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "costCenter": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "discount": {
            "type": "integer",
            "format": "int32"
          },
          "showPriceVatIncluded": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/Open.InternalApi.Customers.Contracts.CustomerType"
          },
          "website": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Customers.InvoicingDetails": {
        "type": "object",
        "properties": {
          "allowInvoicing": {
            "type": "boolean"
          },
          "useCollectiveInvoice": {
            "type": "boolean"
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceAdministrationFee": {
            "type": "string",
            "nullable": true
          },
          "maxInvoicingAmount": {
            "type": "string",
            "nullable": true
          },
          "dueDays": {
            "type": "integer",
            "format": "int32"
          },
          "keyWord": {
            "type": "string",
            "nullable": true
          },
          "requiresReference": {
            "type": "boolean"
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Customers.Reference"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Customers.Reference": {
        "type": "object",
        "properties": {
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.DeviceActivation.AccessToken": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.DeviceActivation.ActivationCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "expiresInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.DeviceActivation.CreateActivationCodeRequest": {
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.Product"
          },
          "deviceType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.DeviceType"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.DeviceActivation.DeviceType": {
        "enum": [
          "Undefined",
          "Tablet",
          "Phone",
          "WestpayTerminal",
          "HipsPaxTerminal",
          "AdyenCastleTerminal",
          "SoftPayTerminal",
          "VerifoneTerminal"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.DeviceActivation.LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.AccessToken"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.DeviceActivation.Product": {
        "enum": [
          "Undefined",
          "OpenTwo",
          "PinPad",
          "StockTakingApp",
          "KitchenDisplay",
          "SelfserviceDisplay"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.DeviceActivation.RefreshTokenRequest": {
        "required": [
          "accessToken",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "minLength": 1,
            "type": "string"
          },
          "accessToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.ExternalOrder.ExternalOrderResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "friendlyOrderId": {
            "type": "string",
            "nullable": true
          },
          "referenceOrderId": {
            "type": "string",
            "nullable": true
          },
          "customerInfo": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.CustomerInfo"
          },
          "totalSum": {
            "type": "string",
            "nullable": true
          },
          "totalDiscount": {
            "type": "string",
            "nullable": true
          },
          "totalVat": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.OrderState"
          },
          "courier": {
            "type": "string",
            "nullable": true
          },
          "createdUtc": {
            "type": "string",
            "format": "date-time"
          },
          "expectedReadyTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Article"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "delivery": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Delivery"
          },
          "payment": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Payment"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.InternalOrder.DirectOrderRequest": {
        "type": "object",
        "properties": {
          "localOrderId": {
            "type": "string",
            "nullable": true
          },
          "isPaid": {
            "type": "boolean"
          },
          "isCustomDiscount": {
            "type": "boolean"
          },
          "isProcessingPaymentRemote": {
            "type": "boolean"
          },
          "totalSum": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderName": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "deleteReason": {
            "type": "string",
            "nullable": true
          },
          "deliveryState": {
            "type": "integer",
            "format": "int32"
          },
          "createdByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "closedByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "closedByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "currencyIsoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "deliveryType": {
            "$ref": "#/components/schemas/Open.InternalApi.InternalOrders.Contracts.DeliveryType"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.Payment"
            },
            "nullable": true
          },
          "cartNumber": {
            "type": "integer",
            "format": "int32"
          },
          "cartDiscountPercentage": {
            "type": "string",
            "nullable": true
          },
          "cartDiscountAmount": {
            "type": "string",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "localOrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "localCreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderState": {
            "$ref": "#/components/schemas/Open.InternalApi.InternalOrders.Contracts.InternalOrderState"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.OrderItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.InternalOrder.DirectOrderResponse": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isPaid": {
            "type": "boolean"
          },
          "isCustomDiscount": {
            "type": "boolean"
          },
          "isProcessingPaymentRemote": {
            "type": "boolean"
          },
          "totalSum": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderName": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "deleteReason": {
            "type": "string",
            "nullable": true
          },
          "deliveryState": {
            "type": "integer",
            "format": "int32"
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "closedByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "closedByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "currencyIsoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "deliveryType": {
            "$ref": "#/components/schemas/Open.InternalApi.InternalOrders.Contracts.DeliveryType"
          },
          "orderState": {
            "$ref": "#/components/schemas/Open.InternalApi.InternalOrders.Contracts.InternalOrderState"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "localOrderId": {
            "type": "string",
            "nullable": true
          },
          "cartNumber": {
            "type": "integer",
            "format": "int32"
          },
          "cartDiscountPercentage": {
            "type": "string",
            "nullable": true
          },
          "cartDiscountAmount": {
            "type": "string",
            "nullable": true
          },
          "localOrderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "localCreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.OrderItem"
            },
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.Payment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Loyalty.CreateLoyaltyAccountRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "socialSecurityNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Loyalty.LoyaltyAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "availablePoints": {
            "type": "integer",
            "format": "int32"
          },
          "membershipLevel": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Loyalty.LoyaltyCustomer"
          },
          "vouchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Loyalty.Voucher"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Loyalty.LoyaltyCustomer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Loyalty.Voucher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Menu.Menu": {
        "type": "object",
        "properties": {
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "menuCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Menu.MenuCategory"
            },
            "nullable": true
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.Article"
            },
            "nullable": true
          },
          "addons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.Article"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Menu.MenuCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "menuCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "foregroundColor": {
            "type": "string",
            "nullable": true
          },
          "articleIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.Authorization": {
        "enum": [
          "Online",
          "Offline",
          "None",
          "Phone",
          "Unknown"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Payments.CardDetails": {
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "terminalNumber": {
            "type": "string",
            "nullable": true
          },
          "terminalType": {
            "type": "string",
            "nullable": true
          },
          "aid": {
            "type": "string",
            "nullable": true
          },
          "cardName": {
            "type": "string",
            "nullable": true
          },
          "cardType": {
            "type": "string",
            "nullable": true
          },
          "cardAcquirerName": {
            "type": "string",
            "nullable": true
          },
          "acquirerReference": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "string",
            "nullable": true
          },
          "cardIdAlias": {
            "type": "string",
            "nullable": true
          },
          "verificationMode": {
            "type": "string",
            "nullable": true
          },
          "cardEntryMethod": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.CardEntryMethod"
          },
          "authorizationType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.Authorization"
          },
          "cardOrderId": {
            "type": "string",
            "nullable": true
          },
          "emvData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.CardEntryMethod": {
        "enum": [
          "Chip",
          "Magnetic",
          "Manual",
          "ContactLess",
          "Unknown"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Payments.CashDetails": {
        "type": "object",
        "properties": {
          "returnAmount": {
            "type": "string",
            "nullable": true
          },
          "receiveAmount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.InitiatePaymentRequest": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "nullable": true
          },
          "targetDeviceId": {
            "type": "string",
            "nullable": true
          },
          "paymentType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.PaymentType"
          },
          "amountMinor": {
            "type": "integer",
            "format": "int32"
          },
          "currencyIsoAlpha": {
            "type": "string",
            "nullable": true
          },
          "tippingType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.TippingType"
          },
          "tippingOptions": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "swishDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.SwishPaymentDetails"
          },
          "vippsDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.VippsPaymentDetails"
          },
          "customData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.InitiateRefundRequest": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "nullable": true
          },
          "targetDeviceId": {
            "type": "string",
            "nullable": true
          },
          "paymentType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.PaymentType"
          },
          "amountMinor": {
            "type": "integer",
            "format": "int32"
          },
          "currencyIsoAlpha": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "swishDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.SwishRefundDetails"
          },
          "vippsDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.VippsRefundDetails"
          },
          "customData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.InvoiceLine": {
        "type": "object",
        "properties": {
          "articleNumber": {
            "type": "string",
            "nullable": true
          },
          "lineDescription": {
            "type": "string",
            "nullable": true
          },
          "productGroupId": {
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "string",
            "nullable": true
          },
          "vatPercentage": {
            "type": "string",
            "nullable": true
          },
          "discountAmount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.InvoicePaymentRequest": {
        "type": "object",
        "properties": {
          "orderReference": {
            "type": "string",
            "nullable": true
          },
          "isCredit": {
            "type": "boolean"
          },
          "customerReferenceId": {
            "type": "string",
            "nullable": true
          },
          "yourReference": {
            "type": "string",
            "nullable": true
          },
          "freeText": {
            "type": "string",
            "nullable": true
          },
          "invoiceLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InvoiceLine"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.InvoicePaymentResponse": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "type": "string",
            "nullable": true
          },
          "invoiceFee": {
            "type": "string",
            "nullable": true
          },
          "invoiceReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.MobilePaymentDetails": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.MobilePaymentType"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.MobilePaymentType": {
        "enum": [
          "SimpleSwish",
          "Swish",
          "Vipps"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Payments.OpenPaymentDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "overpayAmount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.Payment": {
        "type": "object",
        "properties": {
          "originalSalePaymentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "nullable": true
          },
          "currencyIsoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "extra": {
            "type": "string",
            "nullable": true
          },
          "withdrawAmount": {
            "type": "string",
            "nullable": true
          },
          "cardDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.CardDetails"
          },
          "cashDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.CashDetails"
          },
          "openPaymentDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.OpenPaymentDetails"
          },
          "mobilePaymentDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.MobilePaymentDetails"
          },
          "invoicePaymentDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.InvoicePaymentResponse"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.PaymentOperationPatchRequest": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.PaymentRequestStatus"
          },
          "tipAmountMinor": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "responseData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.PaymentOperationResponse": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "nullable": true
          },
          "isRefund": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.PaymentRequestStatus"
          },
          "paymentType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Configuration.PaymentType"
          },
          "amountMinor": {
            "type": "integer",
            "format": "int32"
          },
          "tipAmountMinor": {
            "type": "integer",
            "format": "int32"
          },
          "currencyIsoAlpha": {
            "type": "string",
            "nullable": true
          },
          "requestData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "responseData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "swishDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.SwishPaymentDetails"
          },
          "vippsDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.VippsPaymentDetails"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.PaymentRequestStatus": {
        "enum": [
          "Requested",
          "Initiated",
          "AwaitingInteraction",
          "Processing",
          "Failed",
          "CancellationRequested",
          "Cancelled",
          "Completed",
          "Acknowledged"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Payments.PaymentStatusUpdated": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.PaymentRequestStatus"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.SwishPaymentDetails": {
        "required": [
          "hasBankAgreement",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          },
          "hasBankAgreement": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.SwishRefundDetails": {
        "required": [
          "phoneNumber",
          "referenceId"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          },
          "referenceId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.TippingType": {
        "enum": [
          "None",
          "Percentage",
          "Amount"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Payments.VippsPaymentDetails": {
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Payments.VippsRefundDetails": {
        "required": [
          "description",
          "referenceId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "referenceId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Printers.Alignment": {
        "enum": [
          "Left",
          "Right",
          "Center"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Printers.Column": {
        "type": "object",
        "properties": {
          "left": {
            "type": "string",
            "nullable": true
          },
          "right": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Printers.CommandType": {
        "enum": [
          "Text",
          "Image",
          "EmptyRow",
          "Barcode",
          "QrCode",
          "Column",
          "InvertBackgroundTextRow",
          "DividerRow",
          "Alignment",
          "BoldFont",
          "FontSize",
          "CutPaper",
          "ResetLayout"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Printers.PrintCommand": {
        "type": "object",
        "properties": {
          "commandType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Printers.CommandType"
          },
          "fontSize": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Printers.Size"
          },
          "alignment": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Printers.Alignment"
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "columnData": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Printers.Column"
          },
          "image": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Printers.PrintImage"
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "lineBreak": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Printers.PrintImage": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Printers.PrintImageDataType"
          },
          "width": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Printers.PrintImageDataType": {
        "enum": [
          "Url"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Printers.PrinterState": {
        "enum": [
          "Offline",
          "Online",
          "CoverOpen",
          "OverTemperature",
          "CutterError",
          "MechanicalError",
          "PresenterPaperJam",
          "PaperLow",
          "PaperEmpty",
          "Unknown"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Printers.PrinterStateRequest": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Printers.PrinterState"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Printers.Size": {
        "enum": [
          "Normal",
          "Large",
          "ExtraLarge"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Receipts.DigitalPrintAvailabilityResponse": {
        "type": "object",
        "properties": {
          "canPrintDigitalReceipt": {
            "type": "boolean"
          },
          "maskedEmail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Receipts.Print": {
        "type": "object",
        "properties": {
          "printedAtUtc": {
            "type": "string",
            "format": "date-time"
          },
          "isCopy": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Receipts.PrintType"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Receipts.PrintReceiptCopyRequest": {
        "type": "object",
        "properties": {
          "isAlreadyPrinted": {
            "type": "boolean"
          },
          "printedAtUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "recipientUserId": {
            "type": "string",
            "nullable": true
          },
          "printType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Receipts.ReceiptPrintType"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Receipts.PrintReceiptCopyResponse": {
        "type": "object",
        "properties": {
          "printed": {
            "type": "boolean"
          },
          "printCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Receipts.PrintType": {
        "enum": [
          "Paper",
          "Email",
          "SMS",
          "Discard"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Receipts.ReceiptMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "saleId": {
            "type": "string",
            "nullable": true
          },
          "recipientUserId": {
            "type": "string",
            "nullable": true
          },
          "receiptNumber": {
            "type": "integer",
            "format": "int32"
          },
          "cashRegisterNumber": {
            "type": "integer",
            "format": "int32"
          },
          "saleDate": {
            "type": "string",
            "format": "date-time"
          },
          "localSaleDate": {
            "type": "string",
            "format": "date-time"
          },
          "prints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Receipts.Print"
            },
            "nullable": true
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Receipts.Refund"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Receipts.ReceiptPrintType": {
        "enum": [
          "Paper",
          "Email",
          "SMS",
          "Discard"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Receipts.Refund": {
        "type": "object",
        "properties": {
          "refundedAtLocal": {
            "type": "string",
            "format": "date-time"
          },
          "refundedAtUtc": {
            "type": "string",
            "format": "date-time"
          },
          "amountRefunded": {
            "type": "number",
            "format": "double"
          },
          "refundSaleId": {
            "type": "string",
            "nullable": true
          },
          "itemsRefunded": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Reports.ArticleSummary": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "totalSum": {
            "type": "string",
            "nullable": true
          },
          "totalVat": {
            "type": "string",
            "nullable": true
          },
          "totalNet": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Reports.ArticlesSummaryReport": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "totalSum": {
            "type": "string",
            "nullable": true
          },
          "totalVat": {
            "type": "string",
            "nullable": true
          },
          "totalNet": {
            "type": "string",
            "nullable": true
          },
          "totalDiscount": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.ProductGroupSummary"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Reports.MasterCorrectionDetail": {
        "type": "object",
        "properties": {
          "productGroupId": {
            "type": "string",
            "nullable": true
          },
          "productGroupName": {
            "type": "string",
            "nullable": true
          },
          "vatRate": {
            "type": "string",
            "nullable": true
          },
          "vatAmount": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "string",
            "nullable": true
          },
          "finalSaleAmountExclVat": {
            "type": "string",
            "nullable": true
          },
          "finalSaleAmountInclVat": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Reports.ProductGroupSale": {
        "type": "object",
        "properties": {
          "productGroupId": {
            "type": "string",
            "nullable": true
          },
          "productGroupName": {
            "type": "string",
            "nullable": true
          },
          "vatRate": {
            "type": "string",
            "nullable": true
          },
          "vatAmount": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "string",
            "nullable": true
          },
          "finalSaleAmountExclVat": {
            "type": "string",
            "nullable": true
          },
          "finalSaleAmountInclVat": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Reports.ProductGroupSummary": {
        "type": "object",
        "properties": {
          "productGroupName": {
            "type": "string",
            "nullable": true
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.ArticleSummary"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "totalSum": {
            "type": "string",
            "nullable": true
          },
          "totalVat": {
            "type": "string",
            "nullable": true
          },
          "totalNet": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Reports.XReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cashRegisterNumber": {
            "type": "integer",
            "format": "int32"
          },
          "cashRegisterName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstSale": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastSale": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalSalesInclVat": {
            "type": "string",
            "nullable": true
          },
          "totalSalesExclVat": {
            "type": "string",
            "nullable": true
          },
          "totalSalesVat": {
            "type": "string",
            "nullable": true
          },
          "totalReturnsInclVat": {
            "type": "string",
            "nullable": true
          },
          "totalReturnsExclVat": {
            "type": "string",
            "nullable": true
          },
          "totalReturnsVat": {
            "type": "string",
            "nullable": true
          },
          "totalVatAmount": {
            "type": "string",
            "nullable": true
          },
          "totalChangeInRegisterAmount": {
            "type": "string",
            "nullable": true
          },
          "withdrawAmount": {
            "type": "string",
            "nullable": true
          },
          "extraAmount": {
            "type": "string",
            "nullable": true
          },
          "discountAmount": {
            "type": "string",
            "nullable": true
          },
          "receiptCopyAmount": {
            "type": "string",
            "nullable": true
          },
          "correctionAmount": {
            "type": "string",
            "nullable": true
          },
          "withdrawCount": {
            "type": "integer",
            "format": "int32"
          },
          "extraCount": {
            "type": "integer",
            "format": "int32"
          },
          "discountCount": {
            "type": "integer",
            "format": "int32"
          },
          "receiptCopyCount": {
            "type": "integer",
            "format": "int32"
          },
          "correctionCount": {
            "type": "integer",
            "format": "int32"
          },
          "receiptCount": {
            "type": "integer",
            "format": "int32"
          },
          "tillOpeningCount": {
            "type": "integer",
            "format": "int32"
          },
          "articlesSoldCount": {
            "type": "integer",
            "format": "int32"
          },
          "servicesSoldCount": {
            "type": "integer",
            "format": "int32"
          },
          "salesCount": {
            "type": "integer",
            "format": "int32"
          },
          "returnCount": {
            "type": "integer",
            "format": "int32"
          },
          "masterCorrectionCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalMasterCorrectedAmountInclVat": {
            "type": "string",
            "nullable": true
          },
          "totalMasterCorrectedAmountExclVat": {
            "type": "string",
            "nullable": true
          },
          "totalMasterCorrectedVat": {
            "type": "string",
            "nullable": true
          },
          "grandTotalSales": {
            "type": "string",
            "nullable": true
          },
          "grandTotalReturns": {
            "type": "string",
            "nullable": true
          },
          "grandNetTotal": {
            "type": "string",
            "nullable": true
          },
          "productGroupSales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.ProductGroupSale"
            },
            "nullable": true
          },
          "reportPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.ZReportPayment"
            },
            "nullable": true
          },
          "masterCorrectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.MasterCorrectionDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Reports.ZReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cashRegisterNumber": {
            "type": "integer",
            "format": "int32"
          },
          "cashRegisterName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstSale": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastSale": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalSalesInclVat": {
            "type": "string",
            "nullable": true
          },
          "totalSalesExclVat": {
            "type": "string",
            "nullable": true
          },
          "totalSalesVat": {
            "type": "string",
            "nullable": true
          },
          "totalReturnsInclVat": {
            "type": "string",
            "nullable": true
          },
          "totalReturnsExclVat": {
            "type": "string",
            "nullable": true
          },
          "totalReturnsVat": {
            "type": "string",
            "nullable": true
          },
          "totalVatAmount": {
            "type": "string",
            "nullable": true
          },
          "totalChangeInRegisterAmount": {
            "type": "string",
            "nullable": true
          },
          "withdrawAmount": {
            "type": "string",
            "nullable": true
          },
          "extraAmount": {
            "type": "string",
            "nullable": true
          },
          "discountAmount": {
            "type": "string",
            "nullable": true
          },
          "receiptCopyAmount": {
            "type": "string",
            "nullable": true
          },
          "correctionAmount": {
            "type": "string",
            "nullable": true
          },
          "withdrawCount": {
            "type": "integer",
            "format": "int32"
          },
          "extraCount": {
            "type": "integer",
            "format": "int32"
          },
          "discountCount": {
            "type": "integer",
            "format": "int32"
          },
          "receiptCopyCount": {
            "type": "integer",
            "format": "int32"
          },
          "correctionCount": {
            "type": "integer",
            "format": "int32"
          },
          "receiptCount": {
            "type": "integer",
            "format": "int32"
          },
          "tillOpeningCount": {
            "type": "integer",
            "format": "int32"
          },
          "articlesSoldCount": {
            "type": "integer",
            "format": "int32"
          },
          "servicesSoldCount": {
            "type": "integer",
            "format": "int32"
          },
          "salesCount": {
            "type": "integer",
            "format": "int32"
          },
          "returnCount": {
            "type": "integer",
            "format": "int32"
          },
          "masterCorrectionCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalMasterCorrectedAmountInclVat": {
            "type": "string",
            "nullable": true
          },
          "totalMasterCorrectedAmountExclVat": {
            "type": "string",
            "nullable": true
          },
          "totalMasterCorrectedVat": {
            "type": "string",
            "nullable": true
          },
          "grandTotalSales": {
            "type": "string",
            "nullable": true
          },
          "grandTotalReturns": {
            "type": "string",
            "nullable": true
          },
          "grandNetTotal": {
            "type": "string",
            "nullable": true
          },
          "productGroupSales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.ProductGroupSale"
            },
            "nullable": true
          },
          "reportPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.ZReportPayment"
            },
            "nullable": true
          },
          "masterCorrectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Reports.MasterCorrectionDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Reports.ZReportPayment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "paymentType": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Sales.AddSaleRequest": {
        "type": "object",
        "properties": {
          "sale": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.Sale"
          },
          "receiptPrintAction": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.ReceiptPrintAction"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Sales.ArticleType": {
        "enum": [
          "Salable",
          "NonSalable",
          "Service"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Sales.ContactInformation": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Sales.DiscountType": {
        "enum": [
          "Manual",
          "Coupon",
          "Stampcard",
          "Campaign",
          "MixAndMatch"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Sales.Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Sales.Position": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Sales.ReceiptPrintAction": {
        "type": "object",
        "properties": {
          "isAlreadyPrinted": {
            "type": "boolean"
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "recipientUserId": {
            "type": "string",
            "nullable": true
          },
          "printType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Receipts.ReceiptPrintType"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Sales.Refunds.PaymentProvider": {
        "enum": [
          "Fake",
          "Hips",
          "Verifone",
          "Elavon",
          "Nets",
          "Bambora"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Sales.Refunds.RefundArticle": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          },
          "quantity": {
            "type": "string",
            "nullable": true
          },
          "vatAmount": {
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Sales.Refunds.RefundRequest": {
        "required": [
          "paymentId"
        ],
        "type": "object",
        "properties": {
          "paymentId": {
            "minLength": 5,
            "type": "string"
          },
          "paymentProvider": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.Refunds.PaymentProvider"
          },
          "amount": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.Refunds.RefundArticle"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Sales.Refunds.RefundResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "nullable": true
          },
          "cardNumberMasked": {
            "type": "string",
            "nullable": true
          },
          "bank": {
            "type": "string",
            "nullable": true
          },
          "declineReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Sales.Sale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "localOrderId": {
            "type": "string",
            "nullable": true
          },
          "originalSaleId": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "saleDate": {
            "type": "string",
            "format": "date-time"
          },
          "localSaleDate": {
            "type": "string",
            "format": "date-time"
          },
          "saleNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "receiptNumber": {
            "type": "integer",
            "format": "int32"
          },
          "employeeId": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "employeeName": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "employee": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.Employee"
          },
          "loyaltyReferenceId": {
            "type": "string",
            "nullable": true
          },
          "currencyIsoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "cashRoundingDelta": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "subTotal": {
            "type": "string",
            "nullable": true
          },
          "totalSum": {
            "type": "string",
            "nullable": true
          },
          "totalNet": {
            "type": "string",
            "nullable": true
          },
          "totalVat": {
            "type": "string",
            "nullable": true
          },
          "totalDiscount": {
            "type": "string",
            "nullable": true
          },
          "totalExtra": {
            "type": "string",
            "nullable": true
          },
          "totalPaidIncludingExtra": {
            "type": "string",
            "nullable": true
          },
          "saleType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.SaleType"
          },
          "controlUnit": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "refundReason": {
            "type": "string",
            "nullable": true
          },
          "contactInformation": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.ContactInformation"
          },
          "vatDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.VatDetail"
            },
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.SaleItem"
            },
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Payments.Payment"
            },
            "nullable": true
          },
          "position": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.Position"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Sales.SaleItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "articleId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "articleName": {
            "type": "string",
            "nullable": true
          },
          "articleNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "string",
            "nullable": true
          },
          "sellFactor": {
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "type": "string",
            "nullable": true
          },
          "discountExtra": {
            "type": "string",
            "nullable": true
          },
          "isDiscountable": {
            "type": "boolean"
          },
          "isTakeAway": {
            "type": "boolean"
          },
          "hasOpenPrice": {
            "type": "boolean"
          },
          "vatRate": {
            "type": "string",
            "nullable": true
          },
          "salesUnitName": {
            "type": "string",
            "nullable": true
          },
          "salesUnitAbbreviation": {
            "type": "string",
            "nullable": true
          },
          "servingPriority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productGroupId": {
            "type": "string",
            "nullable": true
          },
          "productGroupName": {
            "type": "string",
            "nullable": true
          },
          "articleQuantity": {
            "type": "string",
            "nullable": true
          },
          "sum": {
            "type": "string",
            "nullable": true
          },
          "net": {
            "type": "string",
            "nullable": true
          },
          "vat": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.DiscountType"
          },
          "vatDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.VatDetail"
            },
            "nullable": true
          },
          "articleType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.ArticleType"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.ItemVariant"
            },
            "nullable": true
          },
          "addOns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Sales.SaleItem"
            },
            "nullable": true
          },
          "barcode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Sales.SaleType": {
        "enum": [
          "SaleOrder",
          "CreditOrder",
          "NegativeOrder",
          "RebookPaymentMethodOrder",
          "Exchange",
          "Withdraw",
          "Expense"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Sales.VatDetail": {
        "type": "object",
        "properties": {
          "vatRate": {
            "type": "string",
            "nullable": true
          },
          "vatAmount": {
            "type": "string",
            "nullable": true
          },
          "netAmount": {
            "type": "string",
            "nullable": true
          },
          "sumAmount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Shared.Address": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Shared.Article": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "articleNumber": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isAddOn": {
            "type": "boolean"
          },
          "isDiscountable": {
            "type": "boolean"
          },
          "isSeparateTicket": {
            "type": "boolean"
          },
          "servingPriority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "foregroundColor": {
            "type": "string",
            "nullable": true
          },
          "hasOpenPrice": {
            "type": "boolean"
          },
          "price": {
            "type": "string",
            "nullable": true
          },
          "takeawayPrice": {
            "type": "string",
            "nullable": true
          },
          "takeawayAllowed": {
            "type": "boolean"
          },
          "vatRate": {
            "type": "string",
            "nullable": true
          },
          "takeawayVatRate": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "string",
            "nullable": true
          },
          "salesUnitName": {
            "type": "string",
            "nullable": true
          },
          "salesUnitAbbreviation": {
            "type": "string",
            "nullable": true
          },
          "productGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "productGroupName": {
            "type": "string",
            "nullable": true
          },
          "addOns": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.VariantArticle"
            },
            "nullable": true
          },
          "articleType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.ArticleType"
          },
          "barcodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Shared.ArticleType": {
        "enum": [
          "Salable",
          "NonSalable",
          "Service"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Shared.ItemVariant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.ItemVariantOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Shared.ItemVariantOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Shared.OrderArticle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "articleNumber": {
            "type": "string",
            "nullable": true
          },
          "isAddOn": {
            "type": "boolean"
          },
          "isDiscountable": {
            "type": "boolean"
          },
          "isSeparateTicket": {
            "type": "boolean"
          },
          "servingPriority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasOpenPrice": {
            "type": "boolean"
          },
          "price": {
            "type": "string",
            "nullable": true
          },
          "takeawayPrice": {
            "type": "string",
            "nullable": true
          },
          "takeawayAllowed": {
            "type": "boolean"
          },
          "vatRate": {
            "type": "string",
            "nullable": true
          },
          "takeawayVatRate": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "string",
            "nullable": true
          },
          "salesUnitName": {
            "type": "string",
            "nullable": true
          },
          "salesUnitAbbreviation": {
            "type": "string",
            "nullable": true
          },
          "productGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "productGroupName": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "addOns": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.VariantArticle"
            },
            "nullable": true
          },
          "articleType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.ArticleType"
          },
          "barcodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Shared.OrderCreated": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Shared.OrderItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "article": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.OrderArticle"
          },
          "quantity": {
            "type": "string",
            "nullable": true
          },
          "paidQuantity": {
            "type": "string",
            "nullable": true
          },
          "discountPercentage": {
            "type": "string",
            "nullable": true
          },
          "discountAmount": {
            "type": "string",
            "nullable": true
          },
          "isTakeAway": {
            "type": "boolean"
          },
          "isOrderItemDiscount": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "selectedVariants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.ItemVariant"
            },
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Shared.VariantArticle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "noOfSelectableOptions": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "minNoOfSelectableOptions": {
            "type": "integer",
            "format": "int32"
          },
          "maxNoOfSelectableOptions": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "variantOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.VariantOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Shared.VariantOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.AddSaleReferenceRequest": {
        "type": "object",
        "properties": {
          "sale": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.SaleReference"
          },
          "itemsPaid": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.OrderItemsPaid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.CreateServingRequest": {
        "required": [
          "displayName"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.CreateTableOrderItemRequest": {
        "type": "object",
        "properties": {
          "article": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.OrderArticle"
          },
          "quantity": {
            "type": "string",
            "nullable": true
          },
          "discountPercentage": {
            "type": "string",
            "nullable": true
          },
          "discountAmount": {
            "type": "string",
            "nullable": true
          },
          "isTakeAway": {
            "type": "boolean"
          },
          "isOrderItemDiscount": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "selectedVariants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.ItemVariant"
            },
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.CreateTableOrderRequest": {
        "type": "object",
        "properties": {
          "numberOfGuests": {
            "type": "integer",
            "format": "int32"
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "currencyIsoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "servingName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.OrderItemsPaid": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "paidQuantity": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.PatchServingRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "firedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.PatchTableOrderItemRequest": {
        "type": "object",
        "properties": {
          "quantityDelta": {
            "type": "string",
            "nullable": true
          },
          "discountPercentage": {
            "type": "string",
            "nullable": true
          },
          "discountAmount": {
            "type": "string",
            "nullable": true
          },
          "isTakeAway": {
            "type": "boolean",
            "nullable": true
          },
          "isOrderItemDiscount": {
            "type": "boolean",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "selectedVariants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.ItemVariant"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.PatchTableOrderRequest": {
        "type": "object",
        "properties": {
          "orderName": {
            "type": "string",
            "nullable": true
          },
          "numberOfGuests": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "isCustomDiscount": {
            "type": "boolean",
            "nullable": true
          },
          "isProcessingPaymentRemote": {
            "type": "boolean",
            "nullable": true
          },
          "cartDiscountPercentage": {
            "type": "string",
            "nullable": true
          },
          "cartDiscountAmount": {
            "type": "string",
            "nullable": true
          },
          "servingIdsDisplayOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.SaleReference": {
        "type": "object",
        "properties": {
          "saleId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "nullable": true
          },
          "tipAmount": {
            "type": "string",
            "nullable": true
          },
          "discountAmount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.Serving": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "firedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.Shared.OrderItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderApiError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "innerException": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TableOrder.TableOrderResponse": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isPaid": {
            "type": "boolean"
          },
          "isCustomDiscount": {
            "type": "boolean"
          },
          "isProcessingPaymentRemote": {
            "type": "boolean"
          },
          "totalSum": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderName": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "deleteReason": {
            "type": "string",
            "nullable": true
          },
          "deliveryState": {
            "type": "integer",
            "format": "int32"
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "closedByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "closedByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "currencyIsoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "deliveryType": {
            "$ref": "#/components/schemas/Open.InternalApi.InternalOrders.Contracts.DeliveryType"
          },
          "orderState": {
            "$ref": "#/components/schemas/Open.InternalApi.InternalOrders.Contracts.InternalOrderState"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tableId": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "createdByCashRegisterId": {
            "type": "string",
            "nullable": true
          },
          "closedByCashRegisterId": {
            "type": "string",
            "nullable": true
          },
          "tableAreaNumber": {
            "type": "integer",
            "format": "int32"
          },
          "tableAreaName": {
            "type": "string",
            "nullable": true
          },
          "cartDiscountPercentage": {
            "type": "string",
            "nullable": true
          },
          "cartDiscountAmount": {
            "type": "string",
            "nullable": true
          },
          "numberOfGuests": {
            "type": "integer",
            "format": "int32"
          },
          "servings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.Serving"
            },
            "nullable": true
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TableOrder.SaleReference"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TaxJournal.GetTaxJournalRequest": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "receivingEmail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TaxJournal.TaxJournalEntry": {
        "required": [
          "loggedAt",
          "type"
        ],
        "type": "object",
        "properties": {
          "loggedAt": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.TaxJournal.TaxJournalEntryType"
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.TaxJournal.TaxJournalEntryType": {
        "enum": [
          "CashFloatRegistered",
          "DayReportCreated",
          "EmployeeLogIn",
          "EmployeeLogOut",
          "GuestBillPrinted",
          "OrderAddLine",
          "OrderChangeLine",
          "OrderClose",
          "OrderMoveLines",
          "OrderOpen",
          "OrderPartCredit",
          "OrderPayment",
          "OrderReceiptCopied",
          "OrderRemoveLine",
          "OrderResumed",
          "OrderSuspended",
          "PosApplicationStart",
          "PosApplicationStop",
          "PosApplicationUpdate",
          "TableOpen",
          "TableClose",
          "TaxJournalExported",
          "TillOpen",
          "TillClose",
          "PaymentTimeout",
          "RefundTimeout"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Devices.Contracts.Users.LoginRequest": {
        "required": [
          "applicationVersionNumber",
          "pinCode"
        ],
        "type": "object",
        "properties": {
          "pinCode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "applicationVersionNumber": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Devices.Contracts.Users.LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "$ref": "#/components/schemas/Open.PointOfSales.Devices.Contracts.DeviceActivation.AccessToken"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter JWT Bearer token **_only_**",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
