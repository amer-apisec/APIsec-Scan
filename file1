{
  "openapi": "3.0.1",
  "info": {
    "title": "BackOffice API",
    "description": "Orchestrating POS per site",
    "version": "v1"
  },
  "paths": {
    "/api/v1/AccountingConfiguration": {
      "get": {
        "tags": [
          "AccountingConfiguration"
        ],
        "operationId": "GetAccountingConfiguration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.AccountConfiguration"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountingConfiguration"
        ],
        "operationId": "UpdateAccountingConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.AccountConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AccountingConfiguration/account": {
      "put": {
        "tags": [
          "AccountingConfiguration"
        ],
        "operationId": "Update Account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AccountingConfiguration/costcentercode": {
      "put": {
        "tags": [
          "AccountingConfiguration"
        ],
        "operationId": "Update cost center code",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.CostCenterCodeMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AccountingConfiguration/vatCode": {
      "put": {
        "tags": [
          "AccountingConfiguration"
        ],
        "operationId": "Update vat code",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.VatCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AccountingExport/verifications": {
      "get": {
        "tags": [
          "AccountingExport"
        ],
        "operationId": "GetVerifications",
        "parameters": [
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "OnlyNonExported",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "SeparateOnVat",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeInvoice",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.VerificationExportResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AccountingExport/send": {
      "post": {
        "tags": [
          "AccountingExport"
        ],
        "operationId": "SendVerifications",
        "parameters": [
          {
            "name": "series",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Accounting.VerificationExportConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "operationId": "GetAllArticles",
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Articles"
        ],
        "operationId": "InsertArticle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Articles"
        ],
        "operationId": "UpdateArticle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Articles"
        ],
        "operationId": "DeleteArticle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Articles/{id}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "operationId": "GetArticleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Articles/addons": {
      "get": {
        "tags": [
          "Articles"
        ],
        "operationId": "GetAllAddOns",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Articles/categories": {
      "get": {
        "tags": [
          "Articles"
        ],
        "operationId": "GetAllCategories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Articles/barcodes": {
      "get": {
        "tags": [
          "Articles"
        ],
        "operationId": "GetBarcodes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleBarcode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/BrowserLogs": {
      "post": {
        "tags": [
          "BrowserLogs"
        ],
        "operationId": "InsertError",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/CashRegisters": {
      "get": {
        "tags": [
          "CashRegisters"
        ],
        "operationId": "GetAllCashRegisters",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.CashRegister"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CashRegisters/{id}": {
      "patch": {
        "tags": [
          "CashRegisters"
        ],
        "operationId": "PatchCashRegister",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.CashRegisterPatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.CashRegister"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "operationId": "GetCompany",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.Company"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "operationId": "UpdateCompany",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.Company"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Companies/{companyId}/verify": {
      "post": {
        "tags": [
          "Companies"
        ],
        "operationId": "VerifyCompanyInformation",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Configurations": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "operationId": "GetConfiguration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Configuration.UiConfiguration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Configuration.UiConfiguration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Configuration.UiConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CostCenters": {
      "get": {
        "tags": [
          "CostCenters"
        ],
        "operationId": "GetAllCostCenters",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.CostCenterResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CostCenters"
        ],
        "operationId": "CreateCostCenter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.CostCenterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.CostCenterRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CostCenters/{id}": {
      "get": {
        "tags": [
          "CostCenters"
        ],
        "operationId": "GetCostCenterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.CostCenterResponse"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CostCenters"
        ],
        "operationId": "UpdateCostCenter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.CostCenterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/DailySales/current": {
      "get": {
        "tags": [
          "DailySales"
        ],
        "operationId": "GetCurrent",
        "parameters": [
          {
            "name": "costCenterName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Statistics.DailySale"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DailySales/date": {
      "get": {
        "tags": [
          "DailySales"
        ],
        "operationId": "GetByDate",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "costCenterName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Statistics.DailySale"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DailySales/dates": {
      "get": {
        "tags": [
          "DailySales"
        ],
        "operationId": "GetBetweenDates",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "costCenterName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Statistics.DailySale"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DailySales/lastdays": {
      "get": {
        "tags": [
          "DailySales"
        ],
        "operationId": "GetLatestDays",
        "parameters": [
          {
            "name": "numberOfDays",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeCurrent",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "costCenterName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Statistics.DailySale"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DeviceActivation/{activationCode}": {
      "get": {
        "tags": [
          "DeviceActivation"
        ],
        "parameters": [
          {
            "name": "activationCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Responses.DeviceActivationDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DeviceActivation"
        ],
        "parameters": [
          {
            "name": "activationCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.DeviceActivation.DeviceActivation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "GetAllDevices",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Devices.Device"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmployeeIntegrations/personalkollen": {
      "get": {
        "tags": [
          "EmployeeIntegrations"
        ],
        "operationId": "Get Personalkollen settings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Integrations.Personalkollen.Contracts.Configuration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Integrations.Personalkollen.Contracts.Configuration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Integrations.Personalkollen.Contracts.Configuration"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeIntegrations"
        ],
        "operationId": "Set Personalkollen settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.Integrations.Personalkollen.Contracts.ChangeAccessTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.Integrations.Personalkollen.Contracts.ChangeAccessTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.Integrations.Personalkollen.Contracts.ChangeAccessTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Integrations.Personalkollen.Contracts.Configuration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Integrations.Personalkollen.Contracts.Configuration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.Integrations.Personalkollen.Contracts.Configuration"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeIntegrations"
        ],
        "operationId": "Delete Personalkollen settings",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Employees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "operationId": "GetAllEmployees",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Employees.EmployeeResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "operationId": "InsertEmployee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Employees.EmployeeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Employees/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "operationId": "GetEmployeeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Employees.EmployeeResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "operationId": "UpdateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Employees.EmployeeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Employees"
        ],
        "operationId": "DeleteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Employees/{id}/pin": {
      "put": {
        "tags": [
          "Employees"
        ],
        "operationId": "UpdateEmployeePin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Employees.Contracts.EmployeePin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Employees/{id}/resendinvite": {
      "post": {
        "tags": [
          "Employees"
        ],
        "operationId": "ResendEmployeeInvite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Employees.EmployeeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ExternalOrderSettings": {
      "post": {
        "tags": [
          "ExternalOrderSettings"
        ],
        "operationId": "Set settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Settings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Settings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Settings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Settings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Settings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Settings"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ExternalOrderSettings"
        ],
        "operationId": "Get settings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Settings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Settings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.Settings"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ExternalOrderSettings/{salesChannel}": {
      "get": {
        "tags": [
          "ExternalOrderSettings"
        ],
        "operationId": "Get SalesChannel status",
        "parameters": [
          {
            "name": "salesChannel",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.SalesChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.IntegrationChannelStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.IntegrationChannelStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.IntegrationChannelStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ExternalOrderSettings/{salesChannel}/Activate": {
      "post": {
        "tags": [
          "ExternalOrderSettings"
        ],
        "operationId": "Request SalesChannel Activation",
        "parameters": [
          {
            "name": "salesChannel",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.SalesChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.IntegrationChannelStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.IntegrationChannelStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.IntegrationChannelStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ExternalOrderSettings/{salesChannel}/Deactivate": {
      "post": {
        "tags": [
          "ExternalOrderSettings"
        ],
        "operationId": "Request SalesChannel Dectivation",
        "parameters": [
          {
            "name": "salesChannel",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.SalesChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.IntegrationChannelStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.IntegrationChannelStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.IntegrationChannelStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Fiken/accounts": {
      "get": {
        "tags": [
          "Fiken"
        ],
        "operationId": "GetAllFikenAccounts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Fiken.Contracts.FikenAccount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Fiken/config": {
      "get": {
        "tags": [
          "Fiken"
        ],
        "operationId": "GetFikenConfig",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Fiken.Contracts.UserConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Fiken/companies": {
      "get": {
        "tags": [
          "Fiken"
        ],
        "operationId": "GetFikenCompanies",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Fiken.Contracts.FikenCompany"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Fiken/config/finalize": {
      "put": {
        "tags": [
          "Fiken"
        ],
        "operationId": "FinalizeFikenConfig",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Fiken/config/companySlug": {
      "put": {
        "tags": [
          "Fiken"
        ],
        "operationId": "SetFikenCompanySlug",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Fiken/config/startDate": {
      "put": {
        "tags": [
          "Fiken"
        ],
        "operationId": "SetFikenAccountingStartDate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Fiken/auth/revoke": {
      "delete": {
        "tags": [
          "Fiken"
        ],
        "operationId": "RevokeFikenAndDeactivate",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Fiken/auth/{encodedRedirectUrl}": {
      "get": {
        "tags": [
          "Fiken"
        ],
        "operationId": "GetFikenOAuthLink",
        "parameters": [
          {
            "name": "encodedRedirectUrl",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Fiken/auth": {
      "post": {
        "tags": [
          "Fiken"
        ],
        "operationId": "SetFikenOAuth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Fiken.Contracts.AuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Fiken/sync": {
      "post": {
        "tags": [
          "Fiken"
        ],
        "operationId": "SyncFikenJournals",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Fortnox/accounts": {
      "get": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "GetAllFortnoxAccounts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Fortnox.Contracts.FortnoxAccount"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "AddFortnoxAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Fortnox.CreateFortnoxAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Fortnox/config": {
      "get": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "GetFortnoxConfig",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Fortnox.Contracts.Configuration"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Fortnox/config/finalize": {
      "post": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "FinalizeFortnoxConfig",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Fortnox/config/export": {
      "put": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "UpdateFortnoxExportConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Fortnox.Contracts.ExportConfigurationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Fortnox.Contracts.Configuration"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Fortnox/config/auth/{encodedRedirectUrl}": {
      "get": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "GetFortnoxAuthUrl",
        "parameters": [
          {
            "name": "encodedRedirectUrl",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "invoiceScope",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Fortnox/config/auth": {
      "post": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "AuthorizeFortnox",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Fortnox.Contracts.AuthCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "AuthorizeUpdateToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Fortnox.Contracts.AuthCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Fortnox/config/auth/revoke": {
      "delete": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "RevokeFortnoxAccess",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Fortnox/voucher/series": {
      "get": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "GetFortnoxVoucherSeries",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Fortnox.Contracts.VoucherSeriesItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "SetFortnoxVoucherSeries",
        "parameters": [
          {
            "name": "voucherCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Fortnox/voucher/sync": {
      "post": {
        "tags": [
          "Fortnox"
        ],
        "operationId": "SyncFortnoxVouchers",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/GTIN": {
      "post": {
        "tags": [
          "GTIN"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          }
        }
      }
    },
    "/api/v1/GTIN/{id}": {
      "get": {
        "tags": [
          "GTIN"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          }
        }
      }
    },
    "/api/v1/GTIN/asset/{id}": {
      "get": {
        "tags": [
          "GTIN"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/LoyaltyPrograms": {
      "get": {
        "tags": [
          "LoyaltyPrograms"
        ],
        "operationId": "Get Loyalty settings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Loyalties.LoyaltiesConfiguration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Loyalties.LoyaltiesConfiguration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Loyalties.LoyaltiesConfiguration"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LoyaltyPrograms"
        ],
        "operationId": "Set Loyalty settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Loyalties.LoyaltiesConfiguration"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Loyalties.LoyaltiesConfiguration"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Loyalties.LoyaltiesConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Loyalties.LoyaltiesConfiguration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Loyalties.LoyaltiesConfiguration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Loyalties.LoyaltiesConfiguration"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LoyaltyPrograms"
        ],
        "operationId": "Delete Loyalty settings",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Menu": {
      "get": {
        "tags": [
          "Menu"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.Menu"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.Menu"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.Menu"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Menu"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.Menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.Menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.Menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Menu"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.Menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.Menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.Menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Menu"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Menu/publish": {
      "get": {
        "tags": [
          "Menu"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Menu/publish/status/{costCenterId}": {
      "get": {
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "name": "costCenterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Integrations.DeliveryHero.Contracts.DeliveryHero.DeliveryHeroCatalogImportStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Integrations.DeliveryHero.Contracts.DeliveryHero.DeliveryHeroCatalogImportStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Integrations.DeliveryHero.Contracts.DeliveryHero.DeliveryHeroCatalogImportStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/MenuCategories": {
      "get": {
        "tags": [
          "MenuCategories"
        ],
        "operationId": "GetAllMenuCategories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MenuCategories"
        ],
        "operationId": "InsertMenuCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MenuCategories"
        ],
        "operationId": "UpdateMenuCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "MenuCategories"
        ],
        "operationId": "DeleteMenuCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/MenuCategories/filtered": {
      "get": {
        "tags": [
          "MenuCategories"
        ],
        "operationId": "GetMenuCategoriesForCostCenter",
        "parameters": [
          {
            "name": "costCenterId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/MenuCategories/{id}": {
      "get": {
        "tags": [
          "MenuCategories"
        ],
        "operationId": "GetMenuCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Notifications/read": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "operationId": "MarkNotificationsAsRead",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Notifications.Contracts.MarkMultipleAsReadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetAllNotifications",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "costCenterId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Notifications.Contracts.NotificationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PaymentMethods": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "GetAllPaymentMethods",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Payments.PaymentMethod"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "CreatePaymentMethod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Payments.PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PaymentMethods/available": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "GetAvailablePaymentMethods",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Payments.PaymentMethod"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PaymentMethods/{Id}": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "GetPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Payments.PaymentMethod"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PaymentMethods/{id}": {
      "put": {
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "UpdatePaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Payments.PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/PaymentMethods/validate/swish/{number}": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "Validate swish status",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Payments.PaymentConfigurationValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PaymentMethods/validate/vipps/{number}": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "Validate vipps status",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Payments.PaymentConfigurationValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Planday/departments": {
      "get": {
        "tags": [
          "Planday"
        ],
        "operationId": "GetPlandayDepartments",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Planday.Contracts.PlandayDepartment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Planday/config": {
      "get": {
        "tags": [
          "Planday"
        ],
        "operationId": "GetPlandayConfig",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Planday.Contracts.PlandayUserConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Planday/config/activate": {
      "put": {
        "tags": [
          "Planday"
        ],
        "operationId": "ActivatePlanday",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Planday.Contracts.PlandayUserConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Planday/config/departmentId": {
      "put": {
        "tags": [
          "Planday"
        ],
        "operationId": "SetPlandayDepartment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Planday.Contracts.PlandayUserConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Planday/config/includeVatTurnover": {
      "put": {
        "tags": [
          "Planday"
        ],
        "operationId": "SetPlandayIncludeVatForTurnOver",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Planday.Contracts.PlandayUserConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Planday/syncSales/{fromDate}/{toDate}": {
      "post": {
        "tags": [
          "Planday"
        ],
        "operationId": "SyncPlandaySales",
        "parameters": [
          {
            "name": "fromDate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Planday.Contracts.PlandayUserConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Planday/auth/revoke": {
      "delete": {
        "tags": [
          "Planday"
        ],
        "operationId": "RevokePlandayAndDeactivate",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Planday/auth/{encodedRedirectUrl}": {
      "get": {
        "tags": [
          "Planday"
        ],
        "operationId": "GetPlandayOAuthLink",
        "parameters": [
          {
            "name": "encodedRedirectUrl",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Planday/auth": {
      "post": {
        "tags": [
          "Planday"
        ],
        "operationId": "SetPlandayOAuth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Planday.Contracts.AuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Printers": {
      "get": {
        "tags": [
          "Printers"
        ],
        "operationId": "GetAllPrinters",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Printers.Printer"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Printers"
        ],
        "operationId": "InsertPrinter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Printers.Printer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Printers"
        ],
        "operationId": "UpdatePrinter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Printers.Printer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Printers/{mac}": {
      "get": {
        "tags": [
          "Printers"
        ],
        "operationId": "GetPrinterByMac",
        "parameters": [
          {
            "name": "mac",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Printers.Printer"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Printers"
        ],
        "operationId": "DeletePrinter",
        "parameters": [
          {
            "name": "mac",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/ProductGroups": {
      "get": {
        "tags": [
          "ProductGroups"
        ],
        "operationId": "GetAllProductGroups",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ProductGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductGroups"
        ],
        "operationId": "InsertProductGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ProductGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductGroups"
        ],
        "operationId": "UpdateProductGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ProductGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/ProductGroups/{id}": {
      "get": {
        "tags": [
          "ProductGroups"
        ],
        "operationId": "GetProductGroupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ProductGroup"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductGroups"
        ],
        "operationId": "DeleteProductGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/ProductGroups/industrytemplates": {
      "get": {
        "tags": [
          "ProductGroups"
        ],
        "operationId": "GetProductGroupTemplates",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.IndustryTemplate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PublicResources/{resourceType}/{resourceCategory}/{id}": {
      "get": {
        "tags": [
          "PublicResources"
        ],
        "operationId": "GetPublicResource",
        "parameters": [
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ResourceType"
            }
          },
          {
            "name": "resourceCategory",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ResourceCategory"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.DocumentResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PublicResources"
        ],
        "operationId": "DeletePublicResource",
        "parameters": [
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ResourceType"
            }
          },
          {
            "name": "resourceCategory",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ResourceCategory"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/PublicResources": {
      "post": {
        "tags": [
          "PublicResources"
        ],
        "operationId": "AddPublicResource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.DocumentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.DocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Reports/ZReports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "GetAllZReports",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.ZReport"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Reports/ZReports/{Id}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "GetZReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "monthDateTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.ZReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Reports/GrandTotalReport": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "GetGrandTotalReport",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "To",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.GrandTotalReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Reports/ArticlesReport": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "GetArticlesReport",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "To",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.ArticlesSummaryReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Reports/EmployeesReport": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "GetEmployeesReport",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "To",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.EmployeesSummaryReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Reports/SaftReport": {
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "CreateSaftReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.CreateSaftReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Sales": {
      "get": {
        "tags": [
          "Sales"
        ],
        "operationId": "GetSalesByDate",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.Sale"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Sales/paged": {
      "get": {
        "tags": [
          "Sales"
        ],
        "operationId": "GetPagedSalesByDate",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 200
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.Sale"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Sales/{saleId}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.Sale"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Sales/refunds/{saleId}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.Sale"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SalesUnits": {
      "get": {
        "tags": [
          "SalesUnits"
        ],
        "operationId": "GetAllSalesUnits",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.SalesUnit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SalesUnits/{id}": {
      "get": {
        "tags": [
          "SalesUnits"
        ],
        "operationId": "GetSalesUnitById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.SalesUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Storage/configs": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "Get config",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.Config"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "operationId": "Create or update config",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.Config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/stores": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "Get stores",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.StoreResponse"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "operationId": "Create or update store",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.StoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.StoreResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Storage"
        ],
        "operationId": "Delete store",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/items": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "Get items",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.ItemResponse"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "operationId": "Create or update items",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.ItemRequest"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Storage"
        ],
        "operationId": "Delete item",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/orders": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "Get orders",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.OrderResponse"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "operationId": "Create or update order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.OrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.OrderResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Storage"
        ],
        "operationId": "Delete order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/orders/{id}/request": {
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "Request order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/orders/{id}/cancel": {
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "Cancel order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/orders/{id}/pick": {
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "Pick order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.PickedOrderLine"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/orders/{id}/deliver": {
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "Deliver order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.DeliveredOrderLine"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/orders/{id}/accept": {
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "Accept order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.AcceptedOrderLine"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/stocktakes": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "Get stocktakes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.StockTakeResponse"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "operationId": "Create or update stocktake",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.StockTakeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.StockTakeResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Storage"
        ],
        "operationId": "Delete stocktake",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/stocktakes/{id}/approve": {
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "Approve StockTake",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/stocktakes/{id}/complete": {
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "Complete StockTake",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.StockTakeLineRequest"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/stocktakes/{id}/start": {
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "Start StockTake",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Storage/stocktakes/{id}/revert": {
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "Revert StockTake",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Swish/status/{number}": {
      "get": {
        "tags": [
          "Swish"
        ],
        "operationId": "Check swish status",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Swish.Contracts.ValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TableArea": {
      "get": {
        "tags": [
          "TableArea"
        ],
        "operationId": "Get Table Areas",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableArea"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TableArea"
        ],
        "operationId": "Create TableArea",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableAreaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableArea"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TableArea/{tableAreaNumber}": {
      "put": {
        "tags": [
          "TableArea"
        ],
        "operationId": "Update TableArea",
        "parameters": [
          {
            "name": "tableAreaNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableAreaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableArea"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Template/digitalreceipt": {
      "get": {
        "tags": [
          "Template"
        ],
        "operationId": "GetDigitalReceiptTemplate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.DigitalReceiptTemplate"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Template"
        ],
        "operationId": "UpdateDigitalReceiptTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.DigitalReceiptTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Template/paperreceipt": {
      "get": {
        "tags": [
          "Template"
        ],
        "operationId": "GetPaperReceiptTemplate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.PaperReceiptTemplate"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Template"
        ],
        "operationId": "UpdatePaperReceiptTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.PaperReceiptTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Template/kitchenTicket": {
      "get": {
        "tags": [
          "Template"
        ],
        "operationId": "GetKitchenTicket",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.KitchenTicketTemplate"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Template"
        ],
        "operationId": "UpdateKitchenTicket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.KitchenTicketTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.KitchenTicketTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Tripletex/accounts": {
      "get": {
        "tags": [
          "Tripletex"
        ],
        "operationId": "GetTripletexAccounts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.InternalApi.Tripletex.Contracts.TripletexAccount"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tripletex"
        ],
        "operationId": "AddTripletexAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Tripletex.Contracts.TripletexAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Tripletex/config": {
      "get": {
        "tags": [
          "Tripletex"
        ],
        "operationId": "GetTripletexConfiguration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Tripletex.Contracts.TripletexConfigurationResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tripletex"
        ],
        "operationId": "UpdateTripletexConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.InternalApi.Tripletex.Contracts.TripletexConfigurationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Tripletex"
        ],
        "operationId": "DeleteTripletexConfiguration",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Tripletex/config/auth": {
      "put": {
        "tags": [
          "Tripletex"
        ],
        "operationId": "SetTripletexEmployeeToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Tripletex/config/finalize": {
      "put": {
        "tags": [
          "Tripletex"
        ],
        "operationId": "ActivateTripletexIntegration",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Tripletex/voucher/sync": {
      "post": {
        "tags": [
          "Tripletex"
        ],
        "operationId": "SyncTripletexVouchers",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Variants": {
      "get": {
        "tags": [
          "Variants"
        ],
        "operationId": "GetAllVariants",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.Variant"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Variants"
        ],
        "operationId": "InsertVariant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.Variant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Variants"
        ],
        "operationId": "UpdateVariant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.Variant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Variants"
        ],
        "operationId": "DeleteVariant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Variants/{id}": {
      "get": {
        "tags": [
          "Variants"
        ],
        "operationId": "GetVariantById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.Variant"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/VatGroups": {
      "get": {
        "tags": [
          "VatGroups"
        ],
        "operationId": "GetAllVatGroups",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.VatGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/VatGroups/{id}": {
      "get": {
        "tags": [
          "VatGroups"
        ],
        "operationId": "GetVatGroupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.VatGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Vipps/validate/{number}": {
      "get": {
        "tags": [
          "Vipps"
        ],
        "operationId": "Check vipps status",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open.InternalApi.Vipps.Contracts.VippsNumberValidationResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Open.InternalApi.Accounting.Contracts.AccountType": {
        "enum": [
          "Payment",
          "ProductGroup",
          "Vat",
          "Rounding",
          "Error",
          "Tipping"
        ],
        "type": "string"
      },
      "Open.InternalApi.Accounting.Contracts.Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.AccountType"
          },
          "externalCode": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "takeawayAccountNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Accounting.Contracts.CostCenterCodeMap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Accounting.Contracts.VatCode": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "number",
            "format": "double"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Accounting.Contracts.AccountConfiguration": {
        "type": "object",
        "properties": {
          "separateAccountingForVat": {
            "type": "boolean"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.Account"
            },
            "nullable": true
          },
          "costCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.CostCenterCodeMap"
            },
            "nullable": true
          },
          "vatCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.VatCode"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Accounting.Contracts.Posting": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "costCenterCode": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "vatRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Accounting.Contracts.Verification": {
        "type": "object",
        "properties": {
          "referenceSeries": {
            "type": "string",
            "nullable": true
          },
          "verificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "postings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.Posting"
            },
            "nullable": true
          },
          "cashRegisterNumbers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "accountingMinDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "accountingMaxDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "exportedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Accounting.Contracts.MissingAccount": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Accounting.Contracts.VerificationExportResult": {
        "type": "object",
        "properties": {
          "verifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.Verification"
            },
            "nullable": true
          },
          "missingAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.MissingAccount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Accounting.Contracts.ExportType": {
        "enum": [
          "SIE",
          "GBAT10"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Accounting.VerificationExportConfig": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "addMissingNumbers": {
            "type": "boolean"
          },
          "separateVat": {
            "type": "boolean"
          },
          "exportType": {
            "$ref": "#/components/schemas/Open.InternalApi.Accounting.Contracts.ExportType"
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "voucherType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.SalesUnit": {
        "required": [
          "abbreviation",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.VariantOption": {
        "required": [
          "name",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "sortOrder": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleVariantResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "noOfSelectableOptions": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "variantOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.VariantOption"
            },
            "nullable": true
          },
          "minCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleType": {
        "enum": [
          "Salable",
          "NonSalable",
          "Service"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleCombination": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "string",
            "format": "uuid"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleResponse": {
        "required": [
          "articleNumber",
          "articleType",
          "hasOpenPrice",
          "isActive",
          "isAddOn",
          "isDiscountable",
          "isSeparateTicket",
          "name",
          "productGroupId",
          "servingPriority",
          "takeawayAllowed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "articleNumber": {
            "type": "string"
          },
          "isAddOn": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDiscountable": {
            "type": "boolean"
          },
          "isSeparateTicket": {
            "type": "boolean"
          },
          "servingPriority": {
            "type": "integer",
            "format": "int32"
          },
          "hasOpenPrice": {
            "type": "boolean"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "takeawayAllowed": {
            "type": "boolean"
          },
          "takeawayPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "productGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "salesUnitId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "articleBarcodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "salesUnit": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.SalesUnit"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleVariantResponse"
            },
            "nullable": true
          },
          "addOns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleResponse"
            },
            "nullable": true
          },
          "menuCategoryIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "articleType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleType"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "ingredientInformation": {
            "type": "string",
            "nullable": true
          },
          "allergens": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "inventoryTracking": {
            "type": "boolean"
          },
          "combinationArticles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleCombination"
            },
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "category": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleVariantRequest": {
        "required": [
          "sortOrder",
          "variantId"
        ],
        "type": "object",
        "properties": {
          "variantId": {
            "type": "string",
            "format": "uuid"
          },
          "sortOrder": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleRequest": {
        "required": [
          "articleNumber",
          "articleType",
          "hasOpenPrice",
          "isActive",
          "isAddOn",
          "isDiscountable",
          "isSeparateTicket",
          "name",
          "productGroupId",
          "servingPriority",
          "takeawayAllowed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "articleNumber": {
            "type": "string"
          },
          "isAddOn": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDiscountable": {
            "type": "boolean"
          },
          "isSeparateTicket": {
            "type": "boolean"
          },
          "servingPriority": {
            "type": "integer",
            "format": "int32"
          },
          "hasOpenPrice": {
            "type": "boolean"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "takeawayAllowed": {
            "type": "boolean"
          },
          "takeawayPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "productGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "salesUnitId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "articleBarcodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "salesUnit": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.SalesUnit"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleVariantRequest"
            },
            "nullable": true
          },
          "addOnIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "articleType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleType"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "ingredientInformation": {
            "type": "string",
            "nullable": true
          },
          "allergens": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "inventoryTracking": {
            "type": "boolean"
          },
          "combinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleCombination"
            },
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "category": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.ArticleBarcode": {
        "type": "object",
        "properties": {
          "articleId": {
            "type": "string",
            "format": "uuid"
          },
          "barcode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Companies.CashRegister": {
        "required": [
          "cashRegisterNumber",
          "controlUnit",
          "costCenterId",
          "deviceSerial",
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cashRegisterNumber": {
            "type": "integer",
            "format": "int32"
          },
          "controlUnit": {
            "type": "string"
          },
          "deviceSerial": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "costCenterId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Companies.CashRegisterPatchRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Companies.Address": {
        "required": [
          "address1",
          "city",
          "phoneNumber",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Companies.Company": {
        "required": [
          "address",
          "currencyIsoAlphaCode",
          "endOfDay",
          "id",
          "name",
          "organizationNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "currencyIsoAlphaCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organizationNumber": {
            "type": "string"
          },
          "endOfDay": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.Address"
          },
          "confirmedDetails": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Configuration.UiConfiguration": {
        "type": "object",
        "properties": {
          "isEnterprise": {
            "type": "boolean"
          },
          "isChildCompany": {
            "type": "boolean"
          },
          "isExternalOrderEnabled": {
            "type": "boolean"
          },
          "isTableHandlingEnabled": {
            "type": "boolean"
          },
          "isStorageEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Companies.CostCenterResponse": {
        "required": [
          "companyId",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.Address"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Companies.CostCenterRequest": {
        "required": [
          "companyId",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Companies.Address"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Statistics.SaleStatistics": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Statistics.CostCenter": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          },
          "totalCampaignAndLoyaltyDiscount": {
            "type": "number",
            "format": "double"
          },
          "cashRegisters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Statistics.SaleStatistics"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Statistics.HourlySale": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "string",
            "nullable": true
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          },
          "totalCampaignAndLoyaltyDiscount": {
            "type": "number",
            "format": "double"
          },
          "averageSale": {
            "type": "number",
            "format": "double"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Statistics.SaleStatistics"
            },
            "nullable": true
          },
          "costCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Statistics.CostCenter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Statistics.Article": {
        "type": "object",
        "properties": {
          "articleName": {
            "type": "string",
            "nullable": true
          },
          "productGroup": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Statistics.Payment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Statistics.DailySale": {
        "type": "object",
        "properties": {
          "saleDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          },
          "averageSale": {
            "type": "number",
            "format": "double"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "hours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Statistics.HourlySale"
            },
            "nullable": true
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Statistics.Article"
            },
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Statistics.Payment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.DeviceActivation.Product": {
        "enum": [
          "Undefined",
          "OpenTwo",
          "PinPad",
          "StockTakingApp",
          "KitchenDisplay",
          "SelfserviceDisplay"
        ],
        "type": "string"
      },
      "Open.InternalApi.Companies.Contracts.DeviceType": {
        "enum": [
          "Undefined",
          "Tablet",
          "Phone",
          "WestpayTerminal",
          "HipsPaxTerminal",
          "AdyenCastleTerminal",
          "SoftPayTerminal",
          "VerifoneTerminal",
          "OrderHeroTerminal"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Responses.LicenseOption": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "default": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Responses.DeviceActivationDetails": {
        "required": [
          "deviceType",
          "name",
          "product",
          "reactivation"
        ],
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.DeviceActivation.Product"
          },
          "deviceType": {
            "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.DeviceType"
          },
          "name": {
            "type": "string"
          },
          "reactivation": {
            "type": "boolean"
          },
          "hasAvailableLicense": {
            "type": "boolean"
          },
          "availableTerminalLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Responses.LicenseOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.DeviceActivation.DeviceActivation": {
        "required": [
          "activationCode",
          "name",
          "product"
        ],
        "type": "object",
        "properties": {
          "activationCode": {
            "maxLength": 6,
            "minLength": 6,
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.DeviceActivation.Product"
          },
          "name": {
            "type": "string"
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "replaceCashregisterId": {
            "type": "string",
            "nullable": true
          },
          "terminalLicenseId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Companies.Contracts.DeviceState": {
        "enum": [
          "Online",
          "Offline"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Devices.Device": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "macAddress": {
            "type": "string",
            "nullable": true
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "acquired": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.DeviceType"
          },
          "lastStateChange": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastKnownState": {
            "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.DeviceState"
          }
        },
        "additionalProperties": false
      },
      "Open.Integrations.Personalkollen.Contracts.Configuration": {
        "type": "object",
        "properties": {
          "isActivated": {
            "type": "boolean"
          },
          "isSetupCompleted": {
            "type": "boolean"
          },
          "reAuthenticationRequired": {
            "type": "boolean"
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "employeeSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.Integrations.Personalkollen.Contracts.ChangeAccessTokenRequest": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Employees.AccessLevel": {
        "enum": [
          "User",
          "Administrator",
          "Owner"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Employees.EmployeeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userRole": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Employees.AccessLevel"
          },
          "employeeNumber": {
            "type": "string",
            "nullable": true
          },
          "personalIdentificationNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "invitationExpirationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Employees.EmployeeRequest": {
        "required": [
          "firstName",
          "lastName",
          "userRole"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userRole": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Employees.AccessLevel"
          },
          "employeeNumber": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "personalIdentificationNumber": {
            "minLength": 10,
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "minLength": 9,
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "emailAddress": {
            "minLength": 7,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "externalId": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Employees.Contracts.EmployeePin": {
        "type": "object",
        "properties": {
          "pin": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.OrderStateOption": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.Settings": {
        "required": [
          "accepted",
          "completed"
        ],
        "type": "object",
        "properties": {
          "isIntegrationActive": {
            "type": "boolean"
          },
          "noManualHandling": {
            "type": "boolean"
          },
          "showPreperationTime": {
            "type": "boolean"
          },
          "showDialogWhenCancelOrder": {
            "type": "boolean"
          },
          "pending": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.OrderStateOption"
          },
          "accepted": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.OrderStateOption"
          },
          "inProgress": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.OrderStateOption"
          },
          "ready": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.OrderStateOption"
          },
          "beingDelivered": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.OrderStateOption"
          },
          "completed": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.OrderStateOption"
          },
          "cancelled": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.OrderStateOption"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Contracts.SalesChannel": {
        "enum": [
          "Test",
          "UberEats",
          "DeliveryHero",
          "OpenOrder"
        ],
        "type": "string"
      },
      "Open.InternalApi.ExternalOrders.Contracts.IntegrationStatus": {
        "enum": [
          "Active",
          "Disabled",
          "ActivationRequested",
          "DeactivationRequested"
        ],
        "type": "string"
      },
      "Open.InternalApi.ExternalOrders.Contracts.IntegrationChannelStatus": {
        "type": "object",
        "properties": {
          "integration": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.SalesChannel"
          },
          "status": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Contracts.IntegrationStatus"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Fiken.Contracts.FikenAccount": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Fiken.Contracts.UserConfig": {
        "type": "object",
        "properties": {
          "exportStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastVoucherSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "isAuthenticated": {
            "type": "boolean"
          },
          "companySlug": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Fiken.Contracts.FikenCompany": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "hasApiAccess": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Fiken.Contracts.AuthRequest": {
        "type": "object",
        "properties": {
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Fortnox.Contracts.FortnoxAccount": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Fortnox.CreateFortnoxAccountRequest": {
        "required": [
          "name",
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Fortnox.Contracts.Configuration": {
        "type": "object",
        "properties": {
          "isActivated": {
            "type": "boolean"
          },
          "hasInvoice": {
            "type": "boolean"
          },
          "isSetupCompleted": {
            "type": "boolean"
          },
          "reAuthenticationRequired": {
            "type": "boolean"
          },
          "exportStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "voucherSeriesCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Fortnox.Contracts.ExportConfigurationRequest": {
        "type": "object",
        "properties": {
          "exportStartDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Fortnox.Contracts.AuthCodeRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "redirectUri": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Fortnox.Contracts.VoucherSeriesItem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Loyalties.Contracts.LoyaltyChannel": {
        "enum": [
          "Open",
          "Voyado"
        ],
        "type": "string"
      },
      "Open.InternalApi.Loyalties.Contracts.SignupMethods": {
        "enum": [
          "SocialSecurityNumber",
          "Email",
          "MobilePhoneNumber"
        ],
        "type": "string"
      },
      "Open.InternalApi.Loyalties.Contracts.IdentificationMethods": {
        "enum": [
          "SocialSecurityNumber",
          "Email",
          "MobilePhoneNumber",
          "AccountId"
        ],
        "type": "string"
      },
      "Open.InternalApi.Loyalties.Contracts.VoucherValueType": {
        "enum": [
          "Money",
          "FreeArticle",
          "Percentage"
        ],
        "type": "string"
      },
      "Open.InternalApi.Loyalties.Contracts.Voucher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "expiresOn": {
            "type": "string",
            "format": "date-time"
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "$ref": "#/components/schemas/Open.InternalApi.Loyalties.Contracts.VoucherValueType"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "currencyIsoAlpha": {
            "type": "string",
            "nullable": true
          },
          "validArticles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "discountPercentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Loyalties.Contracts.MembershipLevelConfiguration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "pointsThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "vouchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Loyalties.Contracts.Voucher"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "moneyToPointsFactor": {
            "type": "number",
            "format": "double"
          },
          "pointsToMoneyFactor": {
            "type": "number",
            "format": "double"
          },
          "pointsValidityYears": {
            "type": "integer",
            "format": "int32"
          },
          "excludeArticles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "excludeProductGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Loyalties.Contracts.BonusConfiguration": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "memberShipLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Loyalties.Contracts.MembershipLevelConfiguration"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Loyalties.LoyaltiesConfiguration": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "loyaltyChannel": {
            "$ref": "#/components/schemas/Open.InternalApi.Loyalties.Contracts.LoyaltyChannel"
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "signupMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Loyalties.Contracts.SignupMethods"
            },
            "nullable": true
          },
          "identificationMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Loyalties.Contracts.IdentificationMethods"
            },
            "nullable": true
          },
          "bonusSystem": {
            "$ref": "#/components/schemas/Open.InternalApi.Loyalties.Contracts.BonusConfiguration"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Articles.Contracts.Menu.MenuType": {
        "enum": [
          "TakeAway",
          "Delivery"
        ],
        "type": "string"
      },
      "Open.InternalApi.Articles.Contracts.Menu.Addon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Articles.Contracts.Menu.AddonCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "minCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxCount": {
            "type": "integer",
            "format": "int32"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "addons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.Addon"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Articles.Contracts.Menu.Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "articleId": {
            "type": "string",
            "format": "uuid"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "addonCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.AddonCategory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Articles.Contracts.Menu.ProductCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.Product"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "System.DayOfWeek": {
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "type": "string"
      },
      "Open.InternalApi.Articles.Contracts.Menu.MenuSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "weekdays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.DayOfWeek"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Articles.Contracts.Menu.Menu": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.MenuType"
          },
          "costCenterId": {
            "type": "string",
            "format": "uuid"
          },
          "isPublished": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "lastPublished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.ProductCategory"
            },
            "nullable": true
          },
          "schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Articles.Contracts.Menu.MenuSchedule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Integrations.DeliveryHero.Contracts.DeliveryHero.CatalogImportStatus": {
        "enum": [
          "In_Progress",
          "Done",
          "Done_With_Errors",
          "Failed"
        ],
        "type": "string"
      },
      "Open.InternalApi.ExternalOrders.Integrations.DeliveryHero.Contracts.DeliveryHero.DeliveryHeroCatalogImportStatus+Detail": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "posVendorId": {
            "type": "string",
            "nullable": true
          },
          "platformVendorId": {
            "type": "string",
            "nullable": true
          },
          "globalEntityId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.ExternalOrders.Integrations.DeliveryHero.Contracts.DeliveryHero.DeliveryHeroCatalogImportStatus": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "catalogImportId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Integrations.DeliveryHero.Contracts.DeliveryHero.CatalogImportStatus"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.ExternalOrders.Integrations.DeliveryHero.Contracts.DeliveryHero.DeliveryHeroCatalogImportStatus+Detail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryArticleResponse": {
        "required": [
          "articleId",
          "menuCategoryId",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "menuCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "articleId": {
            "type": "string",
            "format": "uuid"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryResponse": {
        "required": [
          "color",
          "isActive",
          "name",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "menuCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "costCenterId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "color": {
            "type": "string"
          },
          "menuCategoryArticles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryArticleResponse"
            },
            "nullable": true
          },
          "menuCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryResponse"
            },
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryArticleRequest": {
        "required": [
          "articleId",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "articleId": {
            "type": "string",
            "format": "uuid"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryRequest": {
        "required": [
          "color",
          "isActive",
          "name",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "menuCategoryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "costCenterId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "color": {
            "type": "string"
          },
          "menuCategoryArticles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.MenuCategoryArticleRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Notifications.Contracts.MarkMultipleAsReadRequest": {
        "type": "object",
        "properties": {
          "notificationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Notifications.Contracts.NotificationType": {
        "enum": [
          "Information",
          "Warning",
          "Error"
        ],
        "type": "string"
      },
      "Open.InternalApi.Notifications.Contracts.NotificationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "notificationId": {
            "type": "integer",
            "format": "int32"
          },
          "read": {
            "type": "boolean"
          },
          "notificationType": {
            "$ref": "#/components/schemas/Open.InternalApi.Notifications.Contracts.NotificationType"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          },
          "headerFallback": {
            "type": "string",
            "nullable": true
          },
          "descriptionFallback": {
            "type": "string",
            "nullable": true
          },
          "actionLink": {
            "type": "string",
            "nullable": true
          },
          "extraData": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Payments.PaymentType": {
        "enum": [
          "Cash",
          "Card",
          "Open",
          "SimpleSwish",
          "FortnoxInvoice",
          "Swish",
          "Vipps"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Payments.PaymentMethod": {
        "required": [
          "isActive",
          "name",
          "openCashDrawer",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "openCashDrawer": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Payments.PaymentType"
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Payments.PaymentConfigurationValidationResult": {
        "enum": [
          "Success",
          "Invalid",
          "Error"
        ],
        "type": "string"
      },
      "Open.InternalApi.Planday.Contracts.PlandayDepartment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Planday.Contracts.PlandayUserConfig": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "isAuthenticated": {
            "type": "boolean"
          },
          "includeVatInTurnover": {
            "type": "boolean"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Planday.Contracts.AuthRequest": {
        "type": "object",
        "properties": {
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Printers.Contracts.PrinterState": {
        "enum": [
          "Offline",
          "Online",
          "CoverOpen",
          "OverTemperature",
          "CutterError",
          "MechanicalError",
          "PresenterPaperJam",
          "PaperLow",
          "PaperEmpty",
          "Unknown"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Printers.PrinterAction": {
        "enum": [
          "Receipt",
          "OrderTicket"
        ],
        "type": "string"
      },
      "Open.InternalApi.Printers.Contracts.PrinterType": {
        "enum": [
          "Network",
          "CashRegister"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Printers.Printer": {
        "required": [
          "actions",
          "mac",
          "name",
          "state"
        ],
        "type": "object",
        "properties": {
          "mac": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "costCenterIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/Open.InternalApi.Printers.Contracts.PrinterState"
          },
          "actions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Printers.PrinterAction"
            }
          },
          "printerType": {
            "$ref": "#/components/schemas/Open.InternalApi.Printers.Contracts.PrinterType"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.ProductGroup": {
        "required": [
          "name",
          "takeawayVatGroupId",
          "vatGroupId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "vatGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "takeawayVatGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.IndustryTemplate": {
        "type": "object",
        "properties": {
          "industryName": {
            "type": "string",
            "nullable": true
          },
          "productGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.ProductGroup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ResourceType": {
        "enum": [
          "Images"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ResourceCategory": {
        "enum": [
          "Logos",
          "Articles"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ContentType": {
        "enum": [
          "ImagePng",
          "ImageJpg"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.DocumentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "publicUri": {
            "type": "string",
            "nullable": true
          },
          "resourceType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ResourceType"
          },
          "resourceCategory": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ResourceCategory"
          },
          "contentType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ContentType"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.DocumentRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "resourceType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ResourceType"
          },
          "resourceCategory": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ResourceCategory"
          },
          "contentType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.PublicResources.ContentType"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.ProductGroupSale": {
        "required": [
          "discount",
          "finalSaleAmountExclVat",
          "finalSaleAmountInclVat",
          "productGroupId",
          "productGroupName",
          "vatAmount",
          "vatRate"
        ],
        "type": "object",
        "properties": {
          "productGroupId": {
            "type": "string"
          },
          "productGroupName": {
            "type": "string"
          },
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "vatAmount": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "finalSaleAmountExclVat": {
            "type": "number",
            "format": "double"
          },
          "finalSaleAmountInclVat": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.ReportPayment": {
        "required": [
          "amount",
          "id",
          "paymentType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "paymentType": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.MasterCorrectionDetail": {
        "required": [
          "count",
          "discount",
          "finalSaleAmountExclVat",
          "finalSaleAmountInclVat",
          "productGroupId",
          "productGroupName",
          "vatAmount",
          "vatRate"
        ],
        "type": "object",
        "properties": {
          "productGroupId": {
            "type": "string"
          },
          "productGroupName": {
            "type": "string"
          },
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "vatAmount": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "finalSaleAmountExclVat": {
            "type": "number",
            "format": "double"
          },
          "finalSaleAmountInclVat": {
            "type": "number",
            "format": "double"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.ZReport": {
        "required": [
          "articlesSoldCount",
          "cashRegisterName",
          "cashRegisterNumber",
          "companyName",
          "correctionAmount",
          "correctionCount",
          "discountAmount",
          "discountCount",
          "employeeName",
          "extraAmount",
          "extraCount",
          "grandNetTotal",
          "grandTotalReturns",
          "grandTotalSales",
          "id",
          "masterCorrectionCount",
          "masterCorrectionDetails",
          "organizationNumber",
          "paymentTotal",
          "productGroupSales",
          "productGroupTotal",
          "productGroupTotalExclVat",
          "productGroupTotalVat",
          "receiptCopyAmount",
          "receiptCopyCount",
          "receiptCount",
          "reportPayments",
          "returnCount",
          "salesCount",
          "servicesSoldCount",
          "tillOpeningCount",
          "totalChangeInRegisterAmount",
          "totalMasterCorrectedAmountExclVat",
          "totalMasterCorrectedAmountInclVat",
          "totalMasterCorrectedVat",
          "totalReturnsExclVat",
          "totalReturnsInclVat",
          "totalReturnsVat",
          "totalSalesExclVat",
          "totalSalesInclVat",
          "totalSalesVat",
          "totalVatAmount",
          "withdrawAmount",
          "withdrawCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "serialNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cashRegisterNumber": {
            "type": "string"
          },
          "cashRegisterName": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "organizationNumber": {
            "type": "string"
          },
          "employeeName": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstSale": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastSale": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalSalesInclVat": {
            "type": "number",
            "format": "double"
          },
          "totalSalesExclVat": {
            "type": "number",
            "format": "double"
          },
          "totalSalesVat": {
            "type": "number",
            "format": "double"
          },
          "totalReturnsInclVat": {
            "type": "number",
            "format": "double"
          },
          "totalReturnsExclVat": {
            "type": "number",
            "format": "double"
          },
          "totalReturnsVat": {
            "type": "number",
            "format": "double"
          },
          "totalVatAmount": {
            "type": "number",
            "format": "double"
          },
          "totalChangeInRegisterAmount": {
            "type": "number",
            "format": "double"
          },
          "withdrawAmount": {
            "type": "number",
            "format": "double"
          },
          "extraAmount": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "receiptCopyAmount": {
            "type": "number",
            "format": "double"
          },
          "correctionAmount": {
            "type": "number",
            "format": "double"
          },
          "withdrawCount": {
            "type": "integer",
            "format": "int32"
          },
          "extraCount": {
            "type": "integer",
            "format": "int32"
          },
          "discountCount": {
            "type": "integer",
            "format": "int32"
          },
          "receiptCopyCount": {
            "type": "integer",
            "format": "int32"
          },
          "correctionCount": {
            "type": "integer",
            "format": "int32"
          },
          "receiptCount": {
            "type": "integer",
            "format": "int32"
          },
          "tillOpeningCount": {
            "type": "integer",
            "format": "int32"
          },
          "articlesSoldCount": {
            "type": "integer",
            "format": "int32"
          },
          "servicesSoldCount": {
            "type": "integer",
            "format": "int32"
          },
          "salesCount": {
            "type": "integer",
            "format": "int32"
          },
          "returnCount": {
            "type": "integer",
            "format": "int32"
          },
          "masterCorrectionCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalMasterCorrectedAmountInclVat": {
            "type": "number",
            "format": "double"
          },
          "totalMasterCorrectedAmountExclVat": {
            "type": "number",
            "format": "double"
          },
          "totalMasterCorrectedVat": {
            "type": "number",
            "format": "double"
          },
          "grandTotalSales": {
            "type": "number",
            "format": "double"
          },
          "grandTotalReturns": {
            "type": "number",
            "format": "double"
          },
          "grandNetTotal": {
            "type": "number",
            "format": "double"
          },
          "productGroupTotalVat": {
            "type": "number",
            "format": "double"
          },
          "productGroupTotalExclVat": {
            "type": "number",
            "format": "double"
          },
          "productGroupTotal": {
            "type": "number",
            "format": "double"
          },
          "paymentTotal": {
            "type": "number",
            "format": "double"
          },
          "productGroupSales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.ProductGroupSale"
            }
          },
          "reportPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.ReportPayment"
            }
          },
          "masterCorrectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.MasterCorrectionDetail"
            }
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.VatDetail": {
        "type": "object",
        "properties": {
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "vatAmount": {
            "type": "number",
            "format": "double"
          },
          "netAmount": {
            "type": "number",
            "format": "double"
          },
          "sumAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.GrandTotalReport": {
        "required": [
          "articlesSoldCount",
          "cashRegisters",
          "companyName",
          "correctionAmount",
          "correctionCount",
          "discountAmount",
          "discountCount",
          "extraAmount",
          "extraCount",
          "grandNetTotal",
          "grandTotalReturns",
          "grandTotalSales",
          "organizationNumber",
          "paymentTotal",
          "productGroupSales",
          "productGroupTotal",
          "productGroupTotalExclVat",
          "productGroupTotalVat",
          "receiptCopyAmount",
          "receiptCopyCount",
          "receiptCount",
          "reportPayments",
          "returnCount",
          "salesCount",
          "servicesSoldCount",
          "tillOpeningCount",
          "totalChangeInRegisterAmount",
          "totalReturnsExclVat",
          "totalReturnsInclVat",
          "totalReturnsVat",
          "totalSalesExclVat",
          "totalSalesInclVat",
          "totalSalesVat",
          "totalVatAmount",
          "vatDetails",
          "withdrawAmount",
          "withdrawCount"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string"
          },
          "organizationNumber": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstSale": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastSale": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalSalesInclVat": {
            "type": "number",
            "format": "double"
          },
          "totalSalesExclVat": {
            "type": "number",
            "format": "double"
          },
          "totalSalesVat": {
            "type": "number",
            "format": "double"
          },
          "totalReturnsInclVat": {
            "type": "number",
            "format": "double"
          },
          "totalReturnsExclVat": {
            "type": "number",
            "format": "double"
          },
          "totalReturnsVat": {
            "type": "number",
            "format": "double"
          },
          "totalVatAmount": {
            "type": "number",
            "format": "double"
          },
          "totalChangeInRegisterAmount": {
            "type": "number",
            "format": "double"
          },
          "cashRegisters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "withdrawAmount": {
            "type": "number",
            "format": "double"
          },
          "extraAmount": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "receiptCopyAmount": {
            "type": "number",
            "format": "double"
          },
          "correctionAmount": {
            "type": "number",
            "format": "double"
          },
          "withdrawCount": {
            "type": "integer",
            "format": "int32"
          },
          "extraCount": {
            "type": "integer",
            "format": "int32"
          },
          "discountCount": {
            "type": "integer",
            "format": "int32"
          },
          "receiptCopyCount": {
            "type": "integer",
            "format": "int32"
          },
          "correctionCount": {
            "type": "integer",
            "format": "int32"
          },
          "receiptCount": {
            "type": "integer",
            "format": "int32"
          },
          "tillOpeningCount": {
            "type": "integer",
            "format": "int32"
          },
          "articlesSoldCount": {
            "type": "integer",
            "format": "int32"
          },
          "servicesSoldCount": {
            "type": "integer",
            "format": "int32"
          },
          "salesCount": {
            "type": "integer",
            "format": "int32"
          },
          "returnCount": {
            "type": "integer",
            "format": "int32"
          },
          "grandTotalSales": {
            "type": "number",
            "format": "double"
          },
          "grandTotalReturns": {
            "type": "number",
            "format": "double"
          },
          "grandNetTotal": {
            "type": "number",
            "format": "double"
          },
          "productGroupTotalVat": {
            "type": "number",
            "format": "double"
          },
          "productGroupTotalExclVat": {
            "type": "number",
            "format": "double"
          },
          "productGroupTotal": {
            "type": "number",
            "format": "double"
          },
          "paymentTotal": {
            "type": "number",
            "format": "double"
          },
          "productGroupSales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.ProductGroupSale"
            }
          },
          "reportPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.ReportPayment"
            }
          },
          "vatDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.VatDetail"
            }
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.Article": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "refunds": {
            "type": "integer",
            "format": "int32"
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "totalVat": {
            "type": "number",
            "format": "double"
          },
          "totalNet": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.ProductGroup": {
        "type": "object",
        "properties": {
          "productGroupName": {
            "type": "string",
            "nullable": true
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.Article"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "totalVat": {
            "type": "number",
            "format": "double"
          },
          "totalNet": {
            "type": "number",
            "format": "double"
          },
          "refunds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.ArticlesSummaryReport": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "totalVat": {
            "type": "number",
            "format": "double"
          },
          "totalNet": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalExtra": {
            "type": "number",
            "format": "double"
          },
          "totalRefund": {
            "type": "number",
            "format": "double"
          },
          "transactions": {
            "type": "integer",
            "format": "int32"
          },
          "averageSale": {
            "type": "number",
            "format": "double"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.ProductGroup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.Employee": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "totalVat": {
            "type": "number",
            "format": "double"
          },
          "totalNet": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          },
          "totalExtra": {
            "type": "number",
            "format": "double"
          },
          "totalRefund": {
            "type": "number",
            "format": "double"
          },
          "averageSale": {
            "type": "number",
            "format": "double"
          },
          "averageDiscountPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "corrections": {
            "type": "integer",
            "format": "int32"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.ProductGroup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.EmployeesSummaryReport": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "totalVat": {
            "type": "number",
            "format": "double"
          },
          "totalNet": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalExtra": {
            "type": "number",
            "format": "double"
          },
          "totalRefund": {
            "type": "number",
            "format": "double"
          },
          "transactions": {
            "type": "integer",
            "format": "int32"
          },
          "averageSale": {
            "type": "number",
            "format": "double"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Reports.Employee"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Reports.CreateSaftReportRequest": {
        "type": "object",
        "properties": {
          "receiverEmail": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "cashRegisterNumbers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.ContactInformation": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.VatDetail": {
        "type": "object",
        "properties": {
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "vatAmount": {
            "type": "number",
            "format": "double"
          },
          "netAmount": {
            "type": "number",
            "format": "double"
          },
          "sumAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.ArticleType": {
        "enum": [
          "Salable",
          "NonSalable",
          "Service"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.SalesUnit": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "abbreviation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.ProductGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.SaleItemVariantOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.SaleItemVariant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.SaleItemVariantOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.SaleItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "articleId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "articleName": {
            "type": "string",
            "nullable": true
          },
          "articleNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "sellFactor": {
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "discountExtra": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "sumDiscount": {
            "type": "number",
            "format": "double"
          },
          "sum": {
            "type": "number",
            "format": "double"
          },
          "sumUnitPrice": {
            "type": "number",
            "format": "double"
          },
          "net": {
            "type": "number",
            "format": "double"
          },
          "vat": {
            "type": "number",
            "format": "double"
          },
          "isDiscountable": {
            "type": "boolean"
          },
          "isTakeAway": {
            "type": "boolean"
          },
          "hasOpenPrice": {
            "type": "boolean"
          },
          "articleType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.ArticleType"
          },
          "vatRate": {
            "type": "number",
            "format": "double"
          },
          "articleQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "salesUnit": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.SalesUnit"
          },
          "productGroup": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.ProductGroup"
          },
          "vatDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.VatDetail"
            },
            "nullable": true
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.SaleItemVariant"
            },
            "nullable": true
          },
          "addOns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.SaleItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.CardEntryMethod": {
        "enum": [
          "Chip",
          "Magnetic",
          "Manual",
          "ContactLess",
          "Unknown"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.Authorization": {
        "enum": [
          "Online",
          "Offline",
          "None",
          "Phone",
          "Unknown"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.CardDetails": {
        "type": "object",
        "properties": {
          "cardIdAlias": {
            "type": "string",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "terminalNumber": {
            "type": "string",
            "nullable": true
          },
          "aid": {
            "type": "string",
            "nullable": true
          },
          "cardName": {
            "type": "string",
            "nullable": true
          },
          "cardType": {
            "type": "string",
            "nullable": true
          },
          "cardAcquirerName": {
            "type": "string",
            "nullable": true
          },
          "acquirerReference": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "string",
            "nullable": true
          },
          "verificationMode": {
            "type": "string",
            "nullable": true
          },
          "cardEntryMethod": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.CardEntryMethod"
          },
          "authorizationType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.Authorization"
          },
          "cardOrderId": {
            "type": "string",
            "nullable": true
          },
          "emvData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.CashDetails": {
        "type": "object",
        "properties": {
          "returnAmount": {
            "type": "number",
            "format": "double"
          },
          "receiveAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.OpenPaymentDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "overpayAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.MobilePaymentType": {
        "enum": [
          "SimpleSwish",
          "Swish",
          "Vipps"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.MobilePaymentDetails": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.MobilePaymentType"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.InvoicePaymentDetails": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "invoiceFee": {
            "type": "number",
            "format": "double"
          },
          "invoiceReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.Payment": {
        "type": "object",
        "properties": {
          "originalSalePaymentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currencyIsoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "extra": {
            "type": "number",
            "format": "double"
          },
          "withdrawAmount": {
            "type": "number",
            "format": "double"
          },
          "cardDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.CardDetails"
          },
          "cashDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.CashDetails"
          },
          "openPaymentDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.OpenPaymentDetails"
          },
          "mobilePaymentDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.MobilePaymentDetails"
          },
          "invoicePaymentDetails": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.PaymentDetails.InvoicePaymentDetails"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.SaleType": {
        "enum": [
          "SaleOrder",
          "CreditOrder",
          "NegativeOrder",
          "RebookPaymentMethodOrder",
          "Exchange",
          "Withdraw",
          "Expense"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Sales.Sale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "originalSaleId": {
            "type": "string",
            "nullable": true
          },
          "saleDate": {
            "type": "string",
            "format": "date-time"
          },
          "localSaleDate": {
            "type": "string",
            "format": "date-time"
          },
          "saleNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "cashRegisterNumber": {
            "type": "integer",
            "format": "int32"
          },
          "cashRegisterName": {
            "type": "string",
            "nullable": true
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "costCenterName": {
            "type": "string",
            "nullable": true
          },
          "receiptNumber": {
            "type": "integer",
            "format": "int32"
          },
          "currencyIsoAlphaCode": {
            "type": "string",
            "nullable": true
          },
          "cashRoundingDelta": {
            "type": "number",
            "format": "double"
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "totalSum": {
            "type": "number",
            "format": "double"
          },
          "totalNet": {
            "type": "number",
            "format": "double"
          },
          "totalVat": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          },
          "controlUnit": {
            "type": "string",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "refundReason": {
            "type": "string",
            "nullable": true
          },
          "employee": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.Employee"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.ContactInformation"
          },
          "vatDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.VatDetail"
            },
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.SaleItem"
            },
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.Payment"
            },
            "nullable": true
          },
          "saleType": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Sales.SaleType"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.OngoingRouting": {
        "type": "object",
        "properties": {
          "autoProcessOrder": {
            "type": "boolean"
          },
          "fromTenantId": {
            "type": "string",
            "nullable": true
          },
          "fromStorageId": {
            "type": "string",
            "nullable": true
          },
          "toTenantId": {
            "type": "string",
            "nullable": true
          },
          "toStorageId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.OngoingConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "goodsOwnerId": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.OngoingRouting"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.Config": {
        "type": "object",
        "properties": {
          "automaticItems": {
            "type": "boolean"
          },
          "ongoing": {
            "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.OngoingConfig"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.Models.Address": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.StoreResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "costCenterIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.Models.Address"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.StoreRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "costCenterIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.Models.Address"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.Measurement": {
        "type": "object",
        "properties": {
          "volume": {
            "type": "string",
            "nullable": true
          },
          "lenght": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.ItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "articleId": {
            "type": "string",
            "nullable": true
          },
          "storeId": {
            "type": "string",
            "nullable": true
          },
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "barCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "minimumReOrderQuantity": {
            "type": "number",
            "format": "double"
          },
          "minimumReOrderPoint": {
            "type": "number",
            "format": "double"
          },
          "maximumHoldingQuantity": {
            "type": "number",
            "format": "double"
          },
          "measurment": {
            "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.Measurement"
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "lastStockTake": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "availableQuantity": {
            "type": "number",
            "format": "double"
          },
          "orderedQuantity": {
            "type": "number",
            "format": "double"
          },
          "reservedQuantity": {
            "type": "number",
            "format": "double"
          },
          "lastReceivedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastPurchasePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "averageValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isTrackingDisabled": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.ItemRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "articleId": {
            "type": "string",
            "nullable": true
          },
          "storeId": {
            "type": "string",
            "nullable": true
          },
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "barCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "minimumReOrderQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "minimumReOrderPoint": {
            "type": "number",
            "format": "double"
          },
          "maximumHoldingQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "measurment": {
            "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.Measurement"
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "isTrackingDisabled": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.OrderStatus": {
        "enum": [
          "Created",
          "Requested",
          "Cancelled",
          "Processing",
          "Intransit",
          "Delivered",
          "Accepted",
          "Returned"
        ],
        "type": "string"
      },
      "Open.InternalApi.Storages.Contracts.AcceptedOrderLine": {
        "type": "object",
        "properties": {
          "accepted": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.PickedOrderLine": {
        "type": "object",
        "properties": {
          "estimatedDelivery": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.DeliveredOrderLine": {
        "type": "object",
        "properties": {
          "delivered": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.OrderLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "accepted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.AcceptedOrderLine"
            },
            "nullable": true
          },
          "picked": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.PickedOrderLine"
            },
            "nullable": true
          },
          "delivered": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.DeliveredOrderLine"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.OrderResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "orderType": {
            "type": "string",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.OrderStatus"
          },
          "fromTenant": {
            "type": "string",
            "nullable": true
          },
          "fromStoreId": {
            "type": "string",
            "nullable": true
          },
          "fromStoreName": {
            "type": "string",
            "nullable": true
          },
          "toTenant": {
            "type": "string",
            "nullable": true
          },
          "toStoreId": {
            "type": "string",
            "nullable": true
          },
          "toStoreName": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.OrderLine"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.OrderLineRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.OrderRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "employeeName": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "fromTenant": {
            "type": "string",
            "nullable": true
          },
          "fromStoreId": {
            "type": "string",
            "nullable": true
          },
          "fromStoreName": {
            "type": "string",
            "nullable": true
          },
          "toTenant": {
            "type": "string",
            "nullable": true
          },
          "toStoreId": {
            "type": "string",
            "nullable": true
          },
          "toStoreName": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.OrderLineRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.StockTakeLine": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reported": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "diff": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "initialQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.StockTakeResponse": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "storeId": {
            "type": "string",
            "nullable": true
          },
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "approved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "approvedByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "approvedByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "completedByEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "completedByEmployeeName": {
            "type": "string",
            "nullable": true
          },
          "reverted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.StockTakeLine"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.StockTakeLineRequest": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "employeeName": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Storages.Contracts.StockTakeRequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "storeId": {
            "type": "string",
            "nullable": true
          },
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.InternalApi.Storages.Contracts.StockTakeLineRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Swish.Contracts.ValidationResult": {
        "enum": [
          "Succeded",
          "InvalidNumber",
          "InternalError"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TextAreaShape": {
        "type": "object",
        "properties": {
          "posX": {
            "type": "number",
            "format": "double"
          },
          "posY": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "angle": {
            "type": "number",
            "format": "double"
          },
          "fontSize": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.TableHandling.Contracts.TableAreaContracts.WallFormShape": {
        "enum": [
          "Rectangle",
          "Ellipse"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.TableArea.WallAreaShape": {
        "type": "object",
        "properties": {
          "posX": {
            "type": "number",
            "format": "double"
          },
          "posY": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "angle": {
            "type": "number",
            "format": "double"
          },
          "shape": {
            "$ref": "#/components/schemas/Open.InternalApi.TableHandling.Contracts.TableAreaContracts.WallFormShape"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableAreaLayoutInfo": {
        "type": "object",
        "properties": {
          "tableNumberFontSize": {
            "type": "integer",
            "format": "int32"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TextAreaShape"
            },
            "nullable": true
          },
          "walls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.WallAreaShape"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TableShapeType": {
        "enum": [
          "Rectangle",
          "Ellipse"
        ],
        "type": "string"
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableLayoutInfo": {
        "type": "object",
        "properties": {
          "posX": {
            "type": "number",
            "format": "double"
          },
          "posY": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "angle": {
            "type": "number",
            "format": "double"
          },
          "shape": {
            "$ref": "#/components/schemas/Open.InternalApi.TableHandling.Contracts.TableAreaContracts.TableShapeType"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.TableArea.Table": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "layoutInfo": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableLayoutInfo"
          },
          "numberOfSeats": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableArea": {
        "type": "object",
        "properties": {
          "tableAreaNumber": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "layoutInfo": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableAreaLayoutInfo"
          },
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.Table"
            },
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableAreaRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "costCenterId": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "layoutInfo": {
            "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.TableAreaLayoutInfo"
          },
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.TableArea.Table"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Companies.Contracts.Greetings": {
        "type": "object",
        "properties": {
          "header": {
            "type": "string",
            "nullable": true
          },
          "footer": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Companies.Contracts.DigitalReceiptTemplate": {
        "type": "object",
        "properties": {
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "accentColor": {
            "type": "string",
            "nullable": true
          },
          "bannerUrl": {
            "type": "string",
            "nullable": true
          },
          "greetings": {
            "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.Greetings"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Companies.Contracts.PaperReceiptTemplate": {
        "type": "object",
        "properties": {
          "printOrderNumber": {
            "type": "boolean"
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "greetings": {
            "$ref": "#/components/schemas/Open.InternalApi.Companies.Contracts.Greetings"
          },
          "qrCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Companies.Contracts.KitchenTicketTemplate": {
        "type": "object",
        "properties": {
          "printPrice": {
            "type": "boolean"
          },
          "useLargeItems": {
            "type": "boolean"
          },
          "printArticleDescription": {
            "type": "boolean"
          },
          "useLargeItemDetails": {
            "type": "boolean"
          },
          "useLargeDescription": {
            "type": "boolean"
          },
          "showUpcomingServings": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Tripletex.Contracts.TripletexAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Tripletex.Contracts.TripletexConfigurationResponse": {
        "type": "object",
        "properties": {
          "employeeTokenSet": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "isAuthenticated": {
            "type": "boolean"
          },
          "exportStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Tripletex.Contracts.TripletexConfigurationRequest": {
        "type": "object",
        "properties": {
          "exportStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.Variant": {
        "required": [
          "isActive",
          "minCount",
          "name",
          "variantOptions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "variantOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Open.PointOfSales.Api.BackOffice.Contracts.Articles.VariantOption"
            }
          },
          "isActive": {
            "type": "boolean"
          },
          "minCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Open.PointOfSales.Api.BackOffice.Contracts.Articles.VatGroup": {
        "required": [
          "id",
          "rate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "rate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Open.InternalApi.Vipps.Contracts.VippsNumberValidationResult": {
        "enum": [
          "Invalid",
          "Valid",
          "Error"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter JWT Bearer token **_only_**",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKeyAuthentication": {
        "type": "http",
        "description": "ApiKey Authorization header using the BasicAuth scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    },
    {
      "ApiKeyAuthentication": [ ]
    }
  ]
}
